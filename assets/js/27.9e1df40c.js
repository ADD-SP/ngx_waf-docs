(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{353:function(e,t,i){"use strict";i.r(t);var s=i(25),a=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"rule-description"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rule-description"}},[e._v("#")]),e._v(" Rule Description")]),e._v(" "),t("p",[e._v("This module uses the following configuration files,\nall of which must be in the same directory and to which nginx has read access.")]),e._v(" "),t("ul",[t("li",[e._v("IP whitelist with the file names "),t("code",[e._v("white-ipv4")]),e._v(" and "),t("code",[e._v("white-ipv6")]),e._v(".")]),e._v(" "),t("li",[e._v("IP blacklist with the filenames "),t("code",[e._v("ipv4")]),e._v(" and "),t("code",[e._v("ipv6")]),e._v(".")]),e._v(" "),t("li",[e._v("Url whitelist with the filename "),t("code",[e._v("white-url")]),e._v(".")]),e._v(" "),t("li",[e._v("Url blacklist with the filename "),t("code",[e._v("url")]),e._v(".")]),e._v(" "),t("li",[e._v("Get parameter blacklist with the filename "),t("code",[e._v("args")]),e._v(".")]),e._v(" "),t("li",[e._v("Post request body blacklist, with the filename "),t("code",[e._v("post")]),e._v(".")]),e._v(" "),t("li",[e._v("UserAgent blacklist with the filename "),t("code",[e._v("user-agent")]),e._v(".")]),e._v(" "),t("li",[e._v("Cookie blacklist, with the filename "),t("code",[e._v("cookie")]),e._v(".")]),e._v(" "),t("li",[e._v("Referer whitelist with the filename "),t("code",[e._v("white-referer")]),e._v(".")]),e._v(" "),t("li",[e._v("Referer blacklist with the filename "),t("code",[e._v("referer")]),e._v(".")]),e._v(" "),t("li",[e._v("Advanced rules with the file name "),t("code",[e._v("advaced")]),e._v(".")])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),t("p",[e._v("Some rule files require writing regular expressions, one regular expression per line.\nRegular expressions follow the "),t("a",{attrs:{href:"http://www.pcre.org/current/doc/html/pcre2syntax.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("PCRE standard"),t("OutboundLink")],1),e._v(".")])]),e._v(" "),t("h2",{attrs:{id:"ip-whitelist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ip-whitelist"}},[e._v("#")]),e._v(" IP Whitelist")]),e._v(" "),t("p",[e._v("The ip whitelist consists of the following two files.")]),e._v(" "),t("ul",[t("li",[e._v("ipv4 whitelist with the file name "),t("code",[e._v("white-ipv4")]),e._v(".")]),e._v(" "),t("li",[e._v("ipv6 whitelist with the file name "),t("code",[e._v("white-ipv6")]),e._v(".")])]),e._v(" "),t("p",[e._v("Specify one IP address or IP address range per line when writing.")]),e._v(" "),t("p",[e._v("Here are some examples.")]),e._v(" "),t("p",[e._v("Specifies a single ipv4 address.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("192.168.2.1\n")])])]),t("p",[e._v("Specifies an ipv4 address range.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("192.168.2.0/24\n")])])]),t("p",[e._v("Specifies a single ipv6 address.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("FE80::1000\n")])])]),t("p",[e._v("Specifies an ipv6 address range.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("FE80::/10\n")])])]),t("h2",{attrs:{id:"ip-blacklist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ip-blacklist"}},[e._v("#")]),e._v(" IP Blacklist")]),e._v(" "),t("p",[e._v("The IP blacklist consists of the following two files.")]),e._v(" "),t("ul",[t("li",[e._v("ipv4 blacklist with the file name "),t("code",[e._v("ipv4")]),e._v(".")]),e._v(" "),t("li",[e._v("ipv6 blacklist with the file name "),t("code",[e._v("ipv6")]),e._v(".")])]),e._v(" "),t("p",[e._v("Write the same as "),t("a",{attrs:{href:"#ip-whitelist"}},[e._v("IP Whitelist")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"url-whitelist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#url-whitelist"}},[e._v("#")]),e._v(" Url Whitelist")]),e._v(" "),t("p",[e._v("The Url whitelist file name is "),t("code",[e._v("white-url")]),e._v(", and the rule is written with one regular expression per line.\nUrl matched by any of the regular expressions will be released directly without subsequent checks.")]),e._v(" "),t("h2",{attrs:{id:"url-blacklist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#url-blacklist"}},[e._v("#")]),e._v(" Url Blacklist")]),e._v(" "),t("p",[e._v("The Url blacklist file name is "),t("code",[e._v("url")]),e._v(", and the rule is written with one regular expression per line.\nUrl will be blocked if it is matched by any of the regular expressions, and a 403 status code will be returned.")]),e._v(" "),t("h2",{attrs:{id:"get-parameter-blacklist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get-parameter-blacklist"}},[e._v("#")]),e._v(" Get Parameter Blacklist")]),e._v(" "),t("p",[e._v("The Get parameter is blacklisted with the file name "),t("code",[e._v("args")]),e._v(", and the rule is written with one regular expression per line.\nIf the Get parameter is matched by any of the regular expressions, it will be intercepted and a 403 status code will be returned.")]),e._v(" "),t("h2",{attrs:{id:"post-body-blacklist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#post-body-blacklist"}},[e._v("#")]),e._v(" Post body Blacklist")]),e._v(" "),t("p",[e._v("The file name of the Post body blacklist is "),t("code",[e._v("post")]),e._v(", and the rule is written with one regular expression per line.\nThe content of the Post body will be blocked if any of the regular expressions match it, and a 403 status code will be returned.")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("Sometimes this module does not perform Post body inspection, see "),t("RouterLink",{attrs:{to:"/guide/faq.html#post-inspection-failure"}},[e._v("FAQ")]),e._v(" for details.")],1)]),e._v(" "),t("h2",{attrs:{id:"user-agent-blacklist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#user-agent-blacklist"}},[e._v("#")]),e._v(" User-Agent Blacklist")]),e._v(" "),t("p",[e._v("The file name of the UserAgent blacklist is "),t("code",[e._v("user-agent")]),e._v(", and the rule is written with one regular expression per line.\nUserAgent will be blocked if any of the regular expressions match it, and a 403 status code will be returned.")]),e._v(" "),t("h2",{attrs:{id:"cookie-blacklist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie-blacklist"}},[e._v("#")]),e._v(" Cookie Blacklist")]),e._v(" "),t("p",[e._v("The file name of the cookie blacklist is "),t("code",[e._v("cookie")]),e._v(" and the rule is written with one regular expression per line.\nIf a cookie is matched by any of the regular expressions, it will be blocked and a 403 status code will be returned.")]),e._v(" "),t("h2",{attrs:{id:"referer-whitelist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#referer-whitelist"}},[e._v("#")]),e._v(" Referer Whitelist")]),e._v(" "),t("p",[e._v("The referer whitelist is named "),t("code",[e._v("white-referer")]),e._v(", and the rule is written with one regular expression per line.\nThe referer will be released if it is matched by any of the regular expressions, and no subsequent checks will be performed.")]),e._v(" "),t("h2",{attrs:{id:"referer-blacklist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#referer-blacklist"}},[e._v("#")]),e._v(" Referer Blacklist")]),e._v(" "),t("p",[e._v("The Referer blacklist file is named "),t("code",[e._v("referer")]),e._v(" and the rule is written with one regular expression per line.\nReferer will be blocked if it is matched by any of the regular expressions, and a 403 status code will be returned.")])])}),[],!1,null,null,null);t.default=a.exports}}]);