(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function n(n){for(var r,o,s=n[0],l=n[1],c=n[2],u=0,h=[];u<s.length;u++)o=s[u],Object.prototype.hasOwnProperty.call(i,o)&&i[o]&&h.push(i[o][0]),i[o]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);for(d&&d(n);h.length;)h.shift()();return a.push.apply(a,c||[]),t()}function t(){for(var e,n=0;n<a.length;n++){for(var t=a[n],r=!0,s=1;s<t.length;s++){var l=t[s];0!==i[l]&&(r=!1)}r&&(a.splice(n--,1),e=o(o.s=t[0]))}return e}var r={},i={8:0},a=[];function o(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.e=function(e){var n=[],t=i[e];if(0!==t)if(t)n.push(t[2]);else{var r=new Promise((function(n,r){t=i[e]=[n,r]}));n.push(t[2]=r);var a,s=document.createElement("script");s.charset="utf-8",s.timeout=120,o.nc&&s.setAttribute("nonce",o.nc),s.src=function(e){return o.p+"assets/js/"+({9:"vendors~docsearch"}[e]||e)+"."+{1:"632eea70",2:"3e4049ee",3:"c9caeb98",4:"14d7d714",5:"aa966c18",6:"63e6a7bb",7:"a02e05ba",9:"e06e619e",10:"dbe56695",11:"3ce229d2",12:"6df2a13c",13:"2fbc14fb",14:"79f0bc94",15:"a9c75a53",16:"90f412f5",17:"5a0da591",18:"00741604",19:"2df6684e",20:"e4d75808",21:"0376e09e",22:"8cd93f05",23:"3534e7c2",24:"542f1cdb",25:"a81f82fc",26:"518e0279",27:"9e1df40c",28:"6a196960",29:"f98a7279",30:"47624d64",31:"1c13a39c",32:"5fe17366",33:"f0d975ea",34:"78aa9f6f",35:"e7283fb6",36:"f394b95e",37:"2a10db91",38:"2f464d46",39:"98a34cfd",40:"07bcf6b0",41:"d175aa1e",42:"41c12642",43:"692e3aac",44:"89739f3f",45:"e4fd3ab6",46:"e62f6898",47:"ab95c6c5",48:"c7530b9a",49:"0249b3b4",50:"775910db",51:"44550aa5",52:"24cf39ae",53:"78cfc18d",54:"fd108f23",55:"a9734a43",56:"dabfbc19",57:"674c5c64",58:"439ffb3f",59:"83d2cd2d",60:"c62e8958",61:"351cad9c",62:"135948fd",63:"a59ca98e",64:"a63032c9",65:"b30eba0a",66:"c4e0ff1d",67:"98a6c2e2",68:"ec463ee0",69:"210eed00",70:"de7d7876",71:"fbb3679c",72:"cb3c8b40",73:"df3dbfd5",74:"f9f9a7b5",75:"c5d27717",76:"a123d687",77:"8447f073",78:"5465da14",79:"c5642884",80:"2c31ee90",81:"b68da930",82:"d8bb7f68",83:"71fa47bc"}[e]+".js"}(e);var l=new Error;a=function(n){s.onerror=s.onload=null,clearTimeout(c);var t=i[e];if(0!==t){if(t){var r=n&&("load"===n.type?"missing":n.type),a=n&&n.target&&n.target.src;l.message="Loading chunk "+e+" failed.\n("+r+": "+a+")",l.name="ChunkLoadError",l.type=r,l.request=a,t[1](l)}i[e]=void 0}};var c=setTimeout((function(){a({type:"timeout",target:s})}),12e4);s.onerror=s.onload=a,document.head.appendChild(s)}return Promise.all(n)},o.m=e,o.c=r,o.d=function(e,n,t){o.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,n){if(1&n&&(e=o(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)o.d(t,r,function(n){return e[n]}.bind(null,r));return t},o.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(n,"a",n),n},o.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},o.p="/ngx_waf-docs/",o.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=n,s=s.slice();for(var c=0;c<s.length;c++)n(s[c]);var d=l;a.push([122,0]),t()}([function(e,n,t){"use strict";var r="object"==typeof document&&document.all;e.exports=void 0===r&&void 0!==r?function(e){return"function"==typeof e||e===r}:function(e){return"function"==typeof e}},function(e,n,t){"use strict";var r=t(7),i=String,a=TypeError;e.exports=function(e){if(r(e))return e;throw new a(i(e)+" is not an object")}},function(e,n,t){"use strict";var r=function(e){return e&&e.Math===Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof global&&global)||r("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(e,n,t){"use strict";e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n,t){"use strict";var r=t(28),i=Function.prototype,a=i.call,o=r&&i.bind.bind(a,a);e.exports=r?o:function(e){return function(){return a.apply(e,arguments)}}},function(e,n,t){"use strict";var r=t(3);e.exports=!r((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,n,t){"use strict";var r=t(0),i=t(45),a=TypeError;e.exports=function(e){if(r(e))return e;throw new a(i(e)+" is not a function")}},function(e,n,t){"use strict";var r=t(0);e.exports=function(e){return"object"==typeof e?null!==e:r(e)}},function(e,n,t){"use strict";var r=t(4),i=t(26),a=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,n){return a(i(e),n)}},function(e,n,t){"use strict";var r=t(2),i=t(66).f,a=t(19),o=t(42),s=t(47),l=t(80),c=t(137);e.exports=function(e,n){var t,d,u,h,f,p=e.target,m=e.global,g=e.stat;if(t=m?r:g?r[p]||s(p,{}):r[p]&&r[p].prototype)for(d in n){if(h=n[d],u=e.dontCallGetSet?(f=i(t,d))&&f.value:t[d],!c(m?d:p+(g?".":"#")+d,e.forced)&&void 0!==u){if(typeof h==typeof u)continue;l(h,u)}(e.sham||u&&u.sham)&&a(h,"sham",!0),o(t,d,h,e)}}},function(e,n){var t=Array.isArray;e.exports=t},function(e,n,t){"use strict";var r=t(28),i=Function.prototype.call;e.exports=r?i.bind(i):function(){return i.apply(i,arguments)}},function(e,n,t){var r=t(92),i="object"==typeof self&&self&&self.Object===Object&&self,a=r||i||Function("return this")();e.exports=a},function(e,n,t){"use strict";var r=t(2),i=t(73),a=t(8),o=t(74),s=t(70),l=t(69),c=r.Symbol,d=i("wks"),u=l?c.for||c:c&&c.withoutSetter||o;e.exports=function(e){return a(d,e)||(d[e]=s&&a(c,e)?c[e]:u("Symbol."+e)),d[e]}},function(e,n,t){"use strict";t(123)},function(e,n,t){"use strict";var r=t(5),i=t(75),a=t(77),o=t(1),s=t(67),l=TypeError,c=Object.defineProperty,d=Object.getOwnPropertyDescriptor;n.f=r?a?function(e,n,t){if(o(e),n=s(n),o(t),"function"==typeof e&&"prototype"===n&&"value"in t&&"writable"in t&&!t.writable){var r=d(e,n);r&&r.writable&&(e[n]=t.value,t={configurable:"configurable"in t?t.configurable:r.configurable,enumerable:"enumerable"in t?t.enumerable:r.enumerable,writable:!1})}return c(e,n,t)}:c:function(e,n,t){if(o(e),n=s(n),o(t),i)try{return c(e,n,t)}catch(e){}if("get"in t||"set"in t)throw new l("Accessors not supported");return"value"in t&&(e[n]=t.value),e}},function(e,n,t){var r=t(195),i=t(198);e.exports=function(e,n){var t=i(e,n);return r(t)?t:void 0}},function(e,n){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,n,t){"use strict";e.exports=!1},function(e,n,t){"use strict";var r=t(5),i=t(15),a=t(29);e.exports=r?function(e,n,t){return i.f(e,n,a(1,t))}:function(e,n,t){return e[n]=t,e}},function(e,n,t){"use strict";t(144)},function(e,n,t){"use strict";e.exports=function(e){return{iterator:e,next:e.next,done:!1}}},function(e,n,t){var r=t(24),i=t(180),a=t(181),o=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":o&&o in Object(e)?i(e):a(e)}},function(e,n,t){"use strict";var r=t(4),i=r({}.toString),a=r("".slice);e.exports=function(e){return a(i(e),8,-1)}},function(e,n,t){var r=t(12).Symbol;e.exports=r},function(e,n,t){"use strict";function r(e,n,t,r,i,a,o,s){var l,c="function"==typeof e?e.options:e;if(n&&(c.render=n,c.staticRenderFns=t,c._compiled=!0),r&&(c.functional=!0),a&&(c._scopeId="data-v-"+a),o?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},c._ssrRegister=l):i&&(l=s?function(){i.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:i),l)if(c.functional){c._injectStyles=l;var d=c.render;c.render=function(e,n){return l.call(n),d(e,n)}}else{var u=c.beforeCreate;c.beforeCreate=u?[].concat(u,l):[l]}return{exports:e,options:c}}t.d(n,"a",(function(){return r}))},function(e,n,t){"use strict";var r=t(43),i=Object;e.exports=function(e){return i(r(e))}},function(e,n,t){"use strict";var r=t(135);e.exports=function(e){return r(e.length)}},function(e,n,t){"use strict";var r=t(3);e.exports=!r((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},function(e,n,t){"use strict";e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n,t){"use strict";var r=t(63),i=t(43);e.exports=function(e){return r(i(e))}},function(e,n,t){"use strict";var r=t(2),i=t(0),a=function(e){return i(e)?e:void 0};e.exports=function(e,n){return arguments.length<2?a(r[e]):r[e]&&r[e][n]}},function(e,n,t){"use strict";var r=t(4);e.exports=r({}.isPrototypeOf)},function(e,n,t){"use strict";var r=t(6),i=t(44);e.exports=function(e,n){var t=e[n];return i(t)?void 0:r(t)}},function(e,n,t){var r=t(185),i=t(186),a=t(187),o=t(188),s=t(189);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var r=e[n];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=i,l.prototype.get=a,l.prototype.has=o,l.prototype.set=s,e.exports=l},function(e,n,t){var r=t(94);e.exports=function(e,n){for(var t=e.length;t--;)if(r(e[t][0],n))return t;return-1}},function(e,n,t){var r=t(16)(Object,"create");e.exports=r},function(e,n,t){var r=t(207);e.exports=function(e,n){var t=e.__data__;return r(n)?t["string"==typeof n?"string":"hash"]:t.map}},function(e,n,t){var r=t(59);e.exports=function(e){if("string"==typeof e||r(e))return e;var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}},function(e,n,t){var r,i;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(i="function"==typeof(r=function(){var e,n,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function i(e,n,t){return e<n?n:e>t?t:e}function a(e){return 100*(-1+e)}t.configure=function(e){var n,t;for(n in e)void 0!==(t=e[n])&&e.hasOwnProperty(n)&&(r[n]=t);return this},t.status=null,t.set=function(e){var n=t.isStarted();e=i(e,r.minimum,1),t.status=1===e?null:e;var l=t.render(!n),c=l.querySelector(r.barSelector),d=r.speed,u=r.easing;return l.offsetWidth,o((function(n){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),s(c,function(e,n,t){var i;return(i="translate3d"===r.positionUsing?{transform:"translate3d("+a(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+a(e)+"%,0)"}:{"margin-left":a(e)+"%"}).transition="all "+n+"ms "+t,i}(e,d,u)),1===e?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+d+"ms linear",opacity:0}),setTimeout((function(){t.remove(),n()}),d)}),d)):setTimeout(n,d)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var e=function(){setTimeout((function(){t.status&&(t.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},t.done=function(e){return e||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(e){var n=t.status;return n?("number"!=typeof e&&(e=(1-n)*i(Math.random()*n,.1,.95)),n=i(n+e,0,.994),t.set(n)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},e=0,n=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===n&&t.start(),e++,n++,r.always((function(){0==--n?(e=0,t.done()):t.set((e-n)/e)})),this):this},t.render=function(e){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=r.template;var i,o=n.querySelector(r.barSelector),l=e?"-100":a(t.status||0),d=document.querySelector(r.parent);return s(o,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(i=n.querySelector(r.spinnerSelector))&&h(i),d!=document.body&&c(d,"nprogress-custom-parent"),d.appendChild(n),n},t.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&h(e)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var e=document.body.style,n="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return n+"Perspective"in e?"translate3d":n+"Transform"in e?"translate":"margin"};var o=function(){var e=[];function n(){var t=e.shift();t&&t(n)}return function(t){e.push(t),1==e.length&&n()}}(),s=function(){var e=["Webkit","O","Moz","ms"],n={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,n){return n.toUpperCase()})),n[t]||(n[t]=function(n){var t=document.body.style;if(n in t)return n;for(var r,i=e.length,a=n.charAt(0).toUpperCase()+n.slice(1);i--;)if((r=e[i]+a)in t)return r;return n}(t))}function r(e,n,r){n=t(n),e.style[n]=r}return function(e,n){var t,i,a=arguments;if(2==a.length)for(t in n)void 0!==(i=n[t])&&n.hasOwnProperty(t)&&r(e,t,i);else r(e,a[1],a[2])}}();function l(e,n){return("string"==typeof e?e:u(e)).indexOf(" "+n+" ")>=0}function c(e,n){var t=u(e),r=t+n;l(t,n)||(e.className=r.substring(1))}function d(e,n){var t,r=u(e);l(e,n)&&(t=r.replace(" "+n+" "," "),e.className=t.substring(1,t.length-1))}function u(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function h(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return t})?r.call(n,t,n,e):r)||(e.exports=i)},function(e,n,t){"use strict";t(147)},function(e,n,t){"use strict";var r=t(121),i=t(11),a=t(1),o=t(45),s=t(156),l=t(27),c=t(32),d=t(157),u=t(88),h=t(51),f=TypeError,p=function(e,n){this.stopped=e,this.result=n},m=p.prototype;e.exports=function(e,n,t){var g,v,y,w,b,_,x,T=t&&t.that,k=!(!t||!t.AS_ENTRIES),C=!(!t||!t.IS_RECORD),I=!(!t||!t.IS_ITERATOR),z=!(!t||!t.INTERRUPTED),S=r(n,T),A=function(e){return g&&h(g,"normal",e),new p(!0,e)},P=function(e){return k?(a(e),z?S(e[0],e[1],A):S(e[0],e[1])):z?S(e,A):S(e)};if(C)g=e.iterator;else if(I)g=e;else{if(!(v=u(e)))throw new f(o(e)+" is not iterable");if(s(v)){for(y=0,w=l(e);w>y;y++)if((b=P(e[y]))&&c(m,b))return b;return new p(!1)}g=d(e,v)}for(_=C?e.next:g.next;!(x=i(_,g)).done;){try{b=P(x.value)}catch(e){h(g,"throw",e)}if("object"==typeof b&&b&&c(m,b))return b}return new p(!1)}},function(e,n,t){"use strict";var r=t(0),i=t(15),a=t(78),o=t(47);e.exports=function(e,n,t,s){s||(s={});var l=s.enumerable,c=void 0!==s.name?s.name:n;if(r(t)&&a(t,c,s),s.global)l?e[n]=t:o(n,t);else{try{s.unsafe?e[n]&&(l=!0):delete e[n]}catch(e){}l?e[n]=t:i.f(e,n,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return e}},function(e,n,t){"use strict";var r=t(44),i=TypeError;e.exports=function(e){if(r(e))throw new i("Can't call method on "+e);return e}},function(e,n,t){"use strict";e.exports=function(e){return null==e}},function(e,n,t){"use strict";var r=String;e.exports=function(e){try{return r(e)}catch(e){return"Object"}}},function(e,n,t){"use strict";var r=t(18),i=t(2),a=t(47),o=e.exports=i["__core-js_shared__"]||a("__core-js_shared__",{});(o.versions||(o.versions=[])).push({version:"3.40.0",mode:r?"pure":"global",copyright:"© 2014-2025 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.40.0/LICENSE",source:"https://github.com/zloirock/core-js"})},function(e,n,t){"use strict";var r=t(2),i=Object.defineProperty;e.exports=function(e,n){try{i(r,e,{value:n,configurable:!0,writable:!0})}catch(t){r[e]=n}return n}},function(e,n,t){"use strict";var r=t(73),i=t(74),a=r("keys");e.exports=function(e){return a[e]||(a[e]=i(e))}},function(e,n,t){"use strict";e.exports={}},function(e,n,t){"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,n,t){"use strict";var r=t(11),i=t(1),a=t(33);e.exports=function(e,n,t){var o,s;i(e);try{if(!(o=a(e,"return"))){if("throw"===n)throw t;return t}o=r(o,e)}catch(e){s=!0,o=e}if("throw"===n)throw t;if(s)throw o;return i(o),t}},function(e,n,t){var r=t(179),i=t(17),a=Object.prototype,o=a.hasOwnProperty,s=a.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(e){return i(e)&&o.call(e,"callee")&&!s.call(e,"callee")};e.exports=l},function(e,n,t){var r=t(16)(t(12),"Map");e.exports=r},function(e,n){e.exports=function(e){var n=typeof e;return null!=e&&("object"==n||"function"==n)}},function(e,n,t){var r=t(199),i=t(206),a=t(208),o=t(209),s=t(210);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var r=e[n];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=i,l.prototype.get=a,l.prototype.has=o,l.prototype.set=s,e.exports=l},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e){t[++n]=e})),t}},function(e,n){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,n,t){var r=t(10),i=t(59),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,o=/^\w*$/;e.exports=function(e,n){if(r(e))return!1;var t=typeof e;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=e&&!i(e))||(o.test(e)||!a.test(e)||null!=n&&e in Object(n))}},function(e,n,t){var r=t(22),i=t(17);e.exports=function(e){return"symbol"==typeof e||i(e)&&"[object Symbol]"==r(e)}},function(e,n){e.exports=function(e){return e}},function(e,n,t){"use strict";t(271)},function(e,n,t){"use strict";t(154)},function(e,n,t){"use strict";var r=t(4),i=t(3),a=t(23),o=Object,s=r("".split);e.exports=i((function(){return!o("z").propertyIsEnumerable(0)}))?function(e){return"String"===a(e)?s(e,""):o(e)}:o},function(e,n,t){"use strict";var r,i=t(1),a=t(141),o=t(50),s=t(49),l=t(143),c=t(76),d=t(48),u=d("IE_PROTO"),h=function(){},f=function(e){return"<script>"+e+"<\/script>"},p=function(e){e.write(f("")),e.close();var n=e.parentWindow.Object;return e=null,n},m=function(){try{r=new ActiveXObject("htmlfile")}catch(e){}var e,n;m="undefined"!=typeof document?document.domain&&r?p(r):((n=c("iframe")).style.display="none",l.appendChild(n),n.src=String("javascript:"),(e=n.contentWindow.document).open(),e.write(f("document.F=Object")),e.close(),e.F):p(r);for(var t=o.length;t--;)delete m.prototype[o[t]];return m()};s[u]=!0,e.exports=Object.create||function(e,n){var t;return null!==e?(h.prototype=i(e),t=new h,h.prototype=null,t[u]=e):t=m(),void 0===n?t:a.f(t,n)}},function(e,n){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,n,t){"use strict";var r=t(5),i=t(11),a=t(124),o=t(29),s=t(30),l=t(67),c=t(8),d=t(75),u=Object.getOwnPropertyDescriptor;n.f=r?u:function(e,n){if(e=s(e),n=l(n),d)try{return u(e,n)}catch(e){}if(c(e,n))return o(!i(a.f,e,n),e[n])}},function(e,n,t){"use strict";var r=t(125),i=t(68);e.exports=function(e){var n=r(e,"string");return i(n)?n:n+""}},function(e,n,t){"use strict";var r=t(31),i=t(0),a=t(32),o=t(69),s=Object;e.exports=o?function(e){return"symbol"==typeof e}:function(e){var n=r("Symbol");return i(n)&&a(n.prototype,s(e))}},function(e,n,t){"use strict";var r=t(70);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,n,t){"use strict";var r=t(71),i=t(3),a=t(2).String;e.exports=!!Object.getOwnPropertySymbols&&!i((function(){var e=Symbol("symbol detection");return!a(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(e,n,t){"use strict";var r,i,a=t(2),o=t(72),s=a.process,l=a.Deno,c=s&&s.versions||l&&l.version,d=c&&c.v8;d&&(i=(r=d.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!i&&o&&(!(r=o.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/))&&(i=+r[1]),e.exports=i},function(e,n,t){"use strict";var r=t(2).navigator,i=r&&r.userAgent;e.exports=i?String(i):""},function(e,n,t){"use strict";var r=t(46);e.exports=function(e,n){return r[e]||(r[e]=n||{})}},function(e,n,t){"use strict";var r=t(4),i=0,a=Math.random(),o=r(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+o(++i+a,36)}},function(e,n,t){"use strict";var r=t(5),i=t(3),a=t(76);e.exports=!r&&!i((function(){return 7!==Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(e,n,t){"use strict";var r=t(2),i=t(7),a=r.document,o=i(a)&&i(a.createElement);e.exports=function(e){return o?a.createElement(e):{}}},function(e,n,t){"use strict";var r=t(5),i=t(3);e.exports=r&&i((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(e,n,t){"use strict";var r=t(4),i=t(3),a=t(0),o=t(8),s=t(5),l=t(127).CONFIGURABLE,c=t(128),d=t(79),u=d.enforce,h=d.get,f=String,p=Object.defineProperty,m=r("".slice),g=r("".replace),v=r([].join),y=s&&!i((function(){return 8!==p((function(){}),"length",{value:8}).length})),w=String(String).split("String"),b=e.exports=function(e,n,t){"Symbol("===m(f(n),0,7)&&(n="["+g(f(n),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),t&&t.getter&&(n="get "+n),t&&t.setter&&(n="set "+n),(!o(e,"name")||l&&e.name!==n)&&(s?p(e,"name",{value:n,configurable:!0}):e.name=n),y&&t&&o(t,"arity")&&e.length!==t.arity&&p(e,"length",{value:t.arity});try{t&&o(t,"constructor")&&t.constructor?s&&p(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var r=u(e);return o(r,"source")||(r.source=v(w,"string"==typeof n?n:"")),e};Function.prototype.toString=b((function(){return a(this)&&h(this).source||c(this)}),"toString")},function(e,n,t){"use strict";var r,i,a,o=t(129),s=t(2),l=t(7),c=t(19),d=t(8),u=t(46),h=t(48),f=t(49),p=s.TypeError,m=s.WeakMap;if(o||u.state){var g=u.state||(u.state=new m);g.get=g.get,g.has=g.has,g.set=g.set,r=function(e,n){if(g.has(e))throw new p("Object already initialized");return n.facade=e,g.set(e,n),n},i=function(e){return g.get(e)||{}},a=function(e){return g.has(e)}}else{var v=h("state");f[v]=!0,r=function(e,n){if(d(e,v))throw new p("Object already initialized");return n.facade=e,c(e,v,n),n},i=function(e){return d(e,v)?e[v]:{}},a=function(e){return d(e,v)}}e.exports={set:r,get:i,has:a,enforce:function(e){return a(e)?i(e):r(e,{})},getterFor:function(e){return function(n){var t;if(!l(n)||(t=i(n)).type!==e)throw new p("Incompatible receiver, "+e+" required");return t}}}},function(e,n,t){"use strict";var r=t(8),i=t(130),a=t(66),o=t(15);e.exports=function(e,n,t){for(var s=i(n),l=o.f,c=a.f,d=0;d<s.length;d++){var u=s[d];r(e,u)||t&&r(t,u)||l(e,u,c(n,u))}}},function(e,n,t){"use strict";var r=t(4),i=t(8),a=t(30),o=t(132).indexOf,s=t(49),l=r([].push);e.exports=function(e,n){var t,r=a(e),c=0,d=[];for(t in r)!i(s,t)&&i(r,t)&&l(d,t);for(;n.length>c;)i(r,t=n[c++])&&(~o(d,t)||l(d,t));return d}},function(e,n,t){"use strict";var r=t(134);e.exports=function(e){var n=+e;return n!=n||0===n?0:r(n)}},function(e,n,t){"use strict";var r=t(8),i=t(0),a=t(26),o=t(48),s=t(139),l=o("IE_PROTO"),c=Object,d=c.prototype;e.exports=s?c.getPrototypeOf:function(e){var n=a(e);if(r(n,l))return n[l];var t=n.constructor;return i(t)&&n instanceof t?t.prototype:n instanceof c?d:null}},function(e,n,t){"use strict";var r,i,a,o=t(3),s=t(0),l=t(7),c=t(64),d=t(83),u=t(42),h=t(13),f=t(18),p=h("iterator"),m=!1;[].keys&&("next"in(a=[].keys())?(i=d(d(a)))!==Object.prototype&&(r=i):m=!0),!l(r)||o((function(){var e={};return r[p].call(e)!==e}))?r={}:f&&(r=c(r)),s(r[p])||u(r,p,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:m}},function(e,n,t){"use strict";var r=t(11),i=t(64),a=t(19),o=t(145),s=t(13),l=t(79),c=t(33),d=t(84).IteratorPrototype,u=t(146),h=t(51),f=s("toStringTag"),p=l.set,m=function(e){var n=l.getterFor(e?"WrapForValidIterator":"IteratorHelper");return o(i(d),{next:function(){var t=n(this);if(e)return t.nextHandler();if(t.done)return u(void 0,!0);try{var r=t.nextHandler();return t.returnHandlerResult?r:u(r,t.done)}catch(e){throw t.done=!0,e}},return:function(){var t=n(this),i=t.iterator;if(t.done=!0,e){var a=c(i,"return");return a?r(a,i):u(void 0,!0)}if(t.inner)try{h(t.inner.iterator,"normal")}catch(e){return h(i,"throw",e)}return i&&h(i,"normal"),u(void 0,!0)}})},g=m(!0),v=m(!1);a(v,f,"Iterator Helper"),e.exports=function(e,n,t){var r=function(r,i){i?(i.iterator=r.iterator,i.next=r.next):i=r,i.type=n?"WrapForValidIterator":"IteratorHelper",i.returnHandlerResult=!!t,i.nextHandler=e,i.counter=0,i.done=!1,p(this,i)};return r.prototype=n?g:v,r}},function(e,n,t){"use strict";var r=t(1),i=t(51);e.exports=function(e,n,t,a){try{return a?n(r(t)[0],t[1]):n(t)}catch(n){i(e,"throw",n)}}},function(e,n,t){"use strict";e.exports={}},function(e,n,t){"use strict";var r=t(89),i=t(33),a=t(44),o=t(87),s=t(13)("iterator");e.exports=function(e){if(!a(e))return i(e,s)||i(e,"@@iterator")||o[r(e)]}},function(e,n,t){"use strict";var r=t(158),i=t(0),a=t(23),o=t(13)("toStringTag"),s=Object,l="Arguments"===a(function(){return arguments}());e.exports=r?a:function(e){var n,t,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(t=function(e,n){try{return e[n]}catch(e){}}(n=s(e),o))?t:l?a(n):"Object"===(r=a(n))&&i(n.callee)?"Arguments":r}},function(e,n,t){"use strict";var r=t(164),i=t(7),a=t(43),o=t(165);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,n=!1,t={};try{(e=r(Object.prototype,"__proto__","set"))(t,[]),n=t instanceof Array}catch(e){}return function(t,r){return a(t),o(r),i(t)?(n?e(t,r):t.__proto__=r,t):t}}():void 0)},function(e,n){e.exports=function(e,n){for(var t=-1,r=n.length,i=e.length;++t<r;)e[i+t]=n[t];return e}},function(e,n){var t="object"==typeof global&&global&&global.Object===Object&&global;e.exports=t},function(e,n,t){var r=t(34),i=t(190),a=t(191),o=t(192),s=t(193),l=t(194);function c(e){var n=this.__data__=new r(e);this.size=n.size}c.prototype.clear=i,c.prototype.delete=a,c.prototype.get=o,c.prototype.has=s,c.prototype.set=l,e.exports=c},function(e,n){e.exports=function(e,n){return e===n||e!=e&&n!=n}},function(e,n,t){var r=t(22),i=t(54);e.exports=function(e){if(!i(e))return!1;var n=r(e);return"[object Function]"==n||"[object GeneratorFunction]"==n||"[object AsyncFunction]"==n||"[object Proxy]"==n}},function(e,n){var t=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return t.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,n,t){var r=t(211),i=t(17);e.exports=function e(n,t,a,o,s){return n===t||(null==n||null==t||!i(n)&&!i(t)?n!=n&&t!=t:r(n,t,a,o,e,s))}},function(e,n,t){var r=t(99),i=t(214),a=t(100);e.exports=function(e,n,t,o,s,l){var c=1&t,d=e.length,u=n.length;if(d!=u&&!(c&&u>d))return!1;var h=l.get(e),f=l.get(n);if(h&&f)return h==n&&f==e;var p=-1,m=!0,g=2&t?new r:void 0;for(l.set(e,n),l.set(n,e);++p<d;){var v=e[p],y=n[p];if(o)var w=c?o(y,v,p,n,e,l):o(v,y,p,e,n,l);if(void 0!==w){if(w)continue;m=!1;break}if(g){if(!i(n,(function(e,n){if(!a(g,n)&&(v===e||s(v,e,t,o,l)))return g.push(n)}))){m=!1;break}}else if(v!==y&&!s(v,y,t,o,l)){m=!1;break}}return l.delete(e),l.delete(n),m}},function(e,n,t){var r=t(55),i=t(212),a=t(213);function o(e){var n=-1,t=null==e?0:e.length;for(this.__data__=new r;++n<t;)this.add(e[n])}o.prototype.add=o.prototype.push=i,o.prototype.has=a,e.exports=o},function(e,n){e.exports=function(e,n){return e.has(n)}},function(e,n,t){var r=t(224),i=t(230),a=t(105);e.exports=function(e){return a(e)?r(e):i(e)}},function(e,n,t){(function(e){var r=t(12),i=t(226),a=n&&!n.nodeType&&n,o=a&&"object"==typeof e&&e&&!e.nodeType&&e,s=o&&o.exports===a?r.Buffer:void 0,l=(s?s.isBuffer:void 0)||i;e.exports=l}).call(this,t(65)(e))},function(e,n){var t=/^(?:0|[1-9]\d*)$/;e.exports=function(e,n){var r=typeof e;return!!(n=null==n?9007199254740991:n)&&("number"==r||"symbol"!=r&&t.test(e))&&e>-1&&e%1==0&&e<n}},function(e,n,t){var r=t(227),i=t(228),a=t(229),o=a&&a.isTypedArray,s=o?i(o):r;e.exports=s},function(e,n,t){var r=t(95),i=t(57);e.exports=function(e){return null!=e&&i(e.length)&&!r(e)}},function(e,n,t){var r=t(16)(t(12),"Set");e.exports=r},function(e,n,t){var r=t(54);e.exports=function(e){return e==e&&!r(e)}},function(e,n){e.exports=function(e,n){return function(t){return null!=t&&(t[e]===n&&(void 0!==n||e in Object(t)))}}},function(e,n,t){var r=t(110),i=t(38);e.exports=function(e,n){for(var t=0,a=(n=r(n,e)).length;null!=e&&t<a;)e=e[i(n[t++])];return t&&t==a?e:void 0}},function(e,n,t){var r=t(10),i=t(58),a=t(241),o=t(244);e.exports=function(e,n){return r(e)?e:i(e,n)?[e]:a(o(e))}},function(e,n,t){},function(e,n,t){},function(e,n,t){var r=t(177),i=t(182),a=t(253),o=t(261),s=t(270),l=t(119),c=a((function(e){var n=l(e);return s(n)&&(n=void 0),o(r(e,1,s,!0),i(n,2))}));e.exports=c},function(e,n,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;e.exports=function(e){var n,t=""+e,i=r.exec(t);if(!i)return t;var a="",o=0,s=0;for(o=i.index;o<t.length;o++){switch(t.charCodeAt(o)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 39:n="&#39;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}s!==o&&(a+=t.substring(s,o)),s=o+1,a+=n}return s!==o?a+t.substring(s,o):a}},function(e,n){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,a=/^0o[0-7]+$/i,o=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),d=Object.prototype.toString,u=Math.max,h=Math.min,f=function(){return c.Date.now()};function p(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}function m(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==d.call(e)}(e))return NaN;if(p(e)){var n="function"==typeof e.valueOf?e.valueOf():e;e=p(n)?n+"":n}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(t,"");var s=i.test(e);return s||a.test(e)?o(e.slice(2),s?2:8):r.test(e)?NaN:+e}e.exports=function(e,n,t){var r,i,a,o,s,l,c=0,d=!1,g=!1,v=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function y(n){var t=r,a=i;return r=i=void 0,c=n,o=e.apply(a,t)}function w(e){return c=e,s=setTimeout(_,n),d?y(e):o}function b(e){var t=e-l;return void 0===l||t>=n||t<0||g&&e-c>=a}function _(){var e=f();if(b(e))return x(e);s=setTimeout(_,function(e){var t=n-(e-l);return g?h(t,a-(e-c)):t}(e))}function x(e){return s=void 0,v&&r?y(e):(r=i=void 0,o)}function T(){var e=f(),t=b(e);if(r=arguments,i=this,l=e,t){if(void 0===s)return w(l);if(g)return s=setTimeout(_,n),y(l)}return void 0===s&&(s=setTimeout(_,n)),o}return n=m(n)||0,p(t)&&(d=!!t.leading,a=(g="maxWait"in t)?u(m(t.maxWait)||0,n):a,v="trailing"in t?!!t.trailing:v),T.cancel=function(){void 0!==s&&clearTimeout(s),c=0,r=l=i=s=void 0},T.flush=function(){return void 0===s?o:x(f())},T}},function(e,n,t){!function(){"use strict";e.exports={polyfill:function(){var e=window,n=document;if(!("scrollBehavior"in n.documentElement.style)||!0===e.__forceSmoothScrollPolyfill__){var t,r=e.HTMLElement||e.Element,i={scroll:e.scroll||e.scrollTo,scrollBy:e.scrollBy,elementScroll:r.prototype.scroll||s,scrollIntoView:r.prototype.scrollIntoView},a=e.performance&&e.performance.now?e.performance.now.bind(e.performance):Date.now,o=(t=e.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(t)?1:0);e.scroll=e.scrollTo=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?p.call(e,n.body,void 0!==arguments[0].left?~~arguments[0].left:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:e.scrollY||e.pageYOffset):i.scroll.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:e.scrollY||e.pageYOffset))},e.scrollBy=function(){void 0!==arguments[0]&&(l(arguments[0])?i.scrollBy.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):p.call(e,n.body,~~arguments[0].left+(e.scrollX||e.pageXOffset),~~arguments[0].top+(e.scrollY||e.pageYOffset)))},r.prototype.scroll=r.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==l(arguments[0])){var e=arguments[0].left,n=arguments[0].top;p.call(this,this,void 0===e?this.scrollLeft:~~e,void 0===n?this.scrollTop:~~n)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");i.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},r.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):i.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},r.prototype.scrollIntoView=function(){if(!0!==l(arguments[0])){var t=h(this),r=t.getBoundingClientRect(),a=this.getBoundingClientRect();t!==n.body?(p.call(this,t,t.scrollLeft+a.left-r.left,t.scrollTop+a.top-r.top),"fixed"!==e.getComputedStyle(t).position&&e.scrollBy({left:r.left,top:r.top,behavior:"smooth"})):e.scrollBy({left:a.left,top:a.top,behavior:"smooth"})}else i.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function s(e,n){this.scrollLeft=e,this.scrollTop=n}function l(e){if(null===e||"object"!=typeof e||void 0===e.behavior||"auto"===e.behavior||"instant"===e.behavior)return!0;if("object"==typeof e&&"smooth"===e.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+e.behavior+" is not a valid value for enumeration ScrollBehavior.")}function c(e,n){return"Y"===n?e.clientHeight+o<e.scrollHeight:"X"===n?e.clientWidth+o<e.scrollWidth:void 0}function d(n,t){var r=e.getComputedStyle(n,null)["overflow"+t];return"auto"===r||"scroll"===r}function u(e){var n=c(e,"Y")&&d(e,"Y"),t=c(e,"X")&&d(e,"X");return n||t}function h(e){for(;e!==n.body&&!1===u(e);)e=e.parentNode||e.host;return e}function f(n){var t,r,i,o,s=(a()-n.startTime)/468;o=s=s>1?1:s,t=.5*(1-Math.cos(Math.PI*o)),r=n.startX+(n.x-n.startX)*t,i=n.startY+(n.y-n.startY)*t,n.method.call(n.scrollable,r,i),r===n.x&&i===n.y||e.requestAnimationFrame(f.bind(e,n))}function p(t,r,o){var l,c,d,u,h=a();t===n.body?(l=e,c=e.scrollX||e.pageXOffset,d=e.scrollY||e.pageYOffset,u=i.scroll):(l=t,c=t.scrollLeft,d=t.scrollTop,u=s),f({scrollable:l,method:u,startTime:h,startX:c,startY:d,x:r,y:o})}}}}()},function(e,n,t){"use strict";var r=t(9),i=t(26),a=t(27),o=t(174),s=t(176);r({target:"Array",proto:!0,arity:1,forced:t(3)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}}()},{push:function(e){var n=i(this),t=a(n),r=arguments.length;s(t+r);for(var l=0;l<r;l++)n[t]=arguments[l],t++;return o(n,t),t}})},function(e,n,t){"use strict";var r=t(89),i=String;e.exports=function(e){if("Symbol"===r(e))throw new TypeError("Cannot convert a Symbol value to a string");return i(e)}},function(e,n){e.exports=function(e){var n=null==e?0:e.length;return n?e[n-1]:void 0}},function(e,n,t){"use strict";var r=t(78),i=t(15);e.exports=function(e,n,t){return t.get&&r(t.get,n,{getter:!0}),t.set&&r(t.set,n,{setter:!0}),i.f(e,n,t)}},function(e,n,t){"use strict";var r=t(155),i=t(6),a=t(28),o=r(r.bind);e.exports=function(e,n){return i(e),void 0===n?e:a?o(e,n):function(){return e.apply(n,arguments)}}},function(e,n,t){e.exports=t(277)},function(e,n,t){"use strict";var r=t(9),i=t(2),a=t(138),o=t(1),s=t(0),l=t(83),c=t(120),d=t(140),u=t(3),h=t(8),f=t(13),p=t(84).IteratorPrototype,m=t(5),g=t(18),v=f("toStringTag"),y=TypeError,w=i.Iterator,b=g||!s(w)||w.prototype!==p||!u((function(){w({})})),_=function(){if(a(this,p),l(this)===p)throw new y("Abstract class Iterator not directly constructable")},x=function(e,n){m?c(p,e,{configurable:!0,get:function(){return n},set:function(n){if(o(this),this===p)throw new y("You can't redefine this property");h(this,e)?this[e]=n:d(this,e,n)}}):p[e]=n};h(p,v)||x(v,"Iterator"),!b&&h(p,"constructor")&&p.constructor!==Object||x("constructor",_),_.prototype=p,r({global:!0,constructor:!0,forced:b},{Iterator:_})},function(e,n,t){"use strict";var r={}.propertyIsEnumerable,i=Object.getOwnPropertyDescriptor,a=i&&!r.call({1:2},1);n.f=a?function(e){var n=i(this,e);return!!n&&n.enumerable}:r},function(e,n,t){"use strict";var r=t(11),i=t(7),a=t(68),o=t(33),s=t(126),l=t(13),c=TypeError,d=l("toPrimitive");e.exports=function(e,n){if(!i(e)||a(e))return e;var t,l=o(e,d);if(l){if(void 0===n&&(n="default"),t=r(l,e,n),!i(t)||a(t))return t;throw new c("Can't convert object to primitive value")}return void 0===n&&(n="number"),s(e,n)}},function(e,n,t){"use strict";var r=t(11),i=t(0),a=t(7),o=TypeError;e.exports=function(e,n){var t,s;if("string"===n&&i(t=e.toString)&&!a(s=r(t,e)))return s;if(i(t=e.valueOf)&&!a(s=r(t,e)))return s;if("string"!==n&&i(t=e.toString)&&!a(s=r(t,e)))return s;throw new o("Can't convert object to primitive value")}},function(e,n,t){"use strict";var r=t(5),i=t(8),a=Function.prototype,o=r&&Object.getOwnPropertyDescriptor,s=i(a,"name"),l=s&&"something"===function(){}.name,c=s&&(!r||r&&o(a,"name").configurable);e.exports={EXISTS:s,PROPER:l,CONFIGURABLE:c}},function(e,n,t){"use strict";var r=t(4),i=t(0),a=t(46),o=r(Function.toString);i(a.inspectSource)||(a.inspectSource=function(e){return o(e)}),e.exports=a.inspectSource},function(e,n,t){"use strict";var r=t(2),i=t(0),a=r.WeakMap;e.exports=i(a)&&/native code/.test(String(a))},function(e,n,t){"use strict";var r=t(31),i=t(4),a=t(131),o=t(136),s=t(1),l=i([].concat);e.exports=r("Reflect","ownKeys")||function(e){var n=a.f(s(e)),t=o.f;return t?l(n,t(e)):n}},function(e,n,t){"use strict";var r=t(81),i=t(50).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return r(e,i)}},function(e,n,t){"use strict";var r=t(30),i=t(133),a=t(27),o=function(e){return function(n,t,o){var s=r(n),l=a(s);if(0===l)return!e&&-1;var c,d=i(o,l);if(e&&t!=t){for(;l>d;)if((c=s[d++])!=c)return!0}else for(;l>d;d++)if((e||d in s)&&s[d]===t)return e||d||0;return!e&&-1}};e.exports={includes:o(!0),indexOf:o(!1)}},function(e,n,t){"use strict";var r=t(82),i=Math.max,a=Math.min;e.exports=function(e,n){var t=r(e);return t<0?i(t+n,0):a(t,n)}},function(e,n,t){"use strict";var r=Math.ceil,i=Math.floor;e.exports=Math.trunc||function(e){var n=+e;return(n>0?i:r)(n)}},function(e,n,t){"use strict";var r=t(82),i=Math.min;e.exports=function(e){var n=r(e);return n>0?i(n,9007199254740991):0}},function(e,n,t){"use strict";n.f=Object.getOwnPropertySymbols},function(e,n,t){"use strict";var r=t(3),i=t(0),a=/#|\.prototype\./,o=function(e,n){var t=l[s(e)];return t===d||t!==c&&(i(n)?r(n):!!n)},s=o.normalize=function(e){return String(e).replace(a,".").toLowerCase()},l=o.data={},c=o.NATIVE="N",d=o.POLYFILL="P";e.exports=o},function(e,n,t){"use strict";var r=t(32),i=TypeError;e.exports=function(e,n){if(r(n,e))return e;throw new i("Incorrect invocation")}},function(e,n,t){"use strict";var r=t(3);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,n,t){"use strict";var r=t(5),i=t(15),a=t(29);e.exports=function(e,n,t){r?i.f(e,n,a(0,t)):e[n]=t}},function(e,n,t){"use strict";var r=t(5),i=t(77),a=t(15),o=t(1),s=t(30),l=t(142);n.f=r&&!i?Object.defineProperties:function(e,n){o(e);for(var t,r=s(n),i=l(n),c=i.length,d=0;c>d;)a.f(e,t=i[d++],r[t]);return e}},function(e,n,t){"use strict";var r=t(81),i=t(50);e.exports=Object.keys||function(e){return r(e,i)}},function(e,n,t){"use strict";var r=t(31);e.exports=r("document","documentElement")},function(e,n,t){"use strict";var r=t(9),i=t(11),a=t(6),o=t(1),s=t(21),l=t(85),c=t(86),d=t(18),u=l((function(){for(var e,n,t=this.iterator,r=this.predicate,a=this.next;;){if(e=o(i(a,t)),this.done=!!e.done)return;if(n=e.value,c(t,r,[n,this.counter++],!0))return n}}));r({target:"Iterator",proto:!0,real:!0,forced:d},{filter:function(e){return o(this),a(e),new u(s(this),{predicate:e})}})},function(e,n,t){"use strict";var r=t(42);e.exports=function(e,n,t){for(var i in n)r(e,i,n[i],t);return e}},function(e,n,t){"use strict";e.exports=function(e,n){return{value:e,done:n}}},function(e,n,t){"use strict";var r=t(9),i=t(148);r({target:"Iterator",proto:!0,real:!0,forced:t(18)},{map:i})},function(e,n,t){"use strict";var r=t(11),i=t(6),a=t(1),o=t(21),s=t(85),l=t(86),c=s((function(){var e=this.iterator,n=a(r(this.next,e));if(!(this.done=!!n.done))return l(e,this.mapper,[n.value,this.counter++],!0)}));e.exports=function(e){return a(this),i(e),new c(o(this),{mapper:e})}},function(e,n,t){"use strict";var r=t(9),i=t(150).left,a=t(151),o=t(71);r({target:"Array",proto:!0,forced:!t(152)&&o>79&&o<83||!a("reduce")},{reduce:function(e){var n=arguments.length;return i(this,e,n,n>1?arguments[1]:void 0)}})},function(e,n,t){"use strict";var r=t(6),i=t(26),a=t(63),o=t(27),s=TypeError,l="Reduce of empty array with no initial value",c=function(e){return function(n,t,c,d){var u=i(n),h=a(u),f=o(u);if(r(t),0===f&&c<2)throw new s(l);var p=e?f-1:0,m=e?-1:1;if(c<2)for(;;){if(p in h){d=h[p],p+=m;break}if(p+=m,e?p<0:f<=p)throw new s(l)}for(;e?p>=0:f>p;p+=m)p in h&&(d=t(d,h[p],p,u));return d}};e.exports={left:c(!1),right:c(!0)}},function(e,n,t){"use strict";var r=t(3);e.exports=function(e,n){var t=[][e];return!!t&&r((function(){t.call(null,n||function(){return 1},1)}))}},function(e,n,t){"use strict";var r=t(153);e.exports="NODE"===r},function(e,n,t){"use strict";var r=t(2),i=t(72),a=t(23),o=function(e){return i.slice(0,e.length)===e};e.exports=o("Bun/")?"BUN":o("Cloudflare-Workers")?"CLOUDFLARE":o("Deno/")?"DENO":o("Node.js/")?"NODE":r.Bun&&"string"==typeof Bun.version?"BUN":r.Deno&&"object"==typeof Deno.version?"DENO":"process"===a(r.process)?"NODE":r.window&&r.document?"BROWSER":"REST"},function(e,n,t){"use strict";var r=t(9),i=t(41),a=t(6),o=t(1),s=t(21);r({target:"Iterator",proto:!0,real:!0},{forEach:function(e){o(this),a(e);var n=s(this),t=0;i(n,(function(n){e(n,t++)}),{IS_RECORD:!0})}})},function(e,n,t){"use strict";var r=t(23),i=t(4);e.exports=function(e){if("Function"===r(e))return i(e)}},function(e,n,t){"use strict";var r=t(13),i=t(87),a=r("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(i.Array===e||o[a]===e)}},function(e,n,t){"use strict";var r=t(11),i=t(6),a=t(1),o=t(45),s=t(88),l=TypeError;e.exports=function(e,n){var t=arguments.length<2?s(e):n;if(i(t))return a(r(t,e));throw new l(o(e)+" is not iterable")}},function(e,n,t){"use strict";var r={};r[t(13)("toStringTag")]="z",e.exports="[object z]"===String(r)},function(e,n,t){"use strict";t(160)},function(e,n,t){"use strict";var r=t(9),i=t(41),a=t(6),o=t(1),s=t(21),l=TypeError;r({target:"Iterator",proto:!0,real:!0},{reduce:function(e){o(this),a(e);var n=s(this),t=arguments.length<2,r=t?void 0:arguments[1],c=0;if(i(n,(function(n){t?(t=!1,r=n):r=e(r,n,c),c++}),{IS_RECORD:!0}),t)throw new l("Reduce of empty iterator with no initial value");return r}})},function(e,n,t){"use strict";var r=t(9),i=t(2),a=t(162),o=t(163),s=i.WebAssembly,l=7!==new Error("e",{cause:7}).cause,c=function(e,n){var t={};t[e]=o(e,n,l),r({global:!0,constructor:!0,arity:1,forced:l},t)},d=function(e,n){if(s&&s[e]){var t={};t[e]=o("WebAssembly."+e,n,l),r({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},t)}};c("Error",(function(e){return function(n){return a(e,this,arguments)}})),c("EvalError",(function(e){return function(n){return a(e,this,arguments)}})),c("RangeError",(function(e){return function(n){return a(e,this,arguments)}})),c("ReferenceError",(function(e){return function(n){return a(e,this,arguments)}})),c("SyntaxError",(function(e){return function(n){return a(e,this,arguments)}})),c("TypeError",(function(e){return function(n){return a(e,this,arguments)}})),c("URIError",(function(e){return function(n){return a(e,this,arguments)}})),d("CompileError",(function(e){return function(n){return a(e,this,arguments)}})),d("LinkError",(function(e){return function(n){return a(e,this,arguments)}})),d("RuntimeError",(function(e){return function(n){return a(e,this,arguments)}}))},function(e,n,t){"use strict";var r=t(28),i=Function.prototype,a=i.apply,o=i.call;e.exports="object"==typeof Reflect&&Reflect.apply||(r?o.bind(a):function(){return o.apply(a,arguments)})},function(e,n,t){"use strict";var r=t(31),i=t(8),a=t(19),o=t(32),s=t(90),l=t(80),c=t(167),d=t(168),u=t(169),h=t(170),f=t(171),p=t(5),m=t(18);e.exports=function(e,n,t,g){var v=g?2:1,y=e.split("."),w=y[y.length-1],b=r.apply(null,y);if(b){var _=b.prototype;if(!m&&i(_,"cause")&&delete _.cause,!t)return b;var x=r("Error"),T=n((function(e,n){var t=u(g?n:e,void 0),r=g?new b(e):new b;return void 0!==t&&a(r,"message",t),f(r,T,r.stack,2),this&&o(_,this)&&d(r,this,T),arguments.length>v&&h(r,arguments[v]),r}));if(T.prototype=_,"Error"!==w?s?s(T,x):l(T,x,{name:!0}):p&&"stackTraceLimit"in b&&(c(T,b,"stackTraceLimit"),c(T,b,"prepareStackTrace")),l(T,b),!m)try{_.name!==w&&a(_,"name",w),_.constructor=T}catch(e){}return T}}},function(e,n,t){"use strict";var r=t(4),i=t(6);e.exports=function(e,n,t){try{return r(i(Object.getOwnPropertyDescriptor(e,n)[t]))}catch(e){}}},function(e,n,t){"use strict";var r=t(166),i=String,a=TypeError;e.exports=function(e){if(r(e))return e;throw new a("Can't set "+i(e)+" as a prototype")}},function(e,n,t){"use strict";var r=t(7);e.exports=function(e){return r(e)||null===e}},function(e,n,t){"use strict";var r=t(15).f;e.exports=function(e,n,t){t in e||r(e,t,{configurable:!0,get:function(){return n[t]},set:function(e){n[t]=e}})}},function(e,n,t){"use strict";var r=t(0),i=t(7),a=t(90);e.exports=function(e,n,t){var o,s;return a&&r(o=n.constructor)&&o!==t&&i(s=o.prototype)&&s!==t.prototype&&a(e,s),e}},function(e,n,t){"use strict";var r=t(118);e.exports=function(e,n){return void 0===e?arguments.length<2?"":n:r(e)}},function(e,n,t){"use strict";var r=t(7),i=t(19);e.exports=function(e,n){r(n)&&"cause"in n&&i(e,"cause",n.cause)}},function(e,n,t){"use strict";var r=t(19),i=t(172),a=t(173),o=Error.captureStackTrace;e.exports=function(e,n,t,s){a&&(o?o(e,n):r(e,"stack",i(t,s)))}},function(e,n,t){"use strict";var r=t(4),i=Error,a=r("".replace),o=String(new i("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,l=s.test(o);e.exports=function(e,n){if(l&&"string"==typeof e&&!i.prepareStackTrace)for(;n--;)e=a(e,s,"");return e}},function(e,n,t){"use strict";var r=t(3),i=t(29);e.exports=!r((function(){var e=new Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",i(1,7)),7!==e.stack)}))},function(e,n,t){"use strict";var r=t(5),i=t(175),a=TypeError,o=Object.getOwnPropertyDescriptor,s=r&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=s?function(e,n){if(i(e)&&!o(e,"length").writable)throw new a("Cannot set read only .length");return e.length=n}:function(e,n){return e.length=n}},function(e,n,t){"use strict";var r=t(23);e.exports=Array.isArray||function(e){return"Array"===r(e)}},function(e,n,t){"use strict";var r=TypeError;e.exports=function(e){if(e>9007199254740991)throw r("Maximum allowed index exceeded");return e}},function(e,n,t){var r=t(91),i=t(178);e.exports=function e(n,t,a,o,s){var l=-1,c=n.length;for(a||(a=i),s||(s=[]);++l<c;){var d=n[l];t>0&&a(d)?t>1?e(d,t-1,a,o,s):r(s,d):o||(s[s.length]=d)}return s}},function(e,n,t){var r=t(24),i=t(52),a=t(10),o=r?r.isConcatSpreadable:void 0;e.exports=function(e){return a(e)||i(e)||!!(o&&e&&e[o])}},function(e,n,t){var r=t(22),i=t(17);e.exports=function(e){return i(e)&&"[object Arguments]"==r(e)}},function(e,n,t){var r=t(24),i=Object.prototype,a=i.hasOwnProperty,o=i.toString,s=r?r.toStringTag:void 0;e.exports=function(e){var n=a.call(e,s),t=e[s];try{e[s]=void 0;var r=!0}catch(e){}var i=o.call(e);return r&&(n?e[s]=t:delete e[s]),i}},function(e,n){var t=Object.prototype.toString;e.exports=function(e){return t.call(e)}},function(e,n,t){var r=t(183),i=t(239),a=t(60),o=t(10),s=t(250);e.exports=function(e){return"function"==typeof e?e:null==e?a:"object"==typeof e?o(e)?i(e[0],e[1]):r(e):s(e)}},function(e,n,t){var r=t(184),i=t(238),a=t(108);e.exports=function(e){var n=i(e);return 1==n.length&&n[0][2]?a(n[0][0],n[0][1]):function(t){return t===e||r(t,e,n)}}},function(e,n,t){var r=t(93),i=t(97);e.exports=function(e,n,t,a){var o=t.length,s=o,l=!a;if(null==e)return!s;for(e=Object(e);o--;){var c=t[o];if(l&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++o<s;){var d=(c=t[o])[0],u=e[d],h=c[1];if(l&&c[2]){if(void 0===u&&!(d in e))return!1}else{var f=new r;if(a)var p=a(u,h,d,e,n,f);if(!(void 0===p?i(h,u,3,a,f):p))return!1}}return!0}},function(e,n){e.exports=function(){this.__data__=[],this.size=0}},function(e,n,t){var r=t(35),i=Array.prototype.splice;e.exports=function(e){var n=this.__data__,t=r(n,e);return!(t<0)&&(t==n.length-1?n.pop():i.call(n,t,1),--this.size,!0)}},function(e,n,t){var r=t(35);e.exports=function(e){var n=this.__data__,t=r(n,e);return t<0?void 0:n[t][1]}},function(e,n,t){var r=t(35);e.exports=function(e){return r(this.__data__,e)>-1}},function(e,n,t){var r=t(35);e.exports=function(e,n){var t=this.__data__,i=r(t,e);return i<0?(++this.size,t.push([e,n])):t[i][1]=n,this}},function(e,n,t){var r=t(34);e.exports=function(){this.__data__=new r,this.size=0}},function(e,n){e.exports=function(e){var n=this.__data__,t=n.delete(e);return this.size=n.size,t}},function(e,n){e.exports=function(e){return this.__data__.get(e)}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n,t){var r=t(34),i=t(53),a=t(55);e.exports=function(e,n){var t=this.__data__;if(t instanceof r){var o=t.__data__;if(!i||o.length<199)return o.push([e,n]),this.size=++t.size,this;t=this.__data__=new a(o)}return t.set(e,n),this.size=t.size,this}},function(e,n,t){var r=t(95),i=t(196),a=t(54),o=t(96),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,d=l.toString,u=c.hasOwnProperty,h=RegExp("^"+d.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!a(e)||i(e))&&(r(e)?h:s).test(o(e))}},function(e,n,t){var r,i=t(197),a=(r=/[^.]+$/.exec(i&&i.keys&&i.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";e.exports=function(e){return!!a&&a in e}},function(e,n,t){var r=t(12)["__core-js_shared__"];e.exports=r},function(e,n){e.exports=function(e,n){return null==e?void 0:e[n]}},function(e,n,t){var r=t(200),i=t(34),a=t(53);e.exports=function(){this.size=0,this.__data__={hash:new r,map:new(a||i),string:new r}}},function(e,n,t){var r=t(201),i=t(202),a=t(203),o=t(204),s=t(205);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var r=e[n];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=i,l.prototype.get=a,l.prototype.has=o,l.prototype.set=s,e.exports=l},function(e,n,t){var r=t(36);e.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(e,n){e.exports=function(e){var n=this.has(e)&&delete this.__data__[e];return this.size-=n?1:0,n}},function(e,n,t){var r=t(36),i=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;if(r){var t=n[e];return"__lodash_hash_undefined__"===t?void 0:t}return i.call(n,e)?n[e]:void 0}},function(e,n,t){var r=t(36),i=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;return r?void 0!==n[e]:i.call(n,e)}},function(e,n,t){var r=t(36);e.exports=function(e,n){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=r&&void 0===n?"__lodash_hash_undefined__":n,this}},function(e,n,t){var r=t(37);e.exports=function(e){var n=r(this,e).delete(e);return this.size-=n?1:0,n}},function(e,n){e.exports=function(e){var n=typeof e;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e}},function(e,n,t){var r=t(37);e.exports=function(e){return r(this,e).get(e)}},function(e,n,t){var r=t(37);e.exports=function(e){return r(this,e).has(e)}},function(e,n,t){var r=t(37);e.exports=function(e,n){var t=r(this,e),i=t.size;return t.set(e,n),this.size+=t.size==i?0:1,this}},function(e,n,t){var r=t(93),i=t(98),a=t(215),o=t(218),s=t(234),l=t(10),c=t(102),d=t(104),u="[object Object]",h=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,f,p,m){var g=l(e),v=l(n),y=g?"[object Array]":s(e),w=v?"[object Array]":s(n),b=(y="[object Arguments]"==y?u:y)==u,_=(w="[object Arguments]"==w?u:w)==u,x=y==w;if(x&&c(e)){if(!c(n))return!1;g=!0,b=!1}if(x&&!b)return m||(m=new r),g||d(e)?i(e,n,t,f,p,m):a(e,n,y,t,f,p,m);if(!(1&t)){var T=b&&h.call(e,"__wrapped__"),k=_&&h.call(n,"__wrapped__");if(T||k){var C=T?e.value():e,I=k?n.value():n;return m||(m=new r),p(C,I,t,f,m)}}return!!x&&(m||(m=new r),o(e,n,t,f,p,m))}},function(e,n){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n){e.exports=function(e,n){for(var t=-1,r=null==e?0:e.length;++t<r;)if(n(e[t],t,e))return!0;return!1}},function(e,n,t){var r=t(24),i=t(216),a=t(94),o=t(98),s=t(217),l=t(56),c=r?r.prototype:void 0,d=c?c.valueOf:void 0;e.exports=function(e,n,t,r,c,u,h){switch(t){case"[object DataView]":if(e.byteLength!=n.byteLength||e.byteOffset!=n.byteOffset)return!1;e=e.buffer,n=n.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=n.byteLength||!u(new i(e),new i(n)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+e,+n);case"[object Error]":return e.name==n.name&&e.message==n.message;case"[object RegExp]":case"[object String]":return e==n+"";case"[object Map]":var f=s;case"[object Set]":var p=1&r;if(f||(f=l),e.size!=n.size&&!p)return!1;var m=h.get(e);if(m)return m==n;r|=2,h.set(e,n);var g=o(f(e),f(n),r,c,u,h);return h.delete(e),g;case"[object Symbol]":if(d)return d.call(e)==d.call(n)}return!1}},function(e,n,t){var r=t(12).Uint8Array;e.exports=r},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e,r){t[++n]=[r,e]})),t}},function(e,n,t){var r=t(219),i=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,a,o,s){var l=1&t,c=r(e),d=c.length;if(d!=r(n).length&&!l)return!1;for(var u=d;u--;){var h=c[u];if(!(l?h in n:i.call(n,h)))return!1}var f=s.get(e),p=s.get(n);if(f&&p)return f==n&&p==e;var m=!0;s.set(e,n),s.set(n,e);for(var g=l;++u<d;){var v=e[h=c[u]],y=n[h];if(a)var w=l?a(y,v,h,n,e,s):a(v,y,h,e,n,s);if(!(void 0===w?v===y||o(v,y,t,a,s):w)){m=!1;break}g||(g="constructor"==h)}if(m&&!g){var b=e.constructor,_=n.constructor;b==_||!("constructor"in e)||!("constructor"in n)||"function"==typeof b&&b instanceof b&&"function"==typeof _&&_ instanceof _||(m=!1)}return s.delete(e),s.delete(n),m}},function(e,n,t){var r=t(220),i=t(221),a=t(101);e.exports=function(e){return r(e,a,i)}},function(e,n,t){var r=t(91),i=t(10);e.exports=function(e,n,t){var a=n(e);return i(e)?a:r(a,t(e))}},function(e,n,t){var r=t(222),i=t(223),a=Object.prototype.propertyIsEnumerable,o=Object.getOwnPropertySymbols,s=o?function(e){return null==e?[]:(e=Object(e),r(o(e),(function(n){return a.call(e,n)})))}:i;e.exports=s},function(e,n){e.exports=function(e,n){for(var t=-1,r=null==e?0:e.length,i=0,a=[];++t<r;){var o=e[t];n(o,t,e)&&(a[i++]=o)}return a}},function(e,n){e.exports=function(){return[]}},function(e,n,t){var r=t(225),i=t(52),a=t(10),o=t(102),s=t(103),l=t(104),c=Object.prototype.hasOwnProperty;e.exports=function(e,n){var t=a(e),d=!t&&i(e),u=!t&&!d&&o(e),h=!t&&!d&&!u&&l(e),f=t||d||u||h,p=f?r(e.length,String):[],m=p.length;for(var g in e)!n&&!c.call(e,g)||f&&("length"==g||u&&("offset"==g||"parent"==g)||h&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,m))||p.push(g);return p}},function(e,n){e.exports=function(e,n){for(var t=-1,r=Array(e);++t<e;)r[t]=n(t);return r}},function(e,n){e.exports=function(){return!1}},function(e,n,t){var r=t(22),i=t(57),a=t(17),o={};o["[object Float32Array]"]=o["[object Float64Array]"]=o["[object Int8Array]"]=o["[object Int16Array]"]=o["[object Int32Array]"]=o["[object Uint8Array]"]=o["[object Uint8ClampedArray]"]=o["[object Uint16Array]"]=o["[object Uint32Array]"]=!0,o["[object Arguments]"]=o["[object Array]"]=o["[object ArrayBuffer]"]=o["[object Boolean]"]=o["[object DataView]"]=o["[object Date]"]=o["[object Error]"]=o["[object Function]"]=o["[object Map]"]=o["[object Number]"]=o["[object Object]"]=o["[object RegExp]"]=o["[object Set]"]=o["[object String]"]=o["[object WeakMap]"]=!1,e.exports=function(e){return a(e)&&i(e.length)&&!!o[r(e)]}},function(e,n){e.exports=function(e){return function(n){return e(n)}}},function(e,n,t){(function(e){var r=t(92),i=n&&!n.nodeType&&n,a=i&&"object"==typeof e&&e&&!e.nodeType&&e,o=a&&a.exports===i&&r.process,s=function(){try{var e=a&&a.require&&a.require("util").types;return e||o&&o.binding&&o.binding("util")}catch(e){}}();e.exports=s}).call(this,t(65)(e))},function(e,n,t){var r=t(231),i=t(232),a=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return i(e);var n=[];for(var t in Object(e))a.call(e,t)&&"constructor"!=t&&n.push(t);return n}},function(e,n){var t=Object.prototype;e.exports=function(e){var n=e&&e.constructor;return e===("function"==typeof n&&n.prototype||t)}},function(e,n,t){var r=t(233)(Object.keys,Object);e.exports=r},function(e,n){e.exports=function(e,n){return function(t){return e(n(t))}}},function(e,n,t){var r=t(235),i=t(53),a=t(236),o=t(106),s=t(237),l=t(22),c=t(96),d=c(r),u=c(i),h=c(a),f=c(o),p=c(s),m=l;(r&&"[object DataView]"!=m(new r(new ArrayBuffer(1)))||i&&"[object Map]"!=m(new i)||a&&"[object Promise]"!=m(a.resolve())||o&&"[object Set]"!=m(new o)||s&&"[object WeakMap]"!=m(new s))&&(m=function(e){var n=l(e),t="[object Object]"==n?e.constructor:void 0,r=t?c(t):"";if(r)switch(r){case d:return"[object DataView]";case u:return"[object Map]";case h:return"[object Promise]";case f:return"[object Set]";case p:return"[object WeakMap]"}return n}),e.exports=m},function(e,n,t){var r=t(16)(t(12),"DataView");e.exports=r},function(e,n,t){var r=t(16)(t(12),"Promise");e.exports=r},function(e,n,t){var r=t(16)(t(12),"WeakMap");e.exports=r},function(e,n,t){var r=t(107),i=t(101);e.exports=function(e){for(var n=i(e),t=n.length;t--;){var a=n[t],o=e[a];n[t]=[a,o,r(o)]}return n}},function(e,n,t){var r=t(97),i=t(240),a=t(247),o=t(58),s=t(107),l=t(108),c=t(38);e.exports=function(e,n){return o(e)&&s(n)?l(c(e),n):function(t){var o=i(t,e);return void 0===o&&o===n?a(t,e):r(n,o,3)}}},function(e,n,t){var r=t(109);e.exports=function(e,n,t){var i=null==e?void 0:r(e,n);return void 0===i?t:i}},function(e,n,t){var r=t(242),i=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,o=r((function(e){var n=[];return 46===e.charCodeAt(0)&&n.push(""),e.replace(i,(function(e,t,r,i){n.push(r?i.replace(a,"$1"):t||e)})),n}));e.exports=o},function(e,n,t){var r=t(243);e.exports=function(e){var n=r(e,(function(e){return 500===t.size&&t.clear(),e})),t=n.cache;return n}},function(e,n,t){var r=t(55);function i(e,n){if("function"!=typeof e||null!=n&&"function"!=typeof n)throw new TypeError("Expected a function");var t=function(){var r=arguments,i=n?n.apply(this,r):r[0],a=t.cache;if(a.has(i))return a.get(i);var o=e.apply(this,r);return t.cache=a.set(i,o)||a,o};return t.cache=new(i.Cache||r),t}i.Cache=r,e.exports=i},function(e,n,t){var r=t(245);e.exports=function(e){return null==e?"":r(e)}},function(e,n,t){var r=t(24),i=t(246),a=t(10),o=t(59),s=r?r.prototype:void 0,l=s?s.toString:void 0;e.exports=function e(n){if("string"==typeof n)return n;if(a(n))return i(n,e)+"";if(o(n))return l?l.call(n):"";var t=n+"";return"0"==t&&1/n==-1/0?"-0":t}},function(e,n){e.exports=function(e,n){for(var t=-1,r=null==e?0:e.length,i=Array(r);++t<r;)i[t]=n(e[t],t,e);return i}},function(e,n,t){var r=t(248),i=t(249);e.exports=function(e,n){return null!=e&&i(e,n,r)}},function(e,n){e.exports=function(e,n){return null!=e&&n in Object(e)}},function(e,n,t){var r=t(110),i=t(52),a=t(10),o=t(103),s=t(57),l=t(38);e.exports=function(e,n,t){for(var c=-1,d=(n=r(n,e)).length,u=!1;++c<d;){var h=l(n[c]);if(!(u=null!=e&&t(e,h)))break;e=e[h]}return u||++c!=d?u:!!(d=null==e?0:e.length)&&s(d)&&o(h,d)&&(a(e)||i(e))}},function(e,n,t){var r=t(251),i=t(252),a=t(58),o=t(38);e.exports=function(e){return a(e)?r(o(e)):i(e)}},function(e,n){e.exports=function(e){return function(n){return null==n?void 0:n[e]}}},function(e,n,t){var r=t(109);e.exports=function(e){return function(n){return r(n,e)}}},function(e,n,t){var r=t(60),i=t(254),a=t(256);e.exports=function(e,n){return a(i(e,n,r),e+"")}},function(e,n,t){var r=t(255),i=Math.max;e.exports=function(e,n,t){return n=i(void 0===n?e.length-1:n,0),function(){for(var a=arguments,o=-1,s=i(a.length-n,0),l=Array(s);++o<s;)l[o]=a[n+o];o=-1;for(var c=Array(n+1);++o<n;)c[o]=a[o];return c[n]=t(l),r(e,this,c)}}},function(e,n){e.exports=function(e,n,t){switch(t.length){case 0:return e.call(n);case 1:return e.call(n,t[0]);case 2:return e.call(n,t[0],t[1]);case 3:return e.call(n,t[0],t[1],t[2])}return e.apply(n,t)}},function(e,n,t){var r=t(257),i=t(260)(r);e.exports=i},function(e,n,t){var r=t(258),i=t(259),a=t(60),o=i?function(e,n){return i(e,"toString",{configurable:!0,enumerable:!1,value:r(n),writable:!0})}:a;e.exports=o},function(e,n){e.exports=function(e){return function(){return e}}},function(e,n,t){var r=t(16),i=function(){try{var e=r(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=i},function(e,n){var t=Date.now;e.exports=function(e){var n=0,r=0;return function(){var i=t(),a=16-(i-r);if(r=i,a>0){if(++n>=800)return arguments[0]}else n=0;return e.apply(void 0,arguments)}}},function(e,n,t){var r=t(99),i=t(262),a=t(267),o=t(100),s=t(268),l=t(56);e.exports=function(e,n,t){var c=-1,d=i,u=e.length,h=!0,f=[],p=f;if(t)h=!1,d=a;else if(u>=200){var m=n?null:s(e);if(m)return l(m);h=!1,d=o,p=new r}else p=n?[]:f;e:for(;++c<u;){var g=e[c],v=n?n(g):g;if(g=t||0!==g?g:0,h&&v==v){for(var y=p.length;y--;)if(p[y]===v)continue e;n&&p.push(v),f.push(g)}else d(p,v,t)||(p!==f&&p.push(v),f.push(g))}return f}},function(e,n,t){var r=t(263);e.exports=function(e,n){return!!(null==e?0:e.length)&&r(e,n,0)>-1}},function(e,n,t){var r=t(264),i=t(265),a=t(266);e.exports=function(e,n,t){return n==n?a(e,n,t):r(e,i,t)}},function(e,n){e.exports=function(e,n,t,r){for(var i=e.length,a=t+(r?1:-1);r?a--:++a<i;)if(n(e[a],a,e))return a;return-1}},function(e,n){e.exports=function(e){return e!=e}},function(e,n){e.exports=function(e,n,t){for(var r=t-1,i=e.length;++r<i;)if(e[r]===n)return r;return-1}},function(e,n){e.exports=function(e,n,t){for(var r=-1,i=null==e?0:e.length;++r<i;)if(t(n,e[r]))return!0;return!1}},function(e,n,t){var r=t(106),i=t(269),a=t(56),o=r&&1/a(new r([,-0]))[1]==1/0?function(e){return new r(e)}:i;e.exports=o},function(e,n){e.exports=function(){}},function(e,n,t){var r=t(105),i=t(17);e.exports=function(e){return i(e)&&r(e)}},function(e,n,t){"use strict";var r=t(9),i=t(41),a=t(6),o=t(1),s=t(21);r({target:"Iterator",proto:!0,real:!0},{some:function(e){o(this),a(e);var n=s(this),t=0;return i(n,(function(n,r){if(e(n,t++))return r()}),{IS_RECORD:!0,INTERRUPTED:!0}).stopped}})},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){"use strict";t(111)},function(e,n,t){"use strict";t(112)},function(e,n,t){"use strict";t.r(n);t(14),t(20),t(40);var r=Object.freeze({}),i=Array.isArray;function a(e){return null==e}function o(e){return null!=e}function s(e){return!0===e}function l(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function c(e){return"function"==typeof e}function d(e){return null!==e&&"object"==typeof e}var u=Object.prototype.toString;function h(e){return"[object Object]"===u.call(e)}function f(e){return"[object RegExp]"===u.call(e)}function p(e){var n=parseFloat(String(e));return n>=0&&Math.floor(n)===n&&isFinite(e)}function m(e){return o(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function g(e){return null==e?"":Array.isArray(e)||h(e)&&e.toString===u?JSON.stringify(e,v,2):String(e)}function v(e,n){return n&&n.__v_isRef?n.value:n}function y(e){var n=parseFloat(e);return isNaN(n)?e:n}function w(e,n){for(var t=Object.create(null),r=e.split(","),i=0;i<r.length;i++)t[r[i]]=!0;return n?function(e){return t[e.toLowerCase()]}:function(e){return t[e]}}w("slot,component",!0);var b=w("key,ref,slot,slot-scope,is");function _(e,n){var t=e.length;if(t){if(n===e[t-1])return void(e.length=t-1);var r=e.indexOf(n);if(r>-1)return e.splice(r,1)}}var x=Object.prototype.hasOwnProperty;function T(e,n){return x.call(e,n)}function k(e){var n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}var C=/-(\w)/g,I=k((function(e){return e.replace(C,(function(e,n){return n?n.toUpperCase():""}))})),z=k((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),S=/\B([A-Z])/g,A=k((function(e){return e.replace(S,"-$1").toLowerCase()}));var P=Function.prototype.bind?function(e,n){return e.bind(n)}:function(e,n){function t(t){var r=arguments.length;return r?r>1?e.apply(n,arguments):e.call(n,t):e.call(n)}return t._length=e.length,t};function E(e,n){n=n||0;for(var t=e.length-n,r=new Array(t);t--;)r[t]=e[t+n];return r}function O(e,n){for(var t in n)e[t]=n[t];return e}function L(e){for(var n={},t=0;t<e.length;t++)e[t]&&O(n,e[t]);return n}function U(e,n,t){}var $=function(e,n,t){return!1},j=function(e){return e};function R(e,n){if(e===n)return!0;var t=d(e),r=d(n);if(!t||!r)return!t&&!r&&String(e)===String(n);try{var i=Array.isArray(e),a=Array.isArray(n);if(i&&a)return e.length===n.length&&e.every((function(e,t){return R(e,n[t])}));if(e instanceof Date&&n instanceof Date)return e.getTime()===n.getTime();if(i||a)return!1;var o=Object.keys(e),s=Object.keys(n);return o.length===s.length&&o.every((function(t){return R(e[t],n[t])}))}catch(e){return!1}}function M(e,n){for(var t=0;t<e.length;t++)if(R(e[t],n))return t;return-1}function N(e){var n=!1;return function(){n||(n=!0,e.apply(this,arguments))}}function F(e,n){return e===n?0===e&&1/e!=1/n:e==e||n==n}var H=["component","directive","filter"],D=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],q={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:$,isReservedAttr:$,isUnknownElement:$,getTagNamespace:U,parsePlatformTagName:j,mustUseProp:$,async:!0,_lifecycleHooks:D},B=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function G(e){var n=(e+"").charCodeAt(0);return 36===n||95===n}function V(e,n,t,r){Object.defineProperty(e,n,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var W=new RegExp("[^".concat(B.source,".$_\\d]"));var Y="__proto__"in{},K="undefined"!=typeof window,J=K&&window.navigator.userAgent.toLowerCase(),X=J&&/msie|trident/.test(J),Q=J&&J.indexOf("msie 9.0")>0,Z=J&&J.indexOf("edge/")>0;J&&J.indexOf("android");var ee=J&&/iphone|ipad|ipod|ios/.test(J);J&&/chrome\/\d+/.test(J),J&&/phantomjs/.test(J);var ne,te=J&&J.match(/firefox\/(\d+)/),re={}.watch,ie=!1;if(K)try{var ae={};Object.defineProperty(ae,"passive",{get:function(){ie=!0}}),window.addEventListener("test-passive",null,ae)}catch(e){}var oe=function(){return void 0===ne&&(ne=!K&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),ne},se=K&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function le(e){return"function"==typeof e&&/native code/.test(e.toString())}var ce,de="undefined"!=typeof Symbol&&le(Symbol)&&"undefined"!=typeof Reflect&&le(Reflect.ownKeys);ce="undefined"!=typeof Set&&le(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ue=null;function he(e){void 0===e&&(e=null),e||ue&&ue._scope.off(),ue=e,e&&e._scope.on()}var fe=function(){function e(e,n,t,r,i,a,o,s){this.tag=e,this.data=n,this.children=t,this.text=r,this.elm=i,this.ns=void 0,this.context=a,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=n&&n.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),pe=function(e){void 0===e&&(e="");var n=new fe;return n.text=e,n.isComment=!0,n};function me(e){return new fe(void 0,void 0,void 0,String(e))}function ge(e){var n=new fe(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return n.ns=e.ns,n.isStatic=e.isStatic,n.key=e.key,n.isComment=e.isComment,n.fnContext=e.fnContext,n.fnOptions=e.fnOptions,n.fnScopeId=e.fnScopeId,n.asyncMeta=e.asyncMeta,n.isCloned=!0,n}"function"==typeof SuppressedError&&SuppressedError;var ve=0,ye=[],we=function(){function e(){this._pending=!1,this.id=ve++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,ye.push(this))},e.prototype.depend=function(n){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){var n=this.subs.filter((function(e){return e}));for(var t=0,r=n.length;t<r;t++){0,n[t].update()}},e}();we.target=null;var be=[];function _e(e){be.push(e),we.target=e}function xe(){be.pop(),we.target=be[be.length-1]}var Te=Array.prototype,ke=Object.create(Te);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var n=Te[e];V(ke,e,(function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var i,a=n.apply(this,t),o=this.__ob__;switch(e){case"push":case"unshift":i=t;break;case"splice":i=t.slice(2)}return i&&o.observeArray(i),o.dep.notify(),a}))}));var Ce=Object.getOwnPropertyNames(ke),Ie={},ze=!0;function Se(e){ze=e}var Ae={notify:U,depend:U,addSub:U,removeSub:U},Pe=function(){function e(e,n,t){if(void 0===n&&(n=!1),void 0===t&&(t=!1),this.value=e,this.shallow=n,this.mock=t,this.dep=t?Ae:new we,this.vmCount=0,V(e,"__ob__",this),i(e)){if(!t)if(Y)e.__proto__=ke;else for(var r=0,a=Ce.length;r<a;r++){V(e,s=Ce[r],ke[s])}n||this.observeArray(e)}else{var o=Object.keys(e);for(r=0;r<o.length;r++){var s;Oe(e,s=o[r],Ie,void 0,n,t)}}}return e.prototype.observeArray=function(e){for(var n=0,t=e.length;n<t;n++)Ee(e[n],!1,this.mock)},e}();function Ee(e,n,t){return e&&T(e,"__ob__")&&e.__ob__ instanceof Pe?e.__ob__:!ze||!t&&oe()||!i(e)&&!h(e)||!Object.isExtensible(e)||e.__v_skip||Ne(e)||e instanceof fe?void 0:new Pe(e,n,t)}function Oe(e,n,t,r,a,o,s){void 0===s&&(s=!1);var l=new we,c=Object.getOwnPropertyDescriptor(e,n);if(!c||!1!==c.configurable){var d=c&&c.get,u=c&&c.set;d&&!u||t!==Ie&&2!==arguments.length||(t=e[n]);var h=a?t&&t.__ob__:Ee(t,!1,o);return Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var n=d?d.call(e):t;return we.target&&(l.depend(),h&&(h.dep.depend(),i(n)&&$e(n))),Ne(n)&&!a?n.value:n},set:function(n){var r=d?d.call(e):t;if(F(r,n)){if(u)u.call(e,n);else{if(d)return;if(!a&&Ne(r)&&!Ne(n))return void(r.value=n);t=n}h=a?n&&n.__ob__:Ee(n,!1,o),l.notify()}}}),l}}function Le(e,n,t){if(!Me(e)){var r=e.__ob__;return i(e)&&p(n)?(e.length=Math.max(e.length,n),e.splice(n,1,t),r&&!r.shallow&&r.mock&&Ee(t,!1,!0),t):n in e&&!(n in Object.prototype)?(e[n]=t,t):e._isVue||r&&r.vmCount?t:r?(Oe(r.value,n,t,void 0,r.shallow,r.mock),r.dep.notify(),t):(e[n]=t,t)}}function Ue(e,n){if(i(e)&&p(n))e.splice(n,1);else{var t=e.__ob__;e._isVue||t&&t.vmCount||Me(e)||T(e,n)&&(delete e[n],t&&t.dep.notify())}}function $e(e){for(var n=void 0,t=0,r=e.length;t<r;t++)(n=e[t])&&n.__ob__&&n.__ob__.dep.depend(),i(n)&&$e(n)}function je(e){return Re(e,!0),V(e,"__v_isShallow",!0),e}function Re(e,n){if(!Me(e)){Ee(e,n,oe());0}}function Me(e){return!(!e||!e.__v_isReadonly)}function Ne(e){return!(!e||!0!==e.__v_isRef)}function Fe(e,n,t){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var e=n[t];if(Ne(e))return e.value;var r=e&&e.__ob__;return r&&r.dep.depend(),e},set:function(e){var r=n[t];Ne(r)&&!Ne(e)?r.value=e:n[t]=e}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var He;var De=function(){function e(e){void 0===e&&(e=!1),this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=He,!e&&He&&(this.index=(He.scopes||(He.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var n=He;try{return He=this,e()}finally{He=n}}else 0},e.prototype.on=function(){He=this},e.prototype.off=function(){He=this.parent},e.prototype.stop=function(e){if(this.active){var n=void 0,t=void 0;for(n=0,t=this.effects.length;n<t;n++)this.effects[n].teardown();for(n=0,t=this.cleanups.length;n<t;n++)this.cleanups[n]();if(this.scopes)for(n=0,t=this.scopes.length;n<t;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!e){var r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this.active=!1}},e}();function qe(e){var n=e._provided,t=e.$parent&&e.$parent._provided;return t===n?e._provided=Object.create(t):n}var Be=k((function(e){var n="&"===e.charAt(0),t="~"===(e=n?e.slice(1):e).charAt(0),r="!"===(e=t?e.slice(1):e).charAt(0);return{name:e=r?e.slice(1):e,once:t,capture:r,passive:n}}));function Ge(e,n){function t(){var e=t.fns;if(!i(e))return Sn(e,null,arguments,n,"v-on handler");for(var r=e.slice(),a=0;a<r.length;a++)Sn(r[a],null,arguments,n,"v-on handler")}return t.fns=e,t}function Ve(e,n,t,r,i,o){var l,c,d,u;for(l in e)c=e[l],d=n[l],u=Be(l),a(c)||(a(d)?(a(c.fns)&&(c=e[l]=Ge(c,o)),s(u.once)&&(c=e[l]=i(u.name,c,u.capture)),t(u.name,c,u.capture,u.passive,u.params)):c!==d&&(d.fns=c,e[l]=d));for(l in n)a(e[l])&&r((u=Be(l)).name,n[l],u.capture)}function We(e,n,t){var r;e instanceof fe&&(e=e.data.hook||(e.data.hook={}));var i=e[n];function l(){t.apply(this,arguments),_(r.fns,l)}a(i)?r=Ge([l]):o(i.fns)&&s(i.merged)?(r=i).fns.push(l):r=Ge([i,l]),r.merged=!0,e[n]=r}function Ye(e,n,t,r,i){if(o(n)){if(T(n,t))return e[t]=n[t],i||delete n[t],!0;if(T(n,r))return e[t]=n[r],i||delete n[r],!0}return!1}function Ke(e){return l(e)?[me(e)]:i(e)?function e(n,t){var r,c,d,u,h=[];for(r=0;r<n.length;r++)a(c=n[r])||"boolean"==typeof c||(d=h.length-1,u=h[d],i(c)?c.length>0&&(Je((c=e(c,"".concat(t||"","_").concat(r)))[0])&&Je(u)&&(h[d]=me(u.text+c[0].text),c.shift()),h.push.apply(h,c)):l(c)?Je(u)?h[d]=me(u.text+c):""!==c&&h.push(me(c)):Je(c)&&Je(u)?h[d]=me(u.text+c.text):(s(n._isVList)&&o(c.tag)&&a(c.key)&&o(t)&&(c.key="__vlist".concat(t,"_").concat(r,"__")),h.push(c)));return h}(e):void 0}function Je(e){return o(e)&&o(e.text)&&!1===e.isComment}function Xe(e,n){var t,r,a,s,l=null;if(i(e)||"string"==typeof e)for(l=new Array(e.length),t=0,r=e.length;t<r;t++)l[t]=n(e[t],t);else if("number"==typeof e)for(l=new Array(e),t=0;t<e;t++)l[t]=n(t+1,t);else if(d(e))if(de&&e[Symbol.iterator]){l=[];for(var c=e[Symbol.iterator](),u=c.next();!u.done;)l.push(n(u.value,l.length)),u=c.next()}else for(a=Object.keys(e),l=new Array(a.length),t=0,r=a.length;t<r;t++)s=a[t],l[t]=n(e[s],s,t);return o(l)||(l=[]),l._isVList=!0,l}function Qe(e,n,t,r){var i,a=this.$scopedSlots[e];a?(t=t||{},r&&(t=O(O({},r),t)),i=a(t)||(c(n)?n():n)):i=this.$slots[e]||(c(n)?n():n);var o=t&&t.slot;return o?this.$createElement("template",{slot:o},i):i}function Ze(e){return Et(this.$options,"filters",e,!0)||j}function en(e,n){return i(e)?-1===e.indexOf(n):e!==n}function nn(e,n,t,r,i){var a=q.keyCodes[n]||t;return i&&r&&!q.keyCodes[n]?en(i,r):a?en(a,e):r?A(r)!==n:void 0===e}function tn(e,n,t,r,a){if(t)if(d(t)){i(t)&&(t=L(t));var o=void 0,s=function(i){if("class"===i||"style"===i||b(i))o=e;else{var s=e.attrs&&e.attrs.type;o=r||q.mustUseProp(n,s,i)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=I(i),c=A(i);l in o||c in o||(o[i]=t[i],a&&((e.on||(e.on={}))["update:".concat(i)]=function(e){t[i]=e}))};for(var l in t)s(l)}else;return e}function rn(e,n){var t=this._staticTrees||(this._staticTrees=[]),r=t[e];return r&&!n||on(r=t[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),r}function an(e,n,t){return on(e,"__once__".concat(n).concat(t?"_".concat(t):""),!0),e}function on(e,n,t){if(i(e))for(var r=0;r<e.length;r++)e[r]&&"string"!=typeof e[r]&&sn(e[r],"".concat(n,"_").concat(r),t);else sn(e,n,t)}function sn(e,n,t){e.isStatic=!0,e.key=n,e.isOnce=t}function ln(e,n){if(n)if(h(n)){var t=e.on=e.on?O({},e.on):{};for(var r in n){var i=t[r],a=n[r];t[r]=i?[].concat(i,a):a}}else;return e}function cn(e,n,t,r){n=n||{$stable:!t};for(var a=0;a<e.length;a++){var o=e[a];i(o)?cn(o,n,t):o&&(o.proxy&&(o.fn.proxy=!0),n[o.key]=o.fn)}return r&&(n.$key=r),n}function dn(e,n){for(var t=0;t<n.length;t+=2){var r=n[t];"string"==typeof r&&r&&(e[n[t]]=n[t+1])}return e}function un(e,n){return"string"==typeof e?n+e:e}function hn(e){e._o=an,e._n=y,e._s=g,e._l=Xe,e._t=Qe,e._q=R,e._i=M,e._m=rn,e._f=Ze,e._k=nn,e._b=tn,e._v=me,e._e=pe,e._u=cn,e._g=ln,e._d=dn,e._p=un}function fn(e,n){if(!e||!e.length)return{};for(var t={},r=0,i=e.length;r<i;r++){var a=e[r],o=a.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,a.context!==n&&a.fnContext!==n||!o||null==o.slot)(t.default||(t.default=[])).push(a);else{var s=o.slot,l=t[s]||(t[s]=[]);"template"===a.tag?l.push.apply(l,a.children||[]):l.push(a)}}for(var c in t)t[c].every(pn)&&delete t[c];return t}function pn(e){return e.isComment&&!e.asyncFactory||" "===e.text}function mn(e){return e.isComment&&e.asyncFactory}function gn(e,n,t,i){var a,o=Object.keys(t).length>0,s=n?!!n.$stable:!o,l=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(s&&i&&i!==r&&l===i.$key&&!o&&!i.$hasNormal)return i;for(var c in a={},n)n[c]&&"$"!==c[0]&&(a[c]=vn(e,t,c,n[c]))}else a={};for(var d in t)d in a||(a[d]=yn(t,d));return n&&Object.isExtensible(n)&&(n._normalized=a),V(a,"$stable",s),V(a,"$key",l),V(a,"$hasNormal",o),a}function vn(e,n,t,r){var a=function(){var n=ue;he(e);var t=arguments.length?r.apply(null,arguments):r({}),a=(t=t&&"object"==typeof t&&!i(t)?[t]:Ke(t))&&t[0];return he(n),t&&(!a||1===t.length&&a.isComment&&!mn(a))?void 0:t};return r.proxy&&Object.defineProperty(n,t,{get:a,enumerable:!0,configurable:!0}),a}function yn(e,n){return function(){return e[n]}}function wn(e){return{get attrs(){if(!e._attrsProxy){var n=e._attrsProxy={};V(n,"_v_attr_proxy",!0),bn(n,e.$attrs,r,e,"$attrs")}return e._attrsProxy},get listeners(){e._listenersProxy||bn(e._listenersProxy={},e.$listeners,r,e,"$listeners");return e._listenersProxy},get slots(){return function(e){e._slotsProxy||xn(e._slotsProxy={},e.$scopedSlots);return e._slotsProxy}(e)},emit:P(e.$emit,e),expose:function(n){n&&Object.keys(n).forEach((function(t){return Fe(e,n,t)}))}}}function bn(e,n,t,r,i){var a=!1;for(var o in n)o in e?n[o]!==t[o]&&(a=!0):(a=!0,_n(e,o,r,i));for(var o in e)o in n||(a=!0,delete e[o]);return a}function _n(e,n,t,r){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){return t[r][n]}})}function xn(e,n){for(var t in n)e[t]=n[t];for(var t in e)t in n||delete e[t]}var Tn=null;function kn(e,n){return(e.__esModule||de&&"Module"===e[Symbol.toStringTag])&&(e=e.default),d(e)?n.extend(e):e}function Cn(e){if(i(e))for(var n=0;n<e.length;n++){var t=e[n];if(o(t)&&(o(t.componentOptions)||mn(t)))return t}}function In(e,n,t,r,u,h){return(i(t)||l(t))&&(u=r,r=t,t=void 0),s(h)&&(u=2),function(e,n,t,r,l){if(o(t)&&o(t.__ob__))return pe();o(t)&&o(t.is)&&(n=t.is);if(!n)return pe();0;i(r)&&c(r[0])&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===l?r=Ke(r):1===l&&(r=function(e){for(var n=0;n<e.length;n++)if(i(e[n]))return Array.prototype.concat.apply([],e);return e}(r));var u,h;if("string"==typeof n){var f=void 0;h=e.$vnode&&e.$vnode.ns||q.getTagNamespace(n),u=q.isReservedTag(n)?new fe(q.parsePlatformTagName(n),t,r,void 0,void 0,e):t&&t.pre||!o(f=Et(e.$options,"components",n))?new fe(n,t,r,void 0,void 0,e):_t(f,t,e,r,n)}else u=_t(n,t,e,r);return i(u)?u:o(u)?(o(h)&&function e(n,t,r){n.ns=t,"foreignObject"===n.tag&&(t=void 0,r=!0);if(o(n.children))for(var i=0,l=n.children.length;i<l;i++){var c=n.children[i];o(c.tag)&&(a(c.ns)||s(r)&&"svg"!==c.tag)&&e(c,t,r)}}(u,h),o(t)&&function(e){d(e.style)&&qn(e.style);d(e.class)&&qn(e.class)}(t),u):pe()}(e,n,t,r,u)}function zn(e,n,t){_e();try{if(n)for(var r=n;r=r.$parent;){var i=r.$options.errorCaptured;if(i)for(var a=0;a<i.length;a++)try{if(!1===i[a].call(r,e,n,t))return}catch(e){An(e,r,"errorCaptured hook")}}An(e,n,t)}finally{xe()}}function Sn(e,n,t,r,i){var a;try{(a=t?e.apply(n,t):e.call(n))&&!a._isVue&&m(a)&&!a._handled&&(a.catch((function(e){return zn(e,r,i+" (Promise/async)")})),a._handled=!0)}catch(e){zn(e,r,i)}return a}function An(e,n,t){if(q.errorHandler)try{return q.errorHandler.call(null,e,n,t)}catch(n){n!==e&&Pn(n,null,"config.errorHandler")}Pn(e,n,t)}function Pn(e,n,t){if(!K||"undefined"==typeof console)throw e;console.error(e)}var En,On=!1,Ln=[],Un=!1;function $n(){Un=!1;var e=Ln.slice(0);Ln.length=0;for(var n=0;n<e.length;n++)e[n]()}if("undefined"!=typeof Promise&&le(Promise)){var jn=Promise.resolve();En=function(){jn.then($n),ee&&setTimeout(U)},On=!0}else if(X||"undefined"==typeof MutationObserver||!le(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())En="undefined"!=typeof setImmediate&&le(setImmediate)?function(){setImmediate($n)}:function(){setTimeout($n,0)};else{var Rn=1,Mn=new MutationObserver($n),Nn=document.createTextNode(String(Rn));Mn.observe(Nn,{characterData:!0}),En=function(){Rn=(Rn+1)%2,Nn.data=String(Rn)},On=!0}function Fn(e,n){var t;if(Ln.push((function(){if(e)try{e.call(n)}catch(e){zn(e,n,"nextTick")}else t&&t(n)})),Un||(Un=!0,En()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){t=e}))}function Hn(e){return function(n,t){if(void 0===t&&(t=ue),t)return function(e,n,t){var r=e.$options;r[n]=zt(r[n],t)}(t,e,n)}}Hn("beforeMount"),Hn("mounted"),Hn("beforeUpdate"),Hn("updated"),Hn("beforeDestroy"),Hn("destroyed"),Hn("activated"),Hn("deactivated"),Hn("serverPrefetch"),Hn("renderTracked"),Hn("renderTriggered"),Hn("errorCaptured");var Dn=new ce;function qn(e){return function e(n,t){var r,a,o=i(n);if(!o&&!d(n)||n.__v_skip||Object.isFrozen(n)||n instanceof fe)return;if(n.__ob__){var s=n.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(o)for(r=n.length;r--;)e(n[r],t);else if(Ne(n))e(n.value,t);else for(a=Object.keys(n),r=a.length;r--;)e(n[a[r]],t)}(e,Dn),Dn.clear(),e}var Bn,Gn=0,Vn=function(){function e(e,n,t,r,i){var a,o;a=this,void 0===(o=He&&!He._vm?He:e?e._scope:void 0)&&(o=He),o&&o.active&&o.effects.push(a),(this.vm=e)&&i&&(e._watcher=this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Gn,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ce,this.newDepIds=new ce,this.expression="",c(n)?this.getter=n:(this.getter=function(e){if(!W.test(e)){var n=e.split(".");return function(e){for(var t=0;t<n.length;t++){if(!e)return;e=e[n[t]]}return e}}}(n),this.getter||(this.getter=U)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;_e(this);var n=this.vm;try{e=this.getter.call(n,n)}catch(e){if(!this.user)throw e;zn(e,n,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&qn(e),xe(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var n=e.id;this.newDepIds.has(n)||(this.newDepIds.add(n),this.newDeps.push(e),this.depIds.has(n)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var n=this.deps[e];this.newDepIds.has(n.id)||n.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():ft(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||d(e)||this.deep){var n=this.value;if(this.value=e,this.user){var t='callback for watcher "'.concat(this.expression,'"');Sn(this.cb,this.vm,[e,n],this.vm,t)}else this.cb.call(this.vm,e,n)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&_(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}();function Wn(e,n){Bn.$on(e,n)}function Yn(e,n){Bn.$off(e,n)}function Kn(e,n){var t=Bn;return function r(){var i=n.apply(null,arguments);null!==i&&t.$off(e,r)}}function Jn(e,n,t){Bn=e,Ve(n,t||{},Wn,Yn,Kn,e),Bn=void 0}var Xn=null;function Qn(e){var n=Xn;return Xn=e,function(){Xn=n}}function Zn(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function et(e,n){if(n){if(e._directInactive=!1,Zn(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var t=0;t<e.$children.length;t++)et(e.$children[t]);nt(e,"activated")}}function nt(e,n,t,r){void 0===r&&(r=!0),_e();var i=ue,a=He;r&&he(e);var o=e.$options[n],s="".concat(n," hook");if(o)for(var l=0,c=o.length;l<c;l++)Sn(o[l],e,t||null,e,s);e._hasHookEvent&&e.$emit("hook:"+n),r&&(he(i),a&&a.on()),xe()}var tt=[],rt=[],it={},at=!1,ot=!1,st=0;var lt=0,ct=Date.now;if(K&&!X){var dt=window.performance;dt&&"function"==typeof dt.now&&ct()>document.createEvent("Event").timeStamp&&(ct=function(){return dt.now()})}var ut=function(e,n){if(e.post){if(!n.post)return 1}else if(n.post)return-1;return e.id-n.id};function ht(){var e,n;for(lt=ct(),ot=!0,tt.sort(ut),st=0;st<tt.length;st++)(e=tt[st]).before&&e.before(),n=e.id,it[n]=null,e.run();var t=rt.slice(),r=tt.slice();st=tt.length=rt.length=0,it={},at=ot=!1,function(e){for(var n=0;n<e.length;n++)e[n]._inactive=!0,et(e[n],!0)}(t),function(e){var n=e.length;for(;n--;){var t=e[n],r=t.vm;r&&r._watcher===t&&r._isMounted&&!r._isDestroyed&&nt(r,"updated")}}(r),function(){for(var e=0;e<ye.length;e++){var n=ye[e];n.subs=n.subs.filter((function(e){return e})),n._pending=!1}ye.length=0}(),se&&q.devtools&&se.emit("flush")}function ft(e){var n=e.id;if(null==it[n]&&(e!==we.target||!e.noRecurse)){if(it[n]=!0,ot){for(var t=tt.length-1;t>st&&tt[t].id>e.id;)t--;tt.splice(t+1,0,e)}else tt.push(e);at||(at=!0,Fn(ht))}}function pt(e,n){if(e){for(var t=Object.create(null),r=de?Reflect.ownKeys(e):Object.keys(e),i=0;i<r.length;i++){var a=r[i];if("__ob__"!==a){var o=e[a].from;if(o in n._provided)t[a]=n._provided[o];else if("default"in e[a]){var s=e[a].default;t[a]=c(s)?s.call(n):s}else 0}}return t}}function mt(e,n,t,a,o){var l,c=this,d=o.options;T(a,"_uid")?(l=Object.create(a))._original=a:(l=a,a=a._original);var u=s(d._compiled),h=!u;this.data=e,this.props=n,this.children=t,this.parent=a,this.listeners=e.on||r,this.injections=pt(d.inject,a),this.slots=function(){return c.$slots||gn(a,e.scopedSlots,c.$slots=fn(t,a)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return gn(a,e.scopedSlots,this.slots())}}),u&&(this.$options=d,this.$slots=this.slots(),this.$scopedSlots=gn(a,e.scopedSlots,this.$slots)),d._scopeId?this._c=function(e,n,t,r){var o=In(l,e,n,t,r,h);return o&&!i(o)&&(o.fnScopeId=d._scopeId,o.fnContext=a),o}:this._c=function(e,n,t,r){return In(l,e,n,t,r,h)}}function gt(e,n,t,r,i){var a=ge(e);return a.fnContext=t,a.fnOptions=r,n.slot&&((a.data||(a.data={})).slot=n.slot),a}function vt(e,n){for(var t in n)e[I(t)]=n[t]}function yt(e){return e.name||e.__name||e._componentTag}hn(mt.prototype);var wt={init:function(e,n){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var t=e;wt.prepatch(t,t)}else{(e.componentInstance=function(e,n){var t={_isComponent:!0,_parentVnode:e,parent:n},r=e.data.inlineTemplate;o(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new e.componentOptions.Ctor(t)}(e,Xn)).$mount(n?e.elm:void 0,n)}},prepatch:function(e,n){var t=n.componentOptions;!function(e,n,t,i,a){var o=i.data.scopedSlots,s=e.$scopedSlots,l=!!(o&&!o.$stable||s!==r&&!s.$stable||o&&e.$scopedSlots.$key!==o.$key||!o&&e.$scopedSlots.$key),c=!!(a||e.$options._renderChildren||l),d=e.$vnode;e.$options._parentVnode=i,e.$vnode=i,e._vnode&&(e._vnode.parent=i),e.$options._renderChildren=a;var u=i.data.attrs||r;e._attrsProxy&&bn(e._attrsProxy,u,d.data&&d.data.attrs||r,e,"$attrs")&&(c=!0),e.$attrs=u,t=t||r;var h=e.$options._parentListeners;if(e._listenersProxy&&bn(e._listenersProxy,t,h||r,e,"$listeners"),e.$listeners=e.$options._parentListeners=t,Jn(e,t,h),n&&e.$options.props){Se(!1);for(var f=e._props,p=e.$options._propKeys||[],m=0;m<p.length;m++){var g=p[m],v=e.$options.props;f[g]=Ot(g,v,n,e)}Se(!0),e.$options.propsData=n}c&&(e.$slots=fn(a,i.context),e.$forceUpdate())}(n.componentInstance=e.componentInstance,t.propsData,t.listeners,n,t.children)},insert:function(e){var n,t=e.context,r=e.componentInstance;r._isMounted||(r._isMounted=!0,nt(r,"mounted")),e.data.keepAlive&&(t._isMounted?((n=r)._inactive=!1,rt.push(n)):et(r,!0))},destroy:function(e){var n=e.componentInstance;n._isDestroyed||(e.data.keepAlive?function e(n,t){if(!(t&&(n._directInactive=!0,Zn(n))||n._inactive)){n._inactive=!0;for(var r=0;r<n.$children.length;r++)e(n.$children[r]);nt(n,"deactivated")}}(n,!0):n.$destroy())}},bt=Object.keys(wt);function _t(e,n,t,l,c){if(!a(e)){var u=t.$options._base;if(d(e)&&(e=u.extend(e)),"function"==typeof e){var h;if(a(e.cid)&&void 0===(e=function(e,n){if(s(e.error)&&o(e.errorComp))return e.errorComp;if(o(e.resolved))return e.resolved;var t=Tn;if(t&&o(e.owners)&&-1===e.owners.indexOf(t)&&e.owners.push(t),s(e.loading)&&o(e.loadingComp))return e.loadingComp;if(t&&!o(e.owners)){var r=e.owners=[t],i=!0,l=null,c=null;t.$on("hook:destroyed",(function(){return _(r,t)}));var u=function(e){for(var n=0,t=r.length;n<t;n++)r[n].$forceUpdate();e&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==c&&(clearTimeout(c),c=null))},h=N((function(t){e.resolved=kn(t,n),i?r.length=0:u(!0)})),f=N((function(n){o(e.errorComp)&&(e.error=!0,u(!0))})),p=e(h,f);return d(p)&&(m(p)?a(e.resolved)&&p.then(h,f):m(p.component)&&(p.component.then(h,f),o(p.error)&&(e.errorComp=kn(p.error,n)),o(p.loading)&&(e.loadingComp=kn(p.loading,n),0===p.delay?e.loading=!0:l=setTimeout((function(){l=null,a(e.resolved)&&a(e.error)&&(e.loading=!0,u(!1))}),p.delay||200)),o(p.timeout)&&(c=setTimeout((function(){c=null,a(e.resolved)&&f(null)}),p.timeout)))),i=!1,e.loading?e.loadingComp:e.resolved}}(h=e,u)))return function(e,n,t,r,i){var a=pe();return a.asyncFactory=e,a.asyncMeta={data:n,context:t,children:r,tag:i},a}(h,n,t,l,c);n=n||{},Vt(e),o(n.model)&&function(e,n){var t=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(n.attrs||(n.attrs={}))[t]=n.model.value;var a=n.on||(n.on={}),s=a[r],l=n.model.callback;o(s)?(i(s)?-1===s.indexOf(l):s!==l)&&(a[r]=[l].concat(s)):a[r]=l}(e.options,n);var f=function(e,n,t){var r=n.options.props;if(!a(r)){var i={},s=e.attrs,l=e.props;if(o(s)||o(l))for(var c in r){var d=A(c);Ye(i,l,c,d,!0)||Ye(i,s,c,d,!1)}return i}}(n,e);if(s(e.options.functional))return function(e,n,t,a,s){var l=e.options,c={},d=l.props;if(o(d))for(var u in d)c[u]=Ot(u,d,n||r);else o(t.attrs)&&vt(c,t.attrs),o(t.props)&&vt(c,t.props);var h=new mt(t,c,s,a,e),f=l.render.call(null,h._c,h);if(f instanceof fe)return gt(f,t,h.parent,l,h);if(i(f)){for(var p=Ke(f)||[],m=new Array(p.length),g=0;g<p.length;g++)m[g]=gt(p[g],t,h.parent,l,h);return m}}(e,f,n,t,l);var p=n.on;if(n.on=n.nativeOn,s(e.options.abstract)){var g=n.slot;n={},g&&(n.slot=g)}!function(e){for(var n=e.hook||(e.hook={}),t=0;t<bt.length;t++){var r=bt[t],i=n[r],a=wt[r];i===a||i&&i._merged||(n[r]=i?xt(a,i):a)}}(n);var v=yt(e.options)||c;return new fe("vue-component-".concat(e.cid).concat(v?"-".concat(v):""),n,void 0,void 0,void 0,t,{Ctor:e,propsData:f,listeners:p,tag:c,children:l},h)}}}function xt(e,n){var t=function(t,r){e(t,r),n(t,r)};return t._merged=!0,t}var Tt=U,kt=q.optionMergeStrategies;function Ct(e,n,t){if(void 0===t&&(t=!0),!n)return e;for(var r,i,a,o=de?Reflect.ownKeys(n):Object.keys(n),s=0;s<o.length;s++)"__ob__"!==(r=o[s])&&(i=e[r],a=n[r],t&&T(e,r)?i!==a&&h(i)&&h(a)&&Ct(i,a):Le(e,r,a));return e}function It(e,n,t){return t?function(){var r=c(n)?n.call(t,t):n,i=c(e)?e.call(t,t):e;return r?Ct(r,i):i}:n?e?function(){return Ct(c(n)?n.call(this,this):n,c(e)?e.call(this,this):e)}:n:e}function zt(e,n){var t=n?e?e.concat(n):i(n)?n:[n]:e;return t?function(e){for(var n=[],t=0;t<e.length;t++)-1===n.indexOf(e[t])&&n.push(e[t]);return n}(t):t}function St(e,n,t,r){var i=Object.create(e||null);return n?O(i,n):i}kt.data=function(e,n,t){return t?It(e,n,t):n&&"function"!=typeof n?e:It(e,n)},D.forEach((function(e){kt[e]=zt})),H.forEach((function(e){kt[e+"s"]=St})),kt.watch=function(e,n,t,r){if(e===re&&(e=void 0),n===re&&(n=void 0),!n)return Object.create(e||null);if(!e)return n;var a={};for(var o in O(a,e),n){var s=a[o],l=n[o];s&&!i(s)&&(s=[s]),a[o]=s?s.concat(l):i(l)?l:[l]}return a},kt.props=kt.methods=kt.inject=kt.computed=function(e,n,t,r){if(!e)return n;var i=Object.create(null);return O(i,e),n&&O(i,n),i},kt.provide=function(e,n){return e?function(){var t=Object.create(null);return Ct(t,c(e)?e.call(this):e),n&&Ct(t,c(n)?n.call(this):n,!1),t}:n};var At=function(e,n){return void 0===n?e:n};function Pt(e,n,t){if(c(n)&&(n=n.options),function(e,n){var t=e.props;if(t){var r,a,o={};if(i(t))for(r=t.length;r--;)"string"==typeof(a=t[r])&&(o[I(a)]={type:null});else if(h(t))for(var s in t)a=t[s],o[I(s)]=h(a)?a:{type:a};else 0;e.props=o}}(n),function(e,n){var t=e.inject;if(t){var r=e.inject={};if(i(t))for(var a=0;a<t.length;a++)r[t[a]]={from:t[a]};else if(h(t))for(var o in t){var s=t[o];r[o]=h(s)?O({from:o},s):{from:s}}else 0}}(n),function(e){var n=e.directives;if(n)for(var t in n){var r=n[t];c(r)&&(n[t]={bind:r,update:r})}}(n),!n._base&&(n.extends&&(e=Pt(e,n.extends,t)),n.mixins))for(var r=0,a=n.mixins.length;r<a;r++)e=Pt(e,n.mixins[r],t);var o,s={};for(o in e)l(o);for(o in n)T(e,o)||l(o);function l(r){var i=kt[r]||At;s[r]=i(e[r],n[r],t,r)}return s}function Et(e,n,t,r){if("string"==typeof t){var i=e[n];if(T(i,t))return i[t];var a=I(t);if(T(i,a))return i[a];var o=z(a);return T(i,o)?i[o]:i[t]||i[a]||i[o]}}function Ot(e,n,t,r){var i=n[e],a=!T(t,e),o=t[e],s=jt(Boolean,i.type);if(s>-1)if(a&&!T(i,"default"))o=!1;else if(""===o||o===A(e)){var l=jt(String,i.type);(l<0||s<l)&&(o=!0)}if(void 0===o){o=function(e,n,t){if(!T(n,"default"))return;var r=n.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[t]&&void 0!==e._props[t])return e._props[t];return c(r)&&"Function"!==Ut(n.type)?r.call(e):r}(r,i,e);var d=ze;Se(!0),Ee(o),Se(d)}return o}var Lt=/^\s*function (\w+)/;function Ut(e){var n=e&&e.toString().match(Lt);return n?n[1]:""}function $t(e,n){return Ut(e)===Ut(n)}function jt(e,n){if(!i(n))return $t(n,e)?0:-1;for(var t=0,r=n.length;t<r;t++)if($t(n[t],e))return t;return-1}var Rt={enumerable:!0,configurable:!0,get:U,set:U};function Mt(e,n,t){Rt.get=function(){return this[n][t]},Rt.set=function(e){this[n][t]=e},Object.defineProperty(e,t,Rt)}function Nt(e){var n=e.$options;if(n.props&&function(e,n){var t=e.$options.propsData||{},r=e._props=je({}),i=e.$options._propKeys=[];e.$parent&&Se(!1);var a=function(a){i.push(a);var o=Ot(a,n,t,e);Oe(r,a,o,void 0,!0),a in e||Mt(e,"_props",a)};for(var o in n)a(o);Se(!0)}(e,n.props),function(e){var n=e.$options,t=n.setup;if(t){var r=e._setupContext=wn(e);he(e),_e();var i=Sn(t,null,[e._props||je({}),r],e,"setup");if(xe(),he(),c(i))n.render=i;else if(d(i))if(e._setupState=i,i.__sfc){var a=e._setupProxy={};for(var o in i)"__sfc"!==o&&Fe(a,i,o)}else for(var o in i)G(o)||Fe(e,i,o);else 0}}(e),n.methods&&function(e,n){e.$options.props;for(var t in n)e[t]="function"!=typeof n[t]?U:P(n[t],e)}(e,n.methods),n.data)!function(e){var n=e.$options.data;h(n=e._data=c(n)?function(e,n){_e();try{return e.call(n,n)}catch(e){return zn(e,n,"data()"),{}}finally{xe()}}(n,e):n||{})||(n={});var t=Object.keys(n),r=e.$options.props,i=(e.$options.methods,t.length);for(;i--;){var a=t[i];0,r&&T(r,a)||G(a)||Mt(e,"_data",a)}var o=Ee(n);o&&o.vmCount++}(e);else{var t=Ee(e._data={});t&&t.vmCount++}n.computed&&function(e,n){var t=e._computedWatchers=Object.create(null),r=oe();for(var i in n){var a=n[i],o=c(a)?a:a.get;0,r||(t[i]=new Vn(e,o||U,U,Ft)),i in e||Ht(e,i,a)}}(e,n.computed),n.watch&&n.watch!==re&&function(e,n){for(var t in n){var r=n[t];if(i(r))for(var a=0;a<r.length;a++)Bt(e,t,r[a]);else Bt(e,t,r)}}(e,n.watch)}var Ft={lazy:!0};function Ht(e,n,t){var r=!oe();c(t)?(Rt.get=r?Dt(n):qt(t),Rt.set=U):(Rt.get=t.get?r&&!1!==t.cache?Dt(n):qt(t.get):U,Rt.set=t.set||U),Object.defineProperty(e,n,Rt)}function Dt(e){return function(){var n=this._computedWatchers&&this._computedWatchers[e];if(n)return n.dirty&&n.evaluate(),we.target&&n.depend(),n.value}}function qt(e){return function(){return e.call(this,this)}}function Bt(e,n,t,r){return h(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=e[t]),e.$watch(n,t,r)}var Gt=0;function Vt(e){var n=e.options;if(e.super){var t=Vt(e.super);if(t!==e.superOptions){e.superOptions=t;var r=function(e){var n,t=e.options,r=e.sealedOptions;for(var i in t)t[i]!==r[i]&&(n||(n={}),n[i]=t[i]);return n}(e);r&&O(e.extendOptions,r),(n=e.options=Pt(t,e.extendOptions)).name&&(n.components[n.name]=e)}}return n}function Wt(e){this._init(e)}function Yt(e){e.cid=0;var n=1;e.extend=function(e){e=e||{};var t=this,r=t.cid,i=e._Ctor||(e._Ctor={});if(i[r])return i[r];var a=yt(e)||yt(t.options);var o=function(e){this._init(e)};return(o.prototype=Object.create(t.prototype)).constructor=o,o.cid=n++,o.options=Pt(t.options,e),o.super=t,o.options.props&&function(e){var n=e.options.props;for(var t in n)Mt(e.prototype,"_props",t)}(o),o.options.computed&&function(e){var n=e.options.computed;for(var t in n)Ht(e.prototype,t,n[t])}(o),o.extend=t.extend,o.mixin=t.mixin,o.use=t.use,H.forEach((function(e){o[e]=t[e]})),a&&(o.options.components[a]=o),o.superOptions=t.options,o.extendOptions=e,o.sealedOptions=O({},o.options),i[r]=o,o}}function Kt(e){return e&&(yt(e.Ctor.options)||e.tag)}function Jt(e,n){return i(e)?e.indexOf(n)>-1:"string"==typeof e?e.split(",").indexOf(n)>-1:!!f(e)&&e.test(n)}function Xt(e,n){var t=e.cache,r=e.keys,i=e._vnode,a=e.$vnode;for(var o in t){var s=t[o];if(s){var l=s.name;l&&!n(l)&&Qt(t,o,r,i)}}a.componentOptions.children=void 0}function Qt(e,n,t,r){var i=e[n];!i||r&&i.tag===r.tag||i.componentInstance.$destroy(),e[n]=null,_(t,n)}Wt.prototype._init=function(e){var n=this;n._uid=Gt++,n._isVue=!0,n.__v_skip=!0,n._scope=new De(!0),n._scope.parent=void 0,n._scope._vm=!0,e&&e._isComponent?function(e,n){var t=e.$options=Object.create(e.constructor.options),r=n._parentVnode;t.parent=n.parent,t._parentVnode=r;var i=r.componentOptions;t.propsData=i.propsData,t._parentListeners=i.listeners,t._renderChildren=i.children,t._componentTag=i.tag,n.render&&(t.render=n.render,t.staticRenderFns=n.staticRenderFns)}(n,e):n.$options=Pt(Vt(n.constructor),e||{},n),n._renderProxy=n,n._self=n,function(e){var n=e.$options,t=n.parent;if(t&&!n.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(e)}e.$parent=t,e.$root=t?t.$root:e,e.$children=[],e.$refs={},e._provided=t?t._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var n=e.$options._parentListeners;n&&Jn(e,n)}(n),function(e){e._vnode=null,e._staticTrees=null;var n=e.$options,t=e.$vnode=n._parentVnode,i=t&&t.context;e.$slots=fn(n._renderChildren,i),e.$scopedSlots=t?gn(e.$parent,t.data.scopedSlots,e.$slots):r,e._c=function(n,t,r,i){return In(e,n,t,r,i,!1)},e.$createElement=function(n,t,r,i){return In(e,n,t,r,i,!0)};var a=t&&t.data;Oe(e,"$attrs",a&&a.attrs||r,null,!0),Oe(e,"$listeners",n._parentListeners||r,null,!0)}(n),nt(n,"beforeCreate",void 0,!1),function(e){var n=pt(e.$options.inject,e);n&&(Se(!1),Object.keys(n).forEach((function(t){Oe(e,t,n[t])})),Se(!0))}(n),Nt(n),function(e){var n=e.$options.provide;if(n){var t=c(n)?n.call(e):n;if(!d(t))return;for(var r=qe(e),i=de?Reflect.ownKeys(t):Object.keys(t),a=0;a<i.length;a++){var o=i[a];Object.defineProperty(r,o,Object.getOwnPropertyDescriptor(t,o))}}}(n),nt(n,"created"),n.$options.el&&n.$mount(n.$options.el)},function(e){var n={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",n),Object.defineProperty(e.prototype,"$props",t),e.prototype.$set=Le,e.prototype.$delete=Ue,e.prototype.$watch=function(e,n,t){if(h(n))return Bt(this,e,n,t);(t=t||{}).user=!0;var r=new Vn(this,e,n,t);if(t.immediate){var i='callback for immediate watcher "'.concat(r.expression,'"');_e(),Sn(n,this,[r.value],this,i),xe()}return function(){r.teardown()}}}(Wt),function(e){var n=/^hook:/;e.prototype.$on=function(e,t){var r=this;if(i(e))for(var a=0,o=e.length;a<o;a++)r.$on(e[a],t);else(r._events[e]||(r._events[e]=[])).push(t),n.test(e)&&(r._hasHookEvent=!0);return r},e.prototype.$once=function(e,n){var t=this;function r(){t.$off(e,r),n.apply(t,arguments)}return r.fn=n,t.$on(e,r),t},e.prototype.$off=function(e,n){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(i(e)){for(var r=0,a=e.length;r<a;r++)t.$off(e[r],n);return t}var o,s=t._events[e];if(!s)return t;if(!n)return t._events[e]=null,t;for(var l=s.length;l--;)if((o=s[l])===n||o.fn===n){s.splice(l,1);break}return t},e.prototype.$emit=function(e){var n=this,t=n._events[e];if(t){t=t.length>1?E(t):t;for(var r=E(arguments,1),i='event handler for "'.concat(e,'"'),a=0,o=t.length;a<o;a++)Sn(t[a],n,r,n,i)}return n}}(Wt),function(e){e.prototype._update=function(e,n){var t=this,r=t.$el,i=t._vnode,a=Qn(t);t._vnode=e,t.$el=i?t.__patch__(i,e):t.__patch__(t.$el,e,n,!1),a(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var o=t;o&&o.$vnode&&o.$parent&&o.$vnode===o.$parent._vnode;)o.$parent.$el=o.$el,o=o.$parent},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){nt(e,"beforeDestroy"),e._isBeingDestroyed=!0;var n=e.$parent;!n||n._isBeingDestroyed||e.$options.abstract||_(n.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),nt(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Wt),function(e){hn(e.prototype),e.prototype.$nextTick=function(e){return Fn(e,this)},e.prototype._render=function(){var e=this,n=e.$options,t=n.render,r=n._parentVnode;r&&e._isMounted&&(e.$scopedSlots=gn(e.$parent,r.data.scopedSlots,e.$slots,e.$scopedSlots),e._slotsProxy&&xn(e._slotsProxy,e.$scopedSlots)),e.$vnode=r;var a,o=ue,s=Tn;try{he(e),Tn=e,a=t.call(e._renderProxy,e.$createElement)}catch(n){zn(n,e,"render"),a=e._vnode}finally{Tn=s,he(o)}return i(a)&&1===a.length&&(a=a[0]),a instanceof fe||(a=pe()),a.parent=r,a}}(Wt);var Zt=[String,RegExp,Array],er={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Zt,exclude:Zt,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,n=this.keys,t=this.vnodeToCache,r=this.keyToCache;if(t){var i=t.tag,a=t.componentInstance,o=t.componentOptions;e[r]={name:Kt(o),tag:i,componentInstance:a},n.push(r),this.max&&n.length>parseInt(this.max)&&Qt(e,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Qt(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(n){Xt(e,(function(e){return Jt(n,e)}))})),this.$watch("exclude",(function(n){Xt(e,(function(e){return!Jt(n,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,n=Cn(e),t=n&&n.componentOptions;if(t){var r=Kt(t),i=this.include,a=this.exclude;if(i&&(!r||!Jt(i,r))||a&&r&&Jt(a,r))return n;var o=this.cache,s=this.keys,l=null==n.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):n.key;o[l]?(n.componentInstance=o[l].componentInstance,_(s,l),s.push(l)):(this.vnodeToCache=n,this.keyToCache=l),n.data.keepAlive=!0}return n||e&&e[0]}}};!function(e){var n={get:function(){return q}};Object.defineProperty(e,"config",n),e.util={warn:Tt,extend:O,mergeOptions:Pt,defineReactive:Oe},e.set=Le,e.delete=Ue,e.nextTick=Fn,e.observable=function(e){return Ee(e),e},e.options=Object.create(null),H.forEach((function(n){e.options[n+"s"]=Object.create(null)})),e.options._base=e,O(e.options.components,er),function(e){e.use=function(e){var n=this._installedPlugins||(this._installedPlugins=[]);if(n.indexOf(e)>-1)return this;var t=E(arguments,1);return t.unshift(this),c(e.install)?e.install.apply(e,t):c(e)&&e.apply(null,t),n.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Pt(this.options,e),this}}(e),Yt(e),function(e){H.forEach((function(n){e[n]=function(e,t){return t?("component"===n&&h(t)&&(t.name=t.name||e,t=this.options._base.extend(t)),"directive"===n&&c(t)&&(t={bind:t,update:t}),this.options[n+"s"][e]=t,t):this.options[n+"s"][e]}}))}(e)}(Wt),Object.defineProperty(Wt.prototype,"$isServer",{get:oe}),Object.defineProperty(Wt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Wt,"FunctionalRenderContext",{value:mt}),Wt.version="2.7.16";var nr=w("style,class"),tr=w("input,textarea,option,select,progress"),rr=w("contenteditable,draggable,spellcheck"),ir=w("events,caret,typing,plaintext-only"),ar=w("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),or="http://www.w3.org/1999/xlink",sr=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},lr=function(e){return sr(e)?e.slice(6,e.length):""},cr=function(e){return null==e||!1===e};function dr(e){for(var n=e.data,t=e,r=e;o(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(n=ur(r.data,n));for(;o(t=t.parent);)t&&t.data&&(n=ur(n,t.data));return function(e,n){if(o(e)||o(n))return hr(e,fr(n));return""}(n.staticClass,n.class)}function ur(e,n){return{staticClass:hr(e.staticClass,n.staticClass),class:o(e.class)?[e.class,n.class]:n.class}}function hr(e,n){return e?n?e+" "+n:e:n||""}function fr(e){return Array.isArray(e)?function(e){for(var n,t="",r=0,i=e.length;r<i;r++)o(n=fr(e[r]))&&""!==n&&(t&&(t+=" "),t+=n);return t}(e):d(e)?function(e){var n="";for(var t in e)e[t]&&(n&&(n+=" "),n+=t);return n}(e):"string"==typeof e?e:""}var pr={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},mr=w("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),gr=w("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),vr=function(e){return mr(e)||gr(e)};var yr=Object.create(null);var wr=w("text,number,password,search,email,tel,url");var br=Object.freeze({__proto__:null,createElement:function(e,n){var t=document.createElement(e);return"select"!==e||n.data&&n.data.attrs&&void 0!==n.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(e,n){return document.createElementNS(pr[e],n)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,n,t){e.insertBefore(n,t)},removeChild:function(e,n){e.removeChild(n)},appendChild:function(e,n){e.appendChild(n)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,n){e.textContent=n},setStyleScope:function(e,n){e.setAttribute(n,"")}}),_r={create:function(e,n){xr(n)},update:function(e,n){e.data.ref!==n.data.ref&&(xr(e,!0),xr(n))},destroy:function(e){xr(e,!0)}};function xr(e,n){var t=e.data.ref;if(o(t)){var r=e.context,a=e.componentInstance||e.elm,s=n?null:a,l=n?void 0:a;if(c(t))Sn(t,r,[s],r,"template ref function");else{var d=e.data.refInFor,u="string"==typeof t||"number"==typeof t,h=Ne(t),f=r.$refs;if(u||h)if(d){var p=u?f[t]:t.value;n?i(p)&&_(p,a):i(p)?p.includes(a)||p.push(a):u?(f[t]=[a],Tr(r,t,f[t])):t.value=[a]}else if(u){if(n&&f[t]!==a)return;f[t]=l,Tr(r,t,s)}else if(h){if(n&&t.value!==a)return;t.value=s}else 0}}}function Tr(e,n,t){var r=e._setupState;r&&T(r,n)&&(Ne(r[n])?r[n].value=t:r[n]=t)}var kr=new fe("",{},[]),Cr=["create","activate","update","remove","destroy"];function Ir(e,n){return e.key===n.key&&e.asyncFactory===n.asyncFactory&&(e.tag===n.tag&&e.isComment===n.isComment&&o(e.data)===o(n.data)&&function(e,n){if("input"!==e.tag)return!0;var t,r=o(t=e.data)&&o(t=t.attrs)&&t.type,i=o(t=n.data)&&o(t=t.attrs)&&t.type;return r===i||wr(r)&&wr(i)}(e,n)||s(e.isAsyncPlaceholder)&&a(n.asyncFactory.error))}function zr(e,n,t){var r,i,a={};for(r=n;r<=t;++r)o(i=e[r].key)&&(a[i]=r);return a}var Sr={create:Ar,update:Ar,destroy:function(e){Ar(e,kr)}};function Ar(e,n){(e.data.directives||n.data.directives)&&function(e,n){var t,r,i,a=e===kr,o=n===kr,s=Er(e.data.directives,e.context),l=Er(n.data.directives,n.context),c=[],d=[];for(t in l)r=s[t],i=l[t],r?(i.oldValue=r.value,i.oldArg=r.arg,Lr(i,"update",n,e),i.def&&i.def.componentUpdated&&d.push(i)):(Lr(i,"bind",n,e),i.def&&i.def.inserted&&c.push(i));if(c.length){var u=function(){for(var t=0;t<c.length;t++)Lr(c[t],"inserted",n,e)};a?We(n,"insert",u):u()}d.length&&We(n,"postpatch",(function(){for(var t=0;t<d.length;t++)Lr(d[t],"componentUpdated",n,e)}));if(!a)for(t in s)l[t]||Lr(s[t],"unbind",e,e,o)}(e,n)}var Pr=Object.create(null);function Er(e,n){var t,r,i=Object.create(null);if(!e)return i;for(t=0;t<e.length;t++){if((r=e[t]).modifiers||(r.modifiers=Pr),i[Or(r)]=r,n._setupState&&n._setupState.__sfc){var a=r.def||Et(n,"_setupState","v-"+r.name);r.def="function"==typeof a?{bind:a,update:a}:a}r.def=r.def||Et(n.$options,"directives",r.name)}return i}function Or(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function Lr(e,n,t,r,i){var a=e.def&&e.def[n];if(a)try{a(t.elm,e,t,r,i)}catch(r){zn(r,t.context,"directive ".concat(e.name," ").concat(n," hook"))}}var Ur=[_r,Sr];function $r(e,n){var t=n.componentOptions;if(!(o(t)&&!1===t.Ctor.options.inheritAttrs||a(e.data.attrs)&&a(n.data.attrs))){var r,i,l=n.elm,c=e.data.attrs||{},d=n.data.attrs||{};for(r in(o(d.__ob__)||s(d._v_attr_proxy))&&(d=n.data.attrs=O({},d)),d)i=d[r],c[r]!==i&&jr(l,r,i,n.data.pre);for(r in(X||Z)&&d.value!==c.value&&jr(l,"value",d.value),c)a(d[r])&&(sr(r)?l.removeAttributeNS(or,lr(r)):rr(r)||l.removeAttribute(r))}}function jr(e,n,t,r){r||e.tagName.indexOf("-")>-1?Rr(e,n,t):ar(n)?cr(t)?e.removeAttribute(n):(t="allowfullscreen"===n&&"EMBED"===e.tagName?"true":n,e.setAttribute(n,t)):rr(n)?e.setAttribute(n,function(e,n){return cr(n)||"false"===n?"false":"contenteditable"===e&&ir(n)?n:"true"}(n,t)):sr(n)?cr(t)?e.removeAttributeNS(or,lr(n)):e.setAttributeNS(or,n,t):Rr(e,n,t)}function Rr(e,n,t){if(cr(t))e.removeAttribute(n);else{if(X&&!Q&&"TEXTAREA"===e.tagName&&"placeholder"===n&&""!==t&&!e.__ieph){var r=function(n){n.stopImmediatePropagation(),e.removeEventListener("input",r)};e.addEventListener("input",r),e.__ieph=!0}e.setAttribute(n,t)}}var Mr={create:$r,update:$r};function Nr(e,n){var t=n.elm,r=n.data,i=e.data;if(!(a(r.staticClass)&&a(r.class)&&(a(i)||a(i.staticClass)&&a(i.class)))){var s=dr(n),l=t._transitionClasses;o(l)&&(s=hr(s,fr(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var Fr,Hr={create:Nr,update:Nr};function Dr(e,n,t){var r=Fr;return function i(){var a=n.apply(null,arguments);null!==a&&Gr(e,i,t,r)}}var qr=On&&!(te&&Number(te[1])<=53);function Br(e,n,t,r){if(qr){var i=lt,a=n;n=a._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=i||e.timeStamp<=0||e.target.ownerDocument!==document)return a.apply(this,arguments)}}Fr.addEventListener(e,n,ie?{capture:t,passive:r}:t)}function Gr(e,n,t,r){(r||Fr).removeEventListener(e,n._wrapper||n,t)}function Vr(e,n){if(!a(e.data.on)||!a(n.data.on)){var t=n.data.on||{},r=e.data.on||{};Fr=n.elm||e.elm,function(e){if(o(e.__r)){var n=X?"change":"input";e[n]=[].concat(e.__r,e[n]||[]),delete e.__r}o(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(t),Ve(t,r,Br,Gr,Dr,n.context),Fr=void 0}}var Wr,Yr={create:Vr,update:Vr,destroy:function(e){return Vr(e,kr)}};function Kr(e,n){if(!a(e.data.domProps)||!a(n.data.domProps)){var t,r,i=n.elm,l=e.data.domProps||{},c=n.data.domProps||{};for(t in(o(c.__ob__)||s(c._v_attr_proxy))&&(c=n.data.domProps=O({},c)),l)t in c||(i[t]="");for(t in c){if(r=c[t],"textContent"===t||"innerHTML"===t){if(n.children&&(n.children.length=0),r===l[t])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===t&&"PROGRESS"!==i.tagName){i._value=r;var d=a(r)?"":String(r);Jr(i,d)&&(i.value=d)}else if("innerHTML"===t&&gr(i.tagName)&&a(i.innerHTML)){(Wr=Wr||document.createElement("div")).innerHTML="<svg>".concat(r,"</svg>");for(var u=Wr.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;u.firstChild;)i.appendChild(u.firstChild)}else if(r!==l[t])try{i[t]=r}catch(e){}}}}function Jr(e,n){return!e.composing&&("OPTION"===e.tagName||function(e,n){var t=!0;try{t=document.activeElement!==e}catch(e){}return t&&e.value!==n}(e,n)||function(e,n){var t=e.value,r=e._vModifiers;if(o(r)){if(r.number)return y(t)!==y(n);if(r.trim)return t.trim()!==n.trim()}return t!==n}(e,n))}var Xr={create:Kr,update:Kr},Qr=k((function(e){var n={},t=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var r=e.split(t);r.length>1&&(n[r[0].trim()]=r[1].trim())}})),n}));function Zr(e){var n=ei(e.style);return e.staticStyle?O(e.staticStyle,n):n}function ei(e){return Array.isArray(e)?L(e):"string"==typeof e?Qr(e):e}var ni,ti=/^--/,ri=/\s*!important$/,ii=function(e,n,t){if(ti.test(n))e.style.setProperty(n,t);else if(ri.test(t))e.style.setProperty(A(n),t.replace(ri,""),"important");else{var r=oi(n);if(Array.isArray(t))for(var i=0,a=t.length;i<a;i++)e.style[r]=t[i];else e.style[r]=t}},ai=["Webkit","Moz","ms"],oi=k((function(e){if(ni=ni||document.createElement("div").style,"filter"!==(e=I(e))&&e in ni)return e;for(var n=e.charAt(0).toUpperCase()+e.slice(1),t=0;t<ai.length;t++){var r=ai[t]+n;if(r in ni)return r}}));function si(e,n){var t=n.data,r=e.data;if(!(a(t.staticStyle)&&a(t.style)&&a(r.staticStyle)&&a(r.style))){var i,s,l=n.elm,c=r.staticStyle,d=r.normalizedStyle||r.style||{},u=c||d,h=ei(n.data.style)||{};n.data.normalizedStyle=o(h.__ob__)?O({},h):h;var f=function(e,n){var t,r={};if(n)for(var i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(t=Zr(i.data))&&O(r,t);(t=Zr(e.data))&&O(r,t);for(var a=e;a=a.parent;)a.data&&(t=Zr(a.data))&&O(r,t);return r}(n,!0);for(s in u)a(f[s])&&ii(l,s,"");for(s in f)i=f[s],ii(l,s,null==i?"":i)}}var li={create:si,update:si},ci=/\s+/;function di(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(ci).forEach((function(n){return e.classList.add(n)})):e.classList.add(n);else{var t=" ".concat(e.getAttribute("class")||""," ");t.indexOf(" "+n+" ")<0&&e.setAttribute("class",(t+n).trim())}}function ui(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(ci).forEach((function(n){return e.classList.remove(n)})):e.classList.remove(n),e.classList.length||e.removeAttribute("class");else{for(var t=" ".concat(e.getAttribute("class")||""," "),r=" "+n+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?e.setAttribute("class",t):e.removeAttribute("class")}}function hi(e){if(e){if("object"==typeof e){var n={};return!1!==e.css&&O(n,fi(e.name||"v")),O(n,e),n}return"string"==typeof e?fi(e):void 0}}var fi=k((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),pi=K&&!Q,mi="transition",gi="transitionend",vi="animation",yi="animationend";pi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(mi="WebkitTransition",gi="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(vi="WebkitAnimation",yi="webkitAnimationEnd"));var wi=K?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function bi(e){wi((function(){wi(e)}))}function _i(e,n){var t=e._transitionClasses||(e._transitionClasses=[]);t.indexOf(n)<0&&(t.push(n),di(e,n))}function xi(e,n){e._transitionClasses&&_(e._transitionClasses,n),ui(e,n)}function Ti(e,n,t){var r=Ci(e,n),i=r.type,a=r.timeout,o=r.propCount;if(!i)return t();var s="transition"===i?gi:yi,l=0,c=function(){e.removeEventListener(s,d),t()},d=function(n){n.target===e&&++l>=o&&c()};setTimeout((function(){l<o&&c()}),a+1),e.addEventListener(s,d)}var ki=/\b(transform|all)(,|$)/;function Ci(e,n){var t,r=window.getComputedStyle(e),i=(r[mi+"Delay"]||"").split(", "),a=(r[mi+"Duration"]||"").split(", "),o=Ii(i,a),s=(r[vi+"Delay"]||"").split(", "),l=(r[vi+"Duration"]||"").split(", "),c=Ii(s,l),d=0,u=0;return"transition"===n?o>0&&(t="transition",d=o,u=a.length):"animation"===n?c>0&&(t="animation",d=c,u=l.length):u=(t=(d=Math.max(o,c))>0?o>c?"transition":"animation":null)?"transition"===t?a.length:l.length:0,{type:t,timeout:d,propCount:u,hasTransform:"transition"===t&&ki.test(r[mi+"Property"])}}function Ii(e,n){for(;e.length<n.length;)e=e.concat(e);return Math.max.apply(null,n.map((function(n,t){return zi(n)+zi(e[t])})))}function zi(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Si(e,n){var t=e.elm;o(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=hi(e.data.transition);if(!a(r)&&!o(t._enterCb)&&1===t.nodeType){for(var i=r.css,s=r.type,l=r.enterClass,u=r.enterToClass,h=r.enterActiveClass,f=r.appearClass,p=r.appearToClass,m=r.appearActiveClass,g=r.beforeEnter,v=r.enter,w=r.afterEnter,b=r.enterCancelled,_=r.beforeAppear,x=r.appear,T=r.afterAppear,k=r.appearCancelled,C=r.duration,I=Xn,z=Xn.$vnode;z&&z.parent;)I=z.context,z=z.parent;var S=!I._isMounted||!e.isRootInsert;if(!S||x||""===x){var A=S&&f?f:l,P=S&&m?m:h,E=S&&p?p:u,O=S&&_||g,L=S&&c(x)?x:v,U=S&&T||w,$=S&&k||b,j=y(d(C)?C.enter:C);0;var R=!1!==i&&!Q,M=Ei(L),F=t._enterCb=N((function(){R&&(xi(t,E),xi(t,P)),F.cancelled?(R&&xi(t,A),$&&$(t)):U&&U(t),t._enterCb=null}));e.data.show||We(e,"insert",(function(){var n=t.parentNode,r=n&&n._pending&&n._pending[e.key];r&&r.tag===e.tag&&r.elm._leaveCb&&r.elm._leaveCb(),L&&L(t,F)})),O&&O(t),R&&(_i(t,A),_i(t,P),bi((function(){xi(t,A),F.cancelled||(_i(t,E),M||(Pi(j)?setTimeout(F,j):Ti(t,s,F)))}))),e.data.show&&(n&&n(),L&&L(t,F)),R||M||F()}}}function Ai(e,n){var t=e.elm;o(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=hi(e.data.transition);if(a(r)||1!==t.nodeType)return n();if(!o(t._leaveCb)){var i=r.css,s=r.type,l=r.leaveClass,c=r.leaveToClass,u=r.leaveActiveClass,h=r.beforeLeave,f=r.leave,p=r.afterLeave,m=r.leaveCancelled,g=r.delayLeave,v=r.duration,w=!1!==i&&!Q,b=Ei(f),_=y(d(v)?v.leave:v);0;var x=t._leaveCb=N((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[e.key]=null),w&&(xi(t,c),xi(t,u)),x.cancelled?(w&&xi(t,l),m&&m(t)):(n(),p&&p(t)),t._leaveCb=null}));g?g(T):T()}function T(){x.cancelled||(!e.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[e.key]=e),h&&h(t),w&&(_i(t,l),_i(t,u),bi((function(){xi(t,l),x.cancelled||(_i(t,c),b||(Pi(_)?setTimeout(x,_):Ti(t,s,x)))}))),f&&f(t,x),w||b||x())}}function Pi(e){return"number"==typeof e&&!isNaN(e)}function Ei(e){if(a(e))return!1;var n=e.fns;return o(n)?Ei(Array.isArray(n)?n[0]:n):(e._length||e.length)>1}function Oi(e,n){!0!==n.data.show&&Si(n)}var Li=function(e){var n,t,r={},c=e.modules,d=e.nodeOps;for(n=0;n<Cr.length;++n)for(r[Cr[n]]=[],t=0;t<c.length;++t)o(c[t][Cr[n]])&&r[Cr[n]].push(c[t][Cr[n]]);function u(e){var n=d.parentNode(e);o(n)&&d.removeChild(n,e)}function h(e,n,t,i,a,l,c){if(o(e.elm)&&o(l)&&(e=l[c]=ge(e)),e.isRootInsert=!a,!function(e,n,t,i){var a=e.data;if(o(a)){var l=o(e.componentInstance)&&a.keepAlive;if(o(a=a.hook)&&o(a=a.init)&&a(e,!1),o(e.componentInstance))return f(e,n),p(t,e.elm,i),s(l)&&function(e,n,t,i){var a,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,o(a=s.data)&&o(a=a.transition)){for(a=0;a<r.activate.length;++a)r.activate[a](kr,s);n.push(s);break}p(t,e.elm,i)}(e,n,t,i),!0}}(e,n,t,i)){var u=e.data,h=e.children,g=e.tag;o(g)?(e.elm=e.ns?d.createElementNS(e.ns,g):d.createElement(g,e),y(e),m(e,h,n),o(u)&&v(e,n),p(t,e.elm,i)):s(e.isComment)?(e.elm=d.createComment(e.text),p(t,e.elm,i)):(e.elm=d.createTextNode(e.text),p(t,e.elm,i))}}function f(e,n){o(e.data.pendingInsert)&&(n.push.apply(n,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,g(e)?(v(e,n),y(e)):(xr(e),n.push(e))}function p(e,n,t){o(e)&&(o(t)?d.parentNode(t)===e&&d.insertBefore(e,n,t):d.appendChild(e,n))}function m(e,n,t){if(i(n)){0;for(var r=0;r<n.length;++r)h(n[r],t,e.elm,null,!0,n,r)}else l(e.text)&&d.appendChild(e.elm,d.createTextNode(String(e.text)))}function g(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return o(e.tag)}function v(e,t){for(var i=0;i<r.create.length;++i)r.create[i](kr,e);o(n=e.data.hook)&&(o(n.create)&&n.create(kr,e),o(n.insert)&&t.push(e))}function y(e){var n;if(o(n=e.fnScopeId))d.setStyleScope(e.elm,n);else for(var t=e;t;)o(n=t.context)&&o(n=n.$options._scopeId)&&d.setStyleScope(e.elm,n),t=t.parent;o(n=Xn)&&n!==e.context&&n!==e.fnContext&&o(n=n.$options._scopeId)&&d.setStyleScope(e.elm,n)}function b(e,n,t,r,i,a){for(;r<=i;++r)h(t[r],a,e,n,!1,t,r)}function _(e){var n,t,i=e.data;if(o(i))for(o(n=i.hook)&&o(n=n.destroy)&&n(e),n=0;n<r.destroy.length;++n)r.destroy[n](e);if(o(n=e.children))for(t=0;t<e.children.length;++t)_(e.children[t])}function x(e,n,t){for(;n<=t;++n){var r=e[n];o(r)&&(o(r.tag)?(T(r),_(r)):u(r.elm))}}function T(e,n){if(o(n)||o(e.data)){var t,i=r.remove.length+1;for(o(n)?n.listeners+=i:n=function(e,n){function t(){0==--t.listeners&&u(e)}return t.listeners=n,t}(e.elm,i),o(t=e.componentInstance)&&o(t=t._vnode)&&o(t.data)&&T(t,n),t=0;t<r.remove.length;++t)r.remove[t](e,n);o(t=e.data.hook)&&o(t=t.remove)?t(e,n):n()}else u(e.elm)}function k(e,n,t,r){for(var i=t;i<r;i++){var a=n[i];if(o(a)&&Ir(e,a))return i}}function C(e,n,t,i,l,c){if(e!==n){o(n.elm)&&o(i)&&(n=i[l]=ge(n));var u=n.elm=e.elm;if(s(e.isAsyncPlaceholder))o(n.asyncFactory.resolved)?S(e.elm,n,t):n.isAsyncPlaceholder=!0;else if(s(n.isStatic)&&s(e.isStatic)&&n.key===e.key&&(s(n.isCloned)||s(n.isOnce)))n.componentInstance=e.componentInstance;else{var f,p=n.data;o(p)&&o(f=p.hook)&&o(f=f.prepatch)&&f(e,n);var m=e.children,v=n.children;if(o(p)&&g(n)){for(f=0;f<r.update.length;++f)r.update[f](e,n);o(f=p.hook)&&o(f=f.update)&&f(e,n)}a(n.text)?o(m)&&o(v)?m!==v&&function(e,n,t,r,i){var s,l,c,u=0,f=0,p=n.length-1,m=n[0],g=n[p],v=t.length-1,y=t[0],w=t[v],_=!i;for(0;u<=p&&f<=v;)a(m)?m=n[++u]:a(g)?g=n[--p]:Ir(m,y)?(C(m,y,r,t,f),m=n[++u],y=t[++f]):Ir(g,w)?(C(g,w,r,t,v),g=n[--p],w=t[--v]):Ir(m,w)?(C(m,w,r,t,v),_&&d.insertBefore(e,m.elm,d.nextSibling(g.elm)),m=n[++u],w=t[--v]):Ir(g,y)?(C(g,y,r,t,f),_&&d.insertBefore(e,g.elm,m.elm),g=n[--p],y=t[++f]):(a(s)&&(s=zr(n,u,p)),a(l=o(y.key)?s[y.key]:k(y,n,u,p))?h(y,r,e,m.elm,!1,t,f):Ir(c=n[l],y)?(C(c,y,r,t,f),n[l]=void 0,_&&d.insertBefore(e,c.elm,m.elm)):h(y,r,e,m.elm,!1,t,f),y=t[++f]);u>p?b(e,a(t[v+1])?null:t[v+1].elm,t,f,v,r):f>v&&x(n,u,p)}(u,m,v,t,c):o(v)?(o(e.text)&&d.setTextContent(u,""),b(u,null,v,0,v.length-1,t)):o(m)?x(m,0,m.length-1):o(e.text)&&d.setTextContent(u,""):e.text!==n.text&&d.setTextContent(u,n.text),o(p)&&o(f=p.hook)&&o(f=f.postpatch)&&f(e,n)}}}function I(e,n,t){if(s(t)&&o(e.parent))e.parent.data.pendingInsert=n;else for(var r=0;r<n.length;++r)n[r].data.hook.insert(n[r])}var z=w("attrs,class,staticClass,staticStyle,key");function S(e,n,t,r){var i,a=n.tag,l=n.data,c=n.children;if(r=r||l&&l.pre,n.elm=e,s(n.isComment)&&o(n.asyncFactory))return n.isAsyncPlaceholder=!0,!0;if(o(l)&&(o(i=l.hook)&&o(i=i.init)&&i(n,!0),o(i=n.componentInstance)))return f(n,t),!0;if(o(a)){if(o(c))if(e.hasChildNodes())if(o(i=l)&&o(i=i.domProps)&&o(i=i.innerHTML)){if(i!==e.innerHTML)return!1}else{for(var d=!0,u=e.firstChild,h=0;h<c.length;h++){if(!u||!S(u,c[h],t,r)){d=!1;break}u=u.nextSibling}if(!d||u)return!1}else m(n,c,t);if(o(l)){var p=!1;for(var g in l)if(!z(g)){p=!0,v(n,t);break}!p&&l.class&&qn(l.class)}}else e.data!==n.text&&(e.data=n.text);return!0}return function(e,n,t,i){if(!a(n)){var l,c=!1,u=[];if(a(e))c=!0,h(n,u);else{var f=o(e.nodeType);if(!f&&Ir(e,n))C(e,n,u,null,null,i);else{if(f){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),t=!0),s(t)&&S(e,n,u))return I(n,u,!0),e;l=e,e=new fe(d.tagName(l).toLowerCase(),{},[],void 0,l)}var p=e.elm,m=d.parentNode(p);if(h(n,u,p._leaveCb?null:m,d.nextSibling(p)),o(n.parent))for(var v=n.parent,y=g(n);v;){for(var w=0;w<r.destroy.length;++w)r.destroy[w](v);if(v.elm=n.elm,y){for(var b=0;b<r.create.length;++b)r.create[b](kr,v);var T=v.data.hook.insert;if(T.merged)for(var k=T.fns.slice(1),z=0;z<k.length;z++)k[z]()}else xr(v);v=v.parent}o(m)?x([e],0,0):o(e.tag)&&_(e)}}return I(n,u,c),n.elm}o(e)&&_(e)}}({nodeOps:br,modules:[Mr,Hr,Yr,Xr,li,K?{create:Oi,activate:Oi,remove:function(e,n){!0!==e.data.show?Ai(e,n):n()}}:{}].concat(Ur)});Q&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&Hi(e,"input")}));var Ui={inserted:function(e,n,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?We(t,"postpatch",(function(){Ui.componentUpdated(e,n,t)})):$i(e,n,t.context),e._vOptions=[].map.call(e.options,Mi)):("textarea"===t.tag||wr(e.type))&&(e._vModifiers=n.modifiers,n.modifiers.lazy||(e.addEventListener("compositionstart",Ni),e.addEventListener("compositionend",Fi),e.addEventListener("change",Fi),Q&&(e.vmodel=!0)))},componentUpdated:function(e,n,t){if("select"===t.tag){$i(e,n,t.context);var r=e._vOptions,i=e._vOptions=[].map.call(e.options,Mi);if(i.some((function(e,n){return!R(e,r[n])})))(e.multiple?n.value.some((function(e){return Ri(e,i)})):n.value!==n.oldValue&&Ri(n.value,i))&&Hi(e,"change")}}};function $i(e,n,t){ji(e,n,t),(X||Z)&&setTimeout((function(){ji(e,n,t)}),0)}function ji(e,n,t){var r=n.value,i=e.multiple;if(!i||Array.isArray(r)){for(var a,o,s=0,l=e.options.length;s<l;s++)if(o=e.options[s],i)a=M(r,Mi(o))>-1,o.selected!==a&&(o.selected=a);else if(R(Mi(o),r))return void(e.selectedIndex!==s&&(e.selectedIndex=s));i||(e.selectedIndex=-1)}}function Ri(e,n){return n.every((function(n){return!R(n,e)}))}function Mi(e){return"_value"in e?e._value:e.value}function Ni(e){e.target.composing=!0}function Fi(e){e.target.composing&&(e.target.composing=!1,Hi(e.target,"input"))}function Hi(e,n){var t=document.createEvent("HTMLEvents");t.initEvent(n,!0,!0),e.dispatchEvent(t)}function Di(e){return!e.componentInstance||e.data&&e.data.transition?e:Di(e.componentInstance._vnode)}var qi={model:Ui,show:{bind:function(e,n,t){var r=n.value,i=(t=Di(t)).data&&t.data.transition,a=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;r&&i?(t.data.show=!0,Si(t,(function(){e.style.display=a}))):e.style.display=r?a:"none"},update:function(e,n,t){var r=n.value;!r!=!n.oldValue&&((t=Di(t)).data&&t.data.transition?(t.data.show=!0,r?Si(t,(function(){e.style.display=e.__vOriginalDisplay})):Ai(t,(function(){e.style.display="none"}))):e.style.display=r?e.__vOriginalDisplay:"none")},unbind:function(e,n,t,r,i){i||(e.style.display=e.__vOriginalDisplay)}}},Bi={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Gi(e){var n=e&&e.componentOptions;return n&&n.Ctor.options.abstract?Gi(Cn(n.children)):e}function Vi(e){var n={},t=e.$options;for(var r in t.propsData)n[r]=e[r];var i=t._parentListeners;for(var r in i)n[I(r)]=i[r];return n}function Wi(e,n){if(/\d-keep-alive$/.test(n.tag))return e("keep-alive",{props:n.componentOptions.propsData})}var Yi=function(e){return e.tag||mn(e)},Ki=function(e){return"show"===e.name},Ji={name:"transition",props:Bi,abstract:!0,render:function(e){var n=this,t=this.$slots.default;if(t&&(t=t.filter(Yi)).length){0;var r=this.mode;0;var i=t[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return i;var a=Gi(i);if(!a)return i;if(this._leaving)return Wi(e,i);var o="__transition-".concat(this._uid,"-");a.key=null==a.key?a.isComment?o+"comment":o+a.tag:l(a.key)?0===String(a.key).indexOf(o)?a.key:o+a.key:a.key;var s=(a.data||(a.data={})).transition=Vi(this),c=this._vnode,d=Gi(c);if(a.data.directives&&a.data.directives.some(Ki)&&(a.data.show=!0),d&&d.data&&!function(e,n){return n.key===e.key&&n.tag===e.tag}(a,d)&&!mn(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var u=d.data.transition=O({},s);if("out-in"===r)return this._leaving=!0,We(u,"afterLeave",(function(){n._leaving=!1,n.$forceUpdate()})),Wi(e,i);if("in-out"===r){if(mn(a))return c;var h,f=function(){h()};We(s,"afterEnter",f),We(s,"enterCancelled",f),We(u,"delayLeave",(function(e){h=e}))}}return i}}},Xi=O({tag:String,moveClass:String},Bi);function Qi(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Zi(e){e.data.newPos=e.elm.getBoundingClientRect()}function ea(e){var n=e.data.pos,t=e.data.newPos,r=n.left-t.left,i=n.top-t.top;if(r||i){e.data.moved=!0;var a=e.elm.style;a.transform=a.WebkitTransform="translate(".concat(r,"px,").concat(i,"px)"),a.transitionDuration="0s"}}delete Xi.mode;var na={Transition:Ji,TransitionGroup:{props:Xi,beforeMount:function(){var e=this,n=this._update;this._update=function(t,r){var i=Qn(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,i(),n.call(e,t,r)}},render:function(e){for(var n=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,i=this.$slots.default||[],a=this.children=[],o=Vi(this),s=0;s<i.length;s++){if((d=i[s]).tag)if(null!=d.key&&0!==String(d.key).indexOf("__vlist"))a.push(d),t[d.key]=d,(d.data||(d.data={})).transition=o;else;}if(r){var l=[],c=[];for(s=0;s<r.length;s++){var d;(d=r[s]).data.transition=o,d.data.pos=d.elm.getBoundingClientRect(),t[d.key]?l.push(d):c.push(d)}this.kept=e(n,null,l),this.removed=c}return e(n,null,a)},updated:function(){var e=this.prevChildren,n=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,n)&&(e.forEach(Qi),e.forEach(Zi),e.forEach(ea),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var t=e.elm,r=t.style;_i(t,n),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(gi,t._moveCb=function e(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(gi,e),t._moveCb=null,xi(t,n))})}})))},methods:{hasMove:function(e,n){if(!pi)return!1;if(this._hasMove)return this._hasMove;var t=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){ui(t,e)})),di(t,n),t.style.display="none",this.$el.appendChild(t);var r=Ci(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};function ta(e,n){for(var t in n)e[t]=n[t];return e}Wt.config.mustUseProp=function(e,n,t){return"value"===t&&tr(e)&&"button"!==n||"selected"===t&&"option"===e||"checked"===t&&"input"===e||"muted"===t&&"video"===e},Wt.config.isReservedTag=vr,Wt.config.isReservedAttr=nr,Wt.config.getTagNamespace=function(e){return gr(e)?"svg":"math"===e?"math":void 0},Wt.config.isUnknownElement=function(e){if(!K)return!0;if(vr(e))return!1;if(e=e.toLowerCase(),null!=yr[e])return yr[e];var n=document.createElement(e);return e.indexOf("-")>-1?yr[e]=n.constructor===window.HTMLUnknownElement||n.constructor===window.HTMLElement:yr[e]=/HTMLUnknownElement/.test(n.toString())},O(Wt.options.directives,qi),O(Wt.options.components,na),Wt.prototype.__patch__=K?Li:U,Wt.prototype.$mount=function(e,n){return function(e,n,t){var r;e.$el=n,e.$options.render||(e.$options.render=pe),nt(e,"beforeMount"),r=function(){e._update(e._render(),t)},new Vn(e,r,U,{before:function(){e._isMounted&&!e._isDestroyed&&nt(e,"beforeUpdate")}},!0),t=!1;var i=e._preWatchers;if(i)for(var a=0;a<i.length;a++)i[a].run();return null==e.$vnode&&(e._isMounted=!0,nt(e,"mounted")),e}(this,e=e&&K?function(e){if("string"==typeof e){var n=document.querySelector(e);return n||document.createElement("div")}return e}(e):void 0,n)},K&&setTimeout((function(){q.devtools&&se&&se.emit("init",Wt)}),0);var ra=/[!'()*]/g,ia=function(e){return"%"+e.charCodeAt(0).toString(16)},aa=/%2C/g,oa=function(e){return encodeURIComponent(e).replace(ra,ia).replace(aa,",")};function sa(e){try{return decodeURIComponent(e)}catch(e){0}return e}var la=function(e){return null==e||"object"==typeof e?e:String(e)};function ca(e){var n={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var t=e.replace(/\+/g," ").split("="),r=sa(t.shift()),i=t.length>0?sa(t.join("=")):null;void 0===n[r]?n[r]=i:Array.isArray(n[r])?n[r].push(i):n[r]=[n[r],i]})),n):n}function da(e){var n=e?Object.keys(e).map((function(n){var t=e[n];if(void 0===t)return"";if(null===t)return oa(n);if(Array.isArray(t)){var r=[];return t.forEach((function(e){void 0!==e&&(null===e?r.push(oa(n)):r.push(oa(n)+"="+oa(e)))})),r.join("&")}return oa(n)+"="+oa(t)})).filter((function(e){return e.length>0})).join("&"):null;return n?"?"+n:""}var ua=/\/?$/;function ha(e,n,t,r){var i=r&&r.options.stringifyQuery,a=n.query||{};try{a=fa(a)}catch(e){}var o={name:n.name||e&&e.name,meta:e&&e.meta||{},path:n.path||"/",hash:n.hash||"",query:a,params:n.params||{},fullPath:ga(n,i),matched:e?ma(e):[]};return t&&(o.redirectedFrom=ga(t,i)),Object.freeze(o)}function fa(e){if(Array.isArray(e))return e.map(fa);if(e&&"object"==typeof e){var n={};for(var t in e)n[t]=fa(e[t]);return n}return e}var pa=ha(null,{path:"/"});function ma(e){for(var n=[];e;)n.unshift(e),e=e.parent;return n}function ga(e,n){var t=e.path,r=e.query;void 0===r&&(r={});var i=e.hash;return void 0===i&&(i=""),(t||"/")+(n||da)(r)+i}function va(e,n,t){return n===pa?e===n:!!n&&(e.path&&n.path?e.path.replace(ua,"")===n.path.replace(ua,"")&&(t||e.hash===n.hash&&ya(e.query,n.query)):!(!e.name||!n.name)&&(e.name===n.name&&(t||e.hash===n.hash&&ya(e.query,n.query)&&ya(e.params,n.params))))}function ya(e,n){if(void 0===e&&(e={}),void 0===n&&(n={}),!e||!n)return e===n;var t=Object.keys(e).sort(),r=Object.keys(n).sort();return t.length===r.length&&t.every((function(t,i){var a=e[t];if(r[i]!==t)return!1;var o=n[t];return null==a||null==o?a===o:"object"==typeof a&&"object"==typeof o?ya(a,o):String(a)===String(o)}))}function wa(e){for(var n=0;n<e.matched.length;n++){var t=e.matched[n];for(var r in t.instances){var i=t.instances[r],a=t.enteredCbs[r];if(i&&a){delete t.enteredCbs[r];for(var o=0;o<a.length;o++)i._isBeingDestroyed||a[o](i)}}}}var ba={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,n){var t=n.props,r=n.children,i=n.parent,a=n.data;a.routerView=!0;for(var o=i.$createElement,s=t.name,l=i.$route,c=i._routerViewCache||(i._routerViewCache={}),d=0,u=!1;i&&i._routerRoot!==i;){var h=i.$vnode?i.$vnode.data:{};h.routerView&&d++,h.keepAlive&&i._directInactive&&i._inactive&&(u=!0),i=i.$parent}if(a.routerViewDepth=d,u){var f=c[s],p=f&&f.component;return p?(f.configProps&&_a(p,a,f.route,f.configProps),o(p,a,r)):o()}var m=l.matched[d],g=m&&m.components[s];if(!m||!g)return c[s]=null,o();c[s]={component:g},a.registerRouteInstance=function(e,n){var t=m.instances[s];(n&&t!==e||!n&&t===e)&&(m.instances[s]=n)},(a.hook||(a.hook={})).prepatch=function(e,n){m.instances[s]=n.componentInstance},a.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==m.instances[s]&&(m.instances[s]=e.componentInstance),wa(l)};var v=m.props&&m.props[s];return v&&(ta(c[s],{route:l,configProps:v}),_a(g,a,l,v)),o(g,a,r)}};function _a(e,n,t,r){var i=n.props=function(e,n){switch(typeof n){case"undefined":return;case"object":return n;case"function":return n(e);case"boolean":return n?e.params:void 0;default:0}}(t,r);if(i){i=n.props=ta({},i);var a=n.attrs=n.attrs||{};for(var o in i)e.props&&o in e.props||(a[o]=i[o],delete i[o])}}function xa(e,n,t){var r=e.charAt(0);if("/"===r)return e;if("?"===r||"#"===r)return n+e;var i=n.split("/");t&&i[i.length-1]||i.pop();for(var a=e.replace(/^\//,"").split("/"),o=0;o<a.length;o++){var s=a[o];".."===s?i.pop():"."!==s&&i.push(s)}return""!==i[0]&&i.unshift(""),i.join("/")}function Ta(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var ka=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},Ca=Na,Ia=Ea,za=function(e,n){return La(Ea(e,n),n)},Sa=La,Aa=Ma,Pa=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Ea(e,n){for(var t,r=[],i=0,a=0,o="",s=n&&n.delimiter||"/";null!=(t=Pa.exec(e));){var l=t[0],c=t[1],d=t.index;if(o+=e.slice(a,d),a=d+l.length,c)o+=c[1];else{var u=e[a],h=t[2],f=t[3],p=t[4],m=t[5],g=t[6],v=t[7];o&&(r.push(o),o="");var y=null!=h&&null!=u&&u!==h,w="+"===g||"*"===g,b="?"===g||"*"===g,_=t[2]||s,x=p||m;r.push({name:f||i++,prefix:h||"",delimiter:_,optional:b,repeat:w,partial:y,asterisk:!!v,pattern:x?$a(x):v?".*":"[^"+Ua(_)+"]+?"})}}return a<e.length&&(o+=e.substr(a)),o&&r.push(o),r}function Oa(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function La(e,n){for(var t=new Array(e.length),r=0;r<e.length;r++)"object"==typeof e[r]&&(t[r]=new RegExp("^(?:"+e[r].pattern+")$",Ra(n)));return function(n,r){for(var i="",a=n||{},o=(r||{}).pretty?Oa:encodeURIComponent,s=0;s<e.length;s++){var l=e[s];if("string"!=typeof l){var c,d=a[l.name];if(null==d){if(l.optional){l.partial&&(i+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(ka(d)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var u=0;u<d.length;u++){if(c=o(d[u]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");i+=(0===u?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):o(d),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');i+=l.prefix+c}}else i+=l}return i}}function Ua(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function $a(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function ja(e,n){return e.keys=n,e}function Ra(e){return e&&e.sensitive?"":"i"}function Ma(e,n,t){ka(n)||(t=n||t,n=[]);for(var r=(t=t||{}).strict,i=!1!==t.end,a="",o=0;o<e.length;o++){var s=e[o];if("string"==typeof s)a+=Ua(s);else{var l=Ua(s.prefix),c="(?:"+s.pattern+")";n.push(s),s.repeat&&(c+="(?:"+l+c+")*"),a+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var d=Ua(t.delimiter||"/"),u=a.slice(-d.length)===d;return r||(a=(u?a.slice(0,-d.length):a)+"(?:"+d+"(?=$))?"),a+=i?"$":r&&u?"":"(?="+d+"|$)",ja(new RegExp("^"+a,Ra(t)),n)}function Na(e,n,t){return ka(n)||(t=n||t,n=[]),t=t||{},e instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)n.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return ja(e,n)}(e,n):ka(e)?function(e,n,t){for(var r=[],i=0;i<e.length;i++)r.push(Na(e[i],n,t).source);return ja(new RegExp("(?:"+r.join("|")+")",Ra(t)),n)}(e,n,t):function(e,n,t){return Ma(Ea(e,t),n,t)}(e,n,t)}Ca.parse=Ia,Ca.compile=za,Ca.tokensToFunction=Sa,Ca.tokensToRegExp=Aa;var Fa=Object.create(null);function Ha(e,n,t){n=n||{};try{var r=Fa[e]||(Fa[e]=Ca.compile(e));return"string"==typeof n.pathMatch&&(n[0]=n.pathMatch),r(n,{pretty:!0})}catch(e){return""}finally{delete n[0]}}function Da(e,n,t,r){var i="string"==typeof e?{path:e}:e;if(i._normalized)return i;if(i.name){var a=(i=ta({},e)).params;return a&&"object"==typeof a&&(i.params=ta({},a)),i}if(!i.path&&i.params&&n){(i=ta({},i))._normalized=!0;var o=ta(ta({},n.params),i.params);if(n.name)i.name=n.name,i.params=o;else if(n.matched.length){var s=n.matched[n.matched.length-1].path;i.path=Ha(s,o,n.path)}else 0;return i}var l=function(e){var n="",t="",r=e.indexOf("#");r>=0&&(n=e.slice(r),e=e.slice(0,r));var i=e.indexOf("?");return i>=0&&(t=e.slice(i+1),e=e.slice(0,i)),{path:e,query:t,hash:n}}(i.path||""),c=n&&n.path||"/",d=l.path?xa(l.path,c,t||i.append):c,u=function(e,n,t){void 0===n&&(n={});var r,i=t||ca;try{r=i(e||"")}catch(e){r={}}for(var a in n){var o=n[a];r[a]=Array.isArray(o)?o.map(la):la(o)}return r}(l.query,i.query,r&&r.options.parseQuery),h=i.hash||l.hash;return h&&"#"!==h.charAt(0)&&(h="#"+h),{_normalized:!0,path:d,query:u,hash:h}}var qa,Ba=function(){},Ga={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var n=this,t=this.$router,r=this.$route,i=t.resolve(this.to,r,this.append),a=i.location,o=i.route,s=i.href,l={},c=t.options.linkActiveClass,d=t.options.linkExactActiveClass,u=null==c?"router-link-active":c,h=null==d?"router-link-exact-active":d,f=null==this.activeClass?u:this.activeClass,p=null==this.exactActiveClass?h:this.exactActiveClass,m=o.redirectedFrom?ha(null,Da(o.redirectedFrom),null,t):o;l[p]=va(r,m,this.exactPath),l[f]=this.exact||this.exactPath?l[p]:function(e,n){return 0===e.path.replace(ua,"/").indexOf(n.path.replace(ua,"/"))&&(!n.hash||e.hash===n.hash)&&function(e,n){for(var t in n)if(!(t in e))return!1;return!0}(e.query,n.query)}(r,m);var g=l[p]?this.ariaCurrentValue:null,v=function(e){Va(e)&&(n.replace?t.replace(a,Ba):t.push(a,Ba))},y={click:Va};Array.isArray(this.event)?this.event.forEach((function(e){y[e]=v})):y[this.event]=v;var w={class:l},b=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:o,navigate:v,isActive:l[f],isExactActive:l[p]});if(b){if(1===b.length)return b[0];if(b.length>1||!b.length)return 0===b.length?e():e("span",{},b)}if("a"===this.tag)w.on=y,w.attrs={href:s,"aria-current":g};else{var _=function e(n){var t;if(n)for(var r=0;r<n.length;r++){if("a"===(t=n[r]).tag)return t;if(t.children&&(t=e(t.children)))return t}}(this.$slots.default);if(_){_.isStatic=!1;var x=_.data=ta({},_.data);for(var T in x.on=x.on||{},x.on){var k=x.on[T];T in y&&(x.on[T]=Array.isArray(k)?k:[k])}for(var C in y)C in x.on?x.on[C].push(y[C]):x.on[C]=v;var I=_.data.attrs=ta({},_.data.attrs);I.href=s,I["aria-current"]=g}else w.on=y}return e(this.tag,w,this.$slots.default)}};function Va(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var n=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(n))return}return e.preventDefault&&e.preventDefault(),!0}}var Wa="undefined"!=typeof window;function Ya(e,n,t,r,i){var a=n||[],o=t||Object.create(null),s=r||Object.create(null);e.forEach((function(e){!function e(n,t,r,i,a,o){var s=i.path,l=i.name;0;var c=i.pathToRegexpOptions||{},d=function(e,n,t){t||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==n)return e;return Ta(n.path+"/"+e)}(s,a,c.strict);"boolean"==typeof i.caseSensitive&&(c.sensitive=i.caseSensitive);var u={path:d,regex:Ka(d,c),components:i.components||{default:i.component},alias:i.alias?"string"==typeof i.alias?[i.alias]:i.alias:[],instances:{},enteredCbs:{},name:l,parent:a,matchAs:o,redirect:i.redirect,beforeEnter:i.beforeEnter,meta:i.meta||{},props:null==i.props?{}:i.components?i.props:{default:i.props}};i.children&&i.children.forEach((function(i){var a=o?Ta(o+"/"+i.path):void 0;e(n,t,r,i,u,a)}));t[u.path]||(n.push(u.path),t[u.path]=u);if(void 0!==i.alias)for(var h=Array.isArray(i.alias)?i.alias:[i.alias],f=0;f<h.length;++f){0;var p={path:h[f],children:i.children};e(n,t,r,p,a,u.path||"/")}l&&(r[l]||(r[l]=u))}(a,o,s,e,i)}));for(var l=0,c=a.length;l<c;l++)"*"===a[l]&&(a.push(a.splice(l,1)[0]),c--,l--);return{pathList:a,pathMap:o,nameMap:s}}function Ka(e,n){return Ca(e,[],n)}function Ja(e,n){var t=Ya(e),r=t.pathList,i=t.pathMap,a=t.nameMap;function o(e,t,o){var s=Da(e,t,!1,n),c=s.name;if(c){var d=a[c];if(!d)return l(null,s);var u=d.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var h in t.params)!(h in s.params)&&u.indexOf(h)>-1&&(s.params[h]=t.params[h]);return s.path=Ha(d.path,s.params),l(d,s,o)}if(s.path){s.params={};for(var f=0;f<r.length;f++){var p=r[f],m=i[p];if(Xa(m.regex,s.path,s.params))return l(m,s,o)}}return l(null,s)}function s(e,t){var r=e.redirect,i="function"==typeof r?r(ha(e,t,null,n)):r;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return l(null,t);var s=i,c=s.name,d=s.path,u=t.query,h=t.hash,f=t.params;if(u=s.hasOwnProperty("query")?s.query:u,h=s.hasOwnProperty("hash")?s.hash:h,f=s.hasOwnProperty("params")?s.params:f,c){a[c];return o({_normalized:!0,name:c,query:u,hash:h,params:f},void 0,t)}if(d){var p=function(e,n){return xa(e,n.parent?n.parent.path:"/",!0)}(d,e);return o({_normalized:!0,path:Ha(p,f),query:u,hash:h},void 0,t)}return l(null,t)}function l(e,t,r){return e&&e.redirect?s(e,r||t):e&&e.matchAs?function(e,n,t){var r=o({_normalized:!0,path:Ha(t,n.params)});if(r){var i=r.matched,a=i[i.length-1];return n.params=r.params,l(a,n)}return l(null,n)}(0,t,e.matchAs):ha(e,t,r,n)}return{match:o,addRoute:function(e,n){var t="object"!=typeof e?a[e]:void 0;Ya([n||e],r,i,a,t),t&&t.alias.length&&Ya(t.alias.map((function(e){return{path:e,children:[n]}})),r,i,a,t)},getRoutes:function(){return r.map((function(e){return i[e]}))},addRoutes:function(e){Ya(e,r,i,a)}}}function Xa(e,n,t){var r=n.match(e);if(!r)return!1;if(!t)return!0;for(var i=1,a=r.length;i<a;++i){var o=e.keys[i-1];o&&(t[o.name||"pathMatch"]="string"==typeof r[i]?sa(r[i]):r[i])}return!0}var Qa=Wa&&window.performance&&window.performance.now?window.performance:Date;function Za(){return Qa.now().toFixed(3)}var eo=Za();function no(){return eo}function to(e){return eo=e}var ro=Object.create(null);function io(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,n=window.location.href.replace(e,""),t=ta({},window.history.state);return t.key=no(),window.history.replaceState(t,"",n),window.addEventListener("popstate",so),function(){window.removeEventListener("popstate",so)}}function ao(e,n,t,r){if(e.app){var i=e.options.scrollBehavior;i&&e.app.$nextTick((function(){var a=function(){var e=no();if(e)return ro[e]}(),o=i.call(e,n,t,r?a:null);o&&("function"==typeof o.then?o.then((function(e){fo(e,a)})).catch((function(e){0})):fo(o,a))}))}}function oo(){var e=no();e&&(ro[e]={x:window.pageXOffset,y:window.pageYOffset})}function so(e){oo(),e.state&&e.state.key&&to(e.state.key)}function lo(e){return uo(e.x)||uo(e.y)}function co(e){return{x:uo(e.x)?e.x:window.pageXOffset,y:uo(e.y)?e.y:window.pageYOffset}}function uo(e){return"number"==typeof e}var ho=/^#\d/;function fo(e,n){var t,r="object"==typeof e;if(r&&"string"==typeof e.selector){var i=ho.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(i){var a=e.offset&&"object"==typeof e.offset?e.offset:{};n=function(e,n){var t=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{x:r.left-t.left-n.x,y:r.top-t.top-n.y}}(i,a={x:uo((t=a).x)?t.x:0,y:uo(t.y)?t.y:0})}else lo(e)&&(n=co(e))}else r&&lo(e)&&(n=co(e));n&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:n.x,top:n.y,behavior:e.behavior}):window.scrollTo(n.x,n.y))}var po,mo=Wa&&((-1===(po=window.navigator.userAgent).indexOf("Android 2.")&&-1===po.indexOf("Android 4.0")||-1===po.indexOf("Mobile Safari")||-1!==po.indexOf("Chrome")||-1!==po.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function go(e,n){oo();var t=window.history;try{if(n){var r=ta({},t.state);r.key=no(),t.replaceState(r,"",e)}else t.pushState({key:to(Za())},"",e)}catch(t){window.location[n?"replace":"assign"](e)}}function vo(e){go(e,!0)}var yo={redirected:2,aborted:4,cancelled:8,duplicated:16};function wo(e,n){return _o(e,n,yo.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var n={};return xo.forEach((function(t){t in e&&(n[t]=e[t])})),JSON.stringify(n,null,2)}(n)+'" via a navigation guard.')}function bo(e,n){return _o(e,n,yo.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+n.fullPath+'" with a new navigation.')}function _o(e,n,t,r){var i=new Error(r);return i._isRouter=!0,i.from=e,i.to=n,i.type=t,i}var xo=["params","query","hash"];function To(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function ko(e,n){return To(e)&&e._isRouter&&(null==n||e.type===n)}function Co(e,n,t){var r=function(i){i>=e.length?t():e[i]?n(e[i],(function(){r(i+1)})):r(i+1)};r(0)}function Io(e){return function(n,t,r){var i=!1,a=0,o=null;zo(e,(function(e,n,t,s){if("function"==typeof e&&void 0===e.cid){i=!0,a++;var l,c=Po((function(n){var i;((i=n).__esModule||Ao&&"Module"===i[Symbol.toStringTag])&&(n=n.default),e.resolved="function"==typeof n?n:qa.extend(n),t.components[s]=n,--a<=0&&r()})),d=Po((function(e){var n="Failed to resolve async component "+s+": "+e;o||(o=To(e)?e:new Error(n),r(o))}));try{l=e(c,d)}catch(e){d(e)}if(l)if("function"==typeof l.then)l.then(c,d);else{var u=l.component;u&&"function"==typeof u.then&&u.then(c,d)}}})),i||r()}}function zo(e,n){return So(e.map((function(e){return Object.keys(e.components).map((function(t){return n(e.components[t],e.instances[t],e,t)}))})))}function So(e){return Array.prototype.concat.apply([],e)}var Ao="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Po(e){var n=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!n)return n=!0,e.apply(this,t)}}var Eo=function(e,n){this.router=e,this.base=function(e){if(!e)if(Wa){var n=document.querySelector("base");e=(e=n&&n.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(n),this.current=pa,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Oo(e,n,t,r){var i=zo(e,(function(e,r,i,a){var o=function(e,n){"function"!=typeof e&&(e=qa.extend(e));return e.options[n]}(e,n);if(o)return Array.isArray(o)?o.map((function(e){return t(e,r,i,a)})):t(o,r,i,a)}));return So(r?i.reverse():i)}function Lo(e,n){if(n)return function(){return e.apply(n,arguments)}}Eo.prototype.listen=function(e){this.cb=e},Eo.prototype.onReady=function(e,n){this.ready?e():(this.readyCbs.push(e),n&&this.readyErrorCbs.push(n))},Eo.prototype.onError=function(e){this.errorCbs.push(e)},Eo.prototype.transitionTo=function(e,n,t){var r,i=this;try{r=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(n){n(e)})),e}var a=this.current;this.confirmTransition(r,(function(){i.updateRoute(r),n&&n(r),i.ensureURL(),i.router.afterHooks.forEach((function(e){e&&e(r,a)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(e){e(r)})))}),(function(e){t&&t(e),e&&!i.ready&&(ko(e,yo.redirected)&&a===pa||(i.ready=!0,i.readyErrorCbs.forEach((function(n){n(e)}))))}))},Eo.prototype.confirmTransition=function(e,n,t){var r=this,i=this.current;this.pending=e;var a,o,s=function(e){!ko(e)&&To(e)&&(r.errorCbs.length?r.errorCbs.forEach((function(n){n(e)})):console.error(e)),t&&t(e)},l=e.matched.length-1,c=i.matched.length-1;if(va(e,i)&&l===c&&e.matched[l]===i.matched[c])return this.ensureURL(),e.hash&&ao(this.router,i,e,!1),s(((o=_o(a=i,e,yo.duplicated,'Avoided redundant navigation to current location: "'+a.fullPath+'".')).name="NavigationDuplicated",o));var d=function(e,n){var t,r=Math.max(e.length,n.length);for(t=0;t<r&&e[t]===n[t];t++);return{updated:n.slice(0,t),activated:n.slice(t),deactivated:e.slice(t)}}(this.current.matched,e.matched),u=d.updated,h=d.deactivated,f=d.activated,p=[].concat(function(e){return Oo(e,"beforeRouteLeave",Lo,!0)}(h),this.router.beforeHooks,function(e){return Oo(e,"beforeRouteUpdate",Lo)}(u),f.map((function(e){return e.beforeEnter})),Io(f)),m=function(n,t){if(r.pending!==e)return s(bo(i,e));try{n(e,i,(function(n){!1===n?(r.ensureURL(!0),s(function(e,n){return _o(e,n,yo.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+n.fullPath+'" via a navigation guard.')}(i,e))):To(n)?(r.ensureURL(!0),s(n)):"string"==typeof n||"object"==typeof n&&("string"==typeof n.path||"string"==typeof n.name)?(s(wo(i,e)),"object"==typeof n&&n.replace?r.replace(n):r.push(n)):t(n)}))}catch(e){s(e)}};Co(p,m,(function(){Co(function(e){return Oo(e,"beforeRouteEnter",(function(e,n,t,r){return function(e,n,t){return function(r,i,a){return e(r,i,(function(e){"function"==typeof e&&(n.enteredCbs[t]||(n.enteredCbs[t]=[]),n.enteredCbs[t].push(e)),a(e)}))}}(e,t,r)}))}(f).concat(r.router.resolveHooks),m,(function(){if(r.pending!==e)return s(bo(i,e));r.pending=null,n(e),r.router.app&&r.router.app.$nextTick((function(){wa(e)}))}))}))},Eo.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Eo.prototype.setupListeners=function(){},Eo.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=pa,this.pending=null};var Uo=function(e){function n(n,t){e.call(this,n,t),this._startLocation=$o(this.base)}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router,t=n.options.scrollBehavior,r=mo&&t;r&&this.listeners.push(io());var i=function(){var t=e.current,i=$o(e.base);e.current===pa&&i===e._startLocation||e.transitionTo(i,(function(e){r&&ao(n,e,t,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},n.prototype.go=function(e){window.history.go(e)},n.prototype.push=function(e,n,t){var r=this,i=this.current;this.transitionTo(e,(function(e){go(Ta(r.base+e.fullPath)),ao(r.router,e,i,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var r=this,i=this.current;this.transitionTo(e,(function(e){vo(Ta(r.base+e.fullPath)),ao(r.router,e,i,!1),n&&n(e)}),t)},n.prototype.ensureURL=function(e){if($o(this.base)!==this.current.fullPath){var n=Ta(this.base+this.current.fullPath);e?go(n):vo(n)}},n.prototype.getCurrentLocation=function(){return $o(this.base)},n}(Eo);function $o(e){var n=window.location.pathname,t=n.toLowerCase(),r=e.toLowerCase();return!e||t!==r&&0!==t.indexOf(Ta(r+"/"))||(n=n.slice(e.length)),(n||"/")+window.location.search+window.location.hash}var jo=function(e){function n(n,t,r){e.call(this,n,t),r&&function(e){var n=$o(e);if(!/^\/#/.test(n))return window.location.replace(Ta(e+"/#"+n)),!0}(this.base)||Ro()}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router.options.scrollBehavior,t=mo&&n;t&&this.listeners.push(io());var r=function(){var n=e.current;Ro()&&e.transitionTo(Mo(),(function(r){t&&ao(e.router,r,n,!0),mo||Ho(r.fullPath)}))},i=mo?"popstate":"hashchange";window.addEventListener(i,r),this.listeners.push((function(){window.removeEventListener(i,r)}))}},n.prototype.push=function(e,n,t){var r=this,i=this.current;this.transitionTo(e,(function(e){Fo(e.fullPath),ao(r.router,e,i,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var r=this,i=this.current;this.transitionTo(e,(function(e){Ho(e.fullPath),ao(r.router,e,i,!1),n&&n(e)}),t)},n.prototype.go=function(e){window.history.go(e)},n.prototype.ensureURL=function(e){var n=this.current.fullPath;Mo()!==n&&(e?Fo(n):Ho(n))},n.prototype.getCurrentLocation=function(){return Mo()},n}(Eo);function Ro(){var e=Mo();return"/"===e.charAt(0)||(Ho("/"+e),!1)}function Mo(){var e=window.location.href,n=e.indexOf("#");return n<0?"":e=e.slice(n+1)}function No(e){var n=window.location.href,t=n.indexOf("#");return(t>=0?n.slice(0,t):n)+"#"+e}function Fo(e){mo?go(No(e)):window.location.hash=e}function Ho(e){mo?vo(No(e)):window.location.replace(No(e))}var Do=function(e){function n(n,t){e.call(this,n,t),this.stack=[],this.index=-1}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.push=function(e,n,t){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index+1).concat(e),r.index++,n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index).concat(e),n&&n(e)}),t)},n.prototype.go=function(e){var n=this,t=this.index+e;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var e=n.current;n.index=t,n.updateRoute(r),n.router.afterHooks.forEach((function(n){n&&n(r,e)}))}),(function(e){ko(e,yo.duplicated)&&(n.index=t)}))}},n.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},n.prototype.ensureURL=function(){},n}(Eo),qo=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Ja(e.routes||[],this);var n=e.mode||"hash";switch(this.fallback="history"===n&&!mo&&!1!==e.fallback,this.fallback&&(n="hash"),Wa||(n="abstract"),this.mode=n,n){case"history":this.history=new Uo(this,e.base);break;case"hash":this.history=new jo(this,e.base,this.fallback);break;case"abstract":this.history=new Do(this,e.base);break;default:0}},Bo={currentRoute:{configurable:!0}};qo.prototype.match=function(e,n,t){return this.matcher.match(e,n,t)},Bo.currentRoute.get=function(){return this.history&&this.history.current},qo.prototype.init=function(e){var n=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var t=n.apps.indexOf(e);t>-1&&n.apps.splice(t,1),n.app===e&&(n.app=n.apps[0]||null),n.app||n.history.teardown()})),!this.app){this.app=e;var t=this.history;if(t instanceof Uo||t instanceof jo){var r=function(e){t.setupListeners(),function(e){var r=t.current,i=n.options.scrollBehavior;mo&&i&&"fullPath"in e&&ao(n,e,r,!1)}(e)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(e){n.apps.forEach((function(n){n._route=e}))}))}},qo.prototype.beforeEach=function(e){return Vo(this.beforeHooks,e)},qo.prototype.beforeResolve=function(e){return Vo(this.resolveHooks,e)},qo.prototype.afterEach=function(e){return Vo(this.afterHooks,e)},qo.prototype.onReady=function(e,n){this.history.onReady(e,n)},qo.prototype.onError=function(e){this.history.onError(e)},qo.prototype.push=function(e,n,t){var r=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){r.history.push(e,n,t)}));this.history.push(e,n,t)},qo.prototype.replace=function(e,n,t){var r=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){r.history.replace(e,n,t)}));this.history.replace(e,n,t)},qo.prototype.go=function(e){this.history.go(e)},qo.prototype.back=function(){this.go(-1)},qo.prototype.forward=function(){this.go(1)},qo.prototype.getMatchedComponents=function(e){var n=e?e.matched?e:this.resolve(e).route:this.currentRoute;return n?[].concat.apply([],n.matched.map((function(e){return Object.keys(e.components).map((function(n){return e.components[n]}))}))):[]},qo.prototype.resolve=function(e,n,t){var r=Da(e,n=n||this.history.current,t,this),i=this.match(r,n),a=i.redirectedFrom||i.fullPath;return{location:r,route:i,href:function(e,n,t){var r="hash"===t?"#"+n:n;return e?Ta(e+"/"+r):r}(this.history.base,a,this.mode),normalizedTo:r,resolved:i}},qo.prototype.getRoutes=function(){return this.matcher.getRoutes()},qo.prototype.addRoute=function(e,n){this.matcher.addRoute(e,n),this.history.current!==pa&&this.history.transitionTo(this.history.getCurrentLocation())},qo.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==pa&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(qo.prototype,Bo);var Go=qo;function Vo(e,n){return e.push(n),function(){var t=e.indexOf(n);t>-1&&e.splice(t,1)}}qo.install=function e(n){if(!e.installed||qa!==n){e.installed=!0,qa=n;var t=function(e){return void 0!==e},r=function(e,n){var r=e.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(e,n)};n.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),n.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(n.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(n.prototype,"$route",{get:function(){return this._routerRoot._route}}),n.component("RouterView",ba),n.component("RouterLink",Ga);var i=n.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},qo.version="3.6.5",qo.isNavigationFailure=ko,qo.NavigationFailureType=yo,qo.START_LOCATION=pa,Wa&&window.Vue&&window.Vue.use(qo);t(149),t(62),t(159);t(161),t(117);var Wo={"components/AlgoliaSearchBox":()=>Promise.all([t.e(0),t.e(14)]).then(t.bind(null,344)),"components/DropdownLink":()=>Promise.all([t.e(0),t.e(13)]).then(t.bind(null,295)),"components/DropdownTransition":()=>Promise.all([t.e(0),t.e(19)]).then(t.bind(null,281)),"components/Home":()=>Promise.all([t.e(0),t.e(17)]).then(t.bind(null,324)),"components/NavLink":()=>t.e(21).then(t.bind(null,280)),"components/NavLinks":()=>Promise.all([t.e(0),t.e(12)]).then(t.bind(null,307)),"components/Navbar":()=>Promise.all([t.e(0),t.e(1)]).then(t.bind(null,341)),"components/Page":()=>Promise.all([t.e(0),t.e(11)]).then(t.bind(null,325)),"components/PageEdit":()=>Promise.all([t.e(0),t.e(18)]).then(t.bind(null,309)),"components/PageNav":()=>Promise.all([t.e(0),t.e(15)]).then(t.bind(null,310)),"components/Sidebar":()=>Promise.all([t.e(0),t.e(10)]).then(t.bind(null,326)),"components/SidebarButton":()=>Promise.all([t.e(0),t.e(20)]).then(t.bind(null,327)),"components/SidebarGroup":()=>Promise.all([t.e(0),t.e(3)]).then(t.bind(null,308)),"components/SidebarLink":()=>Promise.all([t.e(0),t.e(16)]).then(t.bind(null,296)),"components/SidebarLinks":()=>Promise.all([t.e(0),t.e(3)]).then(t.bind(null,294)),"global-components/Badge":()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,349)),"global-components/CodeBlock":()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,345)),"global-components/CodeGroup":()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,346)),"layouts/404":()=>t.e(7).then(t.bind(null,347)),"layouts/Layout":()=>Promise.all([t.e(0),t.e(1),t.e(2)]).then(t.bind(null,348)),NotFound:()=>t.e(7).then(t.bind(null,347)),Layout:()=>Promise.all([t.e(0),t.e(1),t.e(2)]).then(t.bind(null,348))},Yo={"v-3a585cdc":()=>t.e(23).then(t.bind(null,350)),"v-191607df":()=>t.e(22).then(t.bind(null,351)),"v-50be0ffc":()=>t.e(25).then(t.bind(null,352)),"v-5c8a7d76":()=>t.e(27).then(t.bind(null,353)),"v-2c027e9c":()=>t.e(24).then(t.bind(null,354)),"v-6eb378b4":()=>t.e(26).then(t.bind(null,355)),"v-2223cd7c":()=>t.e(28).then(t.bind(null,356)),"v-42ac7bf6":()=>t.e(29).then(t.bind(null,357)),"v-9c16b5c8":()=>t.e(30).then(t.bind(null,358)),"v-40e1b208":()=>t.e(31).then(t.bind(null,359)),"v-0d29a8dc":()=>t.e(32).then(t.bind(null,360)),"v-3ac42abc":()=>t.e(33).then(t.bind(null,361)),"v-0374659c":()=>t.e(34).then(t.bind(null,362)),"v-662c0cfc":()=>t.e(36).then(t.bind(null,363)),"v-fa95bd84":()=>t.e(37).then(t.bind(null,364)),"v-be96f388":()=>t.e(35).then(t.bind(null,365)),"v-153367bc":()=>t.e(38).then(t.bind(null,366)),"v-56d17308":()=>t.e(39).then(t.bind(null,367)),"v-63bf3588":()=>t.e(40).then(t.bind(null,368)),"v-1855e3a4":()=>t.e(41).then(t.bind(null,369)),"v-7b174ab0":()=>t.e(42).then(t.bind(null,370)),"v-fa492d08":()=>t.e(44).then(t.bind(null,371)),"v-b2808fb8":()=>t.e(45).then(t.bind(null,372)),"v-93872304":()=>t.e(43).then(t.bind(null,373)),"v-6ff320c8":()=>t.e(46).then(t.bind(null,374)),"v-ab312ec8":()=>t.e(47).then(t.bind(null,375)),"v-b91d9d08":()=>t.e(48).then(t.bind(null,376)),"v-52542808":()=>t.e(49).then(t.bind(null,377)),"v-a2cc2b88":()=>t.e(51).then(t.bind(null,378)),"v-79e8da30":()=>t.e(52).then(t.bind(null,379)),"v-6cb04d69":()=>t.e(53).then(t.bind(null,380)),"v-f8976a88":()=>t.e(50).then(t.bind(null,381)),"v-793f1988":()=>t.e(54).then(t.bind(null,382)),"v-0e4e8a08":()=>t.e(55).then(t.bind(null,383)),"v-614ab2dc":()=>t.e(56).then(t.bind(null,384)),"v-f2d7ce48":()=>t.e(59).then(t.bind(null,385)),"v-5866be48":()=>t.e(57).then(t.bind(null,386)),"v-4782cd2c":()=>t.e(58).then(t.bind(null,387)),"v-2083487c":()=>t.e(61).then(t.bind(null,388)),"v-158c9b2c":()=>t.e(60).then(t.bind(null,389)),"v-dab714c8":()=>t.e(62).then(t.bind(null,390)),"v-04c5a2bc":()=>t.e(63).then(t.bind(null,391)),"v-76e6cfdc":()=>t.e(64).then(t.bind(null,392)),"v-5f89e808":()=>t.e(65).then(t.bind(null,393)),"v-f0f039c8":()=>t.e(66).then(t.bind(null,394)),"v-597641dc":()=>t.e(67).then(t.bind(null,395)),"v-f3511518":()=>t.e(68).then(t.bind(null,396)),"v-738f7b1c":()=>t.e(69).then(t.bind(null,397)),"v-36b6dd5c":()=>t.e(70).then(t.bind(null,398)),"v-160d9024":()=>t.e(72).then(t.bind(null,399)),"v-2cb65f34":()=>t.e(73).then(t.bind(null,400)),"v-7a397374":()=>t.e(74).then(t.bind(null,401)),"v-1b51365a":()=>t.e(76).then(t.bind(null,402)),"v-374c71c8":()=>t.e(75).then(t.bind(null,403)),"v-6408f788":()=>t.e(77).then(t.bind(null,404)),"v-1cb3d19c":()=>t.e(79).then(t.bind(null,405)),"v-5ded71bc":()=>t.e(78).then(t.bind(null,406)),"v-7b84ce1c":()=>t.e(80).then(t.bind(null,407)),"v-0caea6c8":()=>t.e(81).then(t.bind(null,408)),"v-313b9c48":()=>t.e(71).then(t.bind(null,409)),"v-2e6d9fa6":()=>t.e(83).then(t.bind(null,410)),"v-1367e85c":()=>t.e(82).then(t.bind(null,411))};function Ko(e){const n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}const Jo=/-(\w)/g,Xo=Ko(e=>e.replace(Jo,(e,n)=>n?n.toUpperCase():"")),Qo=/\B([A-Z])/g,Zo=Ko(e=>e.replace(Qo,"-$1").toLowerCase()),es=Ko(e=>e.charAt(0).toUpperCase()+e.slice(1));function ns(e,n){if(!n)return;if(e(n))return e(n);return n.includes("-")?e(es(Xo(n))):e(es(n))||e(Zo(n))}const ts=Object.assign({},Wo,Yo),rs=e=>ts[e],is=e=>Yo[e],as=e=>Wo[e],os=e=>Wt.component(e);function ss(e){return ns(is,e)}function ls(e){return ns(as,e)}function cs(e){return ns(rs,e)}function ds(e){return ns(os,e)}function us(...e){return Promise.all(e.filter(e=>e).map(async e=>{if(!ds(e)&&cs(e)){const n=await cs(e)();Wt.component(e,n.default)}}))}function hs(e,n){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=n)}var fs=t(113),ps=t.n(fs),ms=t(114),gs=t.n(ms),vs={created(){if(this.siteMeta=this.$site.headTags.filter(([e])=>"meta"===e).map(([e,n])=>n),this.$ssrContext){const n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map(e=>{let n="<meta";return Object.keys(e).forEach(t=>{n+=` ${t}="${gs()(e[t])}"`}),n+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=ws(this.$canonicalUrl)}var e},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const e=this.getMergedMetaTags();this.currentMetaTags=bs(e,this.currentMetaTags)},getMergedMetaTags(){const e=this.$page.frontmatter.meta||[];return ps()([{name:"description",content:this.$description}],e,this.siteMeta,_s)},updateCanonicalLink(){ys(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",ws(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){bs(null,this.currentMetaTags),ys()}};function ys(){const e=document.querySelector("link[rel='canonical']");e&&e.remove()}function ws(e=""){return e?`<link href="${e}" rel="canonical" />`:""}function bs(e,n){if(n&&[...n].filter(e=>e.parentNode===document.head).forEach(e=>document.head.removeChild(e)),e)return e.map(e=>{const n=document.createElement("meta");return Object.keys(e).forEach(t=>{n.setAttribute(t,e[t])}),document.head.appendChild(n),n})}function _s(e){for(const n of["name","property","itemprop"])if(e.hasOwnProperty(n))return e[n]+n;return JSON.stringify(e)}t(61);var xs=t(115),Ts={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(xs)()((function(){this.setActiveHash()}),300),setActiveHash(){const e=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter(n=>e.some(e=>e.hash===n.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+t;for(let e=0;e<n.length;e++){const a=n[e],o=n[e+1],s=0===e&&0===t||t>=a.parentElement.offsetTop+10&&(!o||t<o.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(s&&l!==decodeURIComponent(a.hash)){const t=a;if(i===r)for(let t=e+1;t<n.length;t++)if(l===decodeURIComponent(n[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},ks=t(39),Cs=t.n(ks),Is={mounted(){Cs.a.configure({showSpinner:!1}),this.$router.beforeEach((e,n,t)=>{e.path===n.path||Wt.component(e.name)||Cs.a.start(),t()}),this.$router.afterEach(()=>{Cs.a.done(),this.isSidebarOpen=!1})}},zs=t(116),Ss=t.n(zs),As=[vs,Ts,Is,{mounted(){Ss.a.polyfill()}}],Ps={name:"GlobalLayout",computed:{layout(){const e=this.getLayout();return hs("layout",e),Wt.component(e)}},methods:{getLayout(){if(this.$page.path){const e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},Es=t(25),Os=Object(Es.a)(Ps,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,n,t){switch(n){case"components":e[n]||(e[n]={}),Object.assign(e[n],t);break;case"mixins":e[n]||(e[n]=[]),e[n].push(...t);break;default:throw new Error("Unknown option name.")}}(Os,"mixins",As);const Ls=[{name:"v-3a585cdc",path:"/advance/directive.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-3a585cdc").then(t)}},{name:"v-191607df",path:"/",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-191607df").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-50be0ffc",path:"/advance/log.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-50be0ffc").then(t)}},{name:"v-5c8a7d76",path:"/advance/rule.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-5c8a7d76").then(t)}},{name:"v-2c027e9c",path:"/advance/issue.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-2c027e9c").then(t)}},{name:"v-6eb378b4",path:"/advance/priority.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-6eb378b4").then(t)}},{name:"v-2223cd7c",path:"/advance/upgrade.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-2223cd7c").then(t)}},{name:"v-42ac7bf6",path:"/advance/variable.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-42ac7bf6").then(t)}},{name:"v-9c16b5c8",path:"/changes/2_x_x.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-9c16b5c8").then(t)}},{name:"v-40e1b208",path:"/changes/3_x_x.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-40e1b208").then(t)}},{name:"v-0d29a8dc",path:"/changes/4_x_x.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-0d29a8dc").then(t)}},{name:"v-3ac42abc",path:"/changes/5_x_x.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-3ac42abc").then(t)}},{name:"v-0374659c",path:"/changes/6_0_x.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-0374659c").then(t)}},{name:"v-662c0cfc",path:"/changes/lts.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-662c0cfc").then(t)}},{name:"v-fa95bd84",path:"/changes/overview.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-fa95bd84").then(t)}},{name:"v-be96f388",path:"/changes/current.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-be96f388").then(t)}},{name:"v-153367bc",path:"/guide/compatibility.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-153367bc").then(t)}},{name:"v-56d17308",path:"/guide/configuration.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-56d17308").then(t)}},{name:"v-63bf3588",path:"/guide/faq.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-63bf3588").then(t)}},{name:"v-1855e3a4",path:"/guide/installation.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-1855e3a4").then(t)}},{name:"v-7b174ab0",path:"/guide/overview.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-7b174ab0").then(t)}},{name:"v-fa492d08",path:"/guide/version.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-fa492d08").then(t)}},{name:"v-b2808fb8",path:"/practice/enable-captcha-when-blocking-requests.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-b2808fb8").then(t)}},{name:"v-93872304",path:"/guide/test.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-93872304").then(t)}},{name:"v-6ff320c8",path:"/practice/enable-captcha.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-6ff320c8").then(t)}},{name:"v-ab312ec8",path:"/practice/enable-modsecurity.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-ab312ec8").then(t)}},{name:"v-b91d9d08",path:"/practice/limit-the-rate-per-arbitrary-url.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-b91d9d08").then(t)}},{name:"v-52542808",path:"/practice/overview.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-52542808").then(t)}},{name:"v-a2cc2b88",path:"/practice/reduce-bandwidth-usage-when-attacked.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-a2cc2b88").then(t)}},{name:"v-79e8da30",path:"/roadmap/overview.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-79e8da30").then(t)}},{name:"v-6cb04d69",path:"/zh-cn/",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-6cb04d69").then(t)}},{path:"/zh-cn/index.html",redirect:"/zh-cn/"},{name:"v-f8976a88",path:"/practice/protect-against-distributed-http-flood.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-f8976a88").then(t)}},{name:"v-793f1988",path:"/zh-cn/advance/directive.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-793f1988").then(t)}},{name:"v-0e4e8a08",path:"/zh-cn/advance/issue.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-0e4e8a08").then(t)}},{name:"v-614ab2dc",path:"/zh-cn/advance/log.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-614ab2dc").then(t)}},{name:"v-f2d7ce48",path:"/zh-cn/advance/upgrade.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-f2d7ce48").then(t)}},{name:"v-5866be48",path:"/zh-cn/advance/priority.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-5866be48").then(t)}},{name:"v-4782cd2c",path:"/zh-cn/advance/rule.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-4782cd2c").then(t)}},{name:"v-2083487c",path:"/zh-cn/changes/2_x_x.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-2083487c").then(t)}},{name:"v-158c9b2c",path:"/zh-cn/advance/variable.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-158c9b2c").then(t)}},{name:"v-dab714c8",path:"/zh-cn/changes/3_x_x.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-dab714c8").then(t)}},{name:"v-04c5a2bc",path:"/zh-cn/changes/4_x_x.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-04c5a2bc").then(t)}},{name:"v-76e6cfdc",path:"/zh-cn/changes/5_x_x.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-76e6cfdc").then(t)}},{name:"v-5f89e808",path:"/zh-cn/changes/6_0_x.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-5f89e808").then(t)}},{name:"v-f0f039c8",path:"/zh-cn/changes/current.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-f0f039c8").then(t)}},{name:"v-597641dc",path:"/zh-cn/changes/lts.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-597641dc").then(t)}},{name:"v-f3511518",path:"/zh-cn/changes/overview.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-f3511518").then(t)}},{name:"v-738f7b1c",path:"/zh-cn/guide/compatibility.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-738f7b1c").then(t)}},{name:"v-36b6dd5c",path:"/zh-cn/guide/configuration.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-36b6dd5c").then(t)}},{name:"v-160d9024",path:"/zh-cn/guide/installation.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-160d9024").then(t)}},{name:"v-2cb65f34",path:"/zh-cn/guide/overview.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-2cb65f34").then(t)}},{name:"v-7a397374",path:"/zh-cn/guide/test.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-7a397374").then(t)}},{name:"v-1b51365a",path:"/zh-cn/practice/enable-captcha-when-blocking-requests.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-1b51365a").then(t)}},{name:"v-374c71c8",path:"/zh-cn/guide/version.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-374c71c8").then(t)}},{name:"v-6408f788",path:"/zh-cn/practice/enable-captcha.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-6408f788").then(t)}},{name:"v-1cb3d19c",path:"/zh-cn/practice/limit-the-rate-per-arbitrary-url.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-1cb3d19c").then(t)}},{name:"v-5ded71bc",path:"/zh-cn/practice/enable-modsecurity.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-5ded71bc").then(t)}},{name:"v-7b84ce1c",path:"/zh-cn/practice/overview.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-7b84ce1c").then(t)}},{name:"v-0caea6c8",path:"/zh-cn/practice/protect-against-distributed-http-flood.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-0caea6c8").then(t)}},{name:"v-313b9c48",path:"/zh-cn/guide/faq.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-313b9c48").then(t)}},{name:"v-2e6d9fa6",path:"/zh-cn/roadmap/overview.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-2e6d9fa6").then(t)}},{name:"v-1367e85c",path:"/zh-cn/practice/reduce-bandwidth-usage-when-attacked.html",component:Os,beforeEnter:(e,n,t)=>{us("Layout","v-1367e85c").then(t)}},{path:"*",component:Os}],Us={title:"",description:"",base:"/ngx_waf-docs/",headTags:[["link",{rel:"icon",href:"https://cdn.jsdelivr.net/gh/ADD-SP/ngx_waf@master/assets/logo.png"}],["meta",{name:"robots",content:"noindex, nofollow, noarchive, nosnippet, noimageindex, noodp, notranslate, max-video-preview:-1"}]],pages:[{title:"Directive",frontmatter:{title:"Directive",lang:"en"},regularPath:"/advance/directive.html",relativePath:"advance/directive.md",key:"v-3a585cdc",path:"/advance/directive.html",headers:[{level:2,title:"waf",slug:"waf",normalizedTitle:"waf",charIndex:16},{level:2,title:"waf_zone",slug:"waf-zone",normalizedTitle:"waf_zone",charIndex:247},{level:2,title:"waf_rule_path",slug:"waf-rule-path",normalizedTitle:"waf_rule_path",charIndex:1109},{level:2,title:"waf_mode",slug:"waf-mode",normalizedTitle:"waf_mode",charIndex:1297},{level:2,title:"waf_cc_deny",slug:"waf-cc-deny",normalizedTitle:"waf_cc_deny",charIndex:561},{level:2,title:"waf_cache",slug:"waf-cache",normalizedTitle:"waf_cache",charIndex:3645},{level:2,title:"waf_modsecurity",slug:"waf-modsecurity",normalizedTitle:"waf_modsecurity",charIndex:7422},{level:2,title:"waf_modsecurity_transaction_id",slug:"waf-modsecurity-transaction-id",normalizedTitle:"waf_modsecurity_transaction_id",charIndex:8918},{level:2,title:"waf_captcha",slug:"waf-captcha",normalizedTitle:"waf_captcha",charIndex:9403},{level:2,title:"waf_verify_bot",slug:"waf-verify-bot",normalizedTitle:"waf_verify_bot",charIndex:12074},{level:2,title:"waf_under_attack",slug:"waf-under-attack",normalizedTitle:"waf_under_attack",charIndex:13040},{level:2,title:"waf_priority",slug:"waf-priority",normalizedTitle:"waf_priority",charIndex:14940},{level:2,title:"waf_http_status",slug:"waf-http-status",normalizedTitle:"waf_http_status",charIndex:16130},{level:2,title:"waf_action",slug:"waf-action",normalizedTitle:"waf_action",charIndex:16721},{level:2,title:"waf_block_page",slug:"waf-block-page",normalizedTitle:"waf_block_page",charIndex:17612}],headersStr:"waf waf_zone waf_rule_path waf_mode waf_cc_deny waf_cache waf_modsecurity waf_modsecurity_transaction_id waf_captcha waf_verify_bot waf_under_attack waf_priority waf_http_status waf_action waf_block_page",content:"# Directive\n\n\n# waf\n\n * syntax: waf <on | off | bypass >\n * default: waf off\n * context: http, server, location\n\nenable, disable or bypass.\n\n * on: enable\n * off: disable\n * bypass: only inspect and record logs, without blocking any requests.\n\n\n# waf_zone\n\n * syntax: waf_zone <name=zone_name> [size=5m]\n * default: —\n * context: http\n\nCreates a piece of shared memory to record some information that needs to be shared across processes because of nginx's multi-process model.\n\nYou may need to fill in the parameter zone when you use certain directive, such as waf_cc_deny. The fill format is name:tag, i.e. name and tag. Name and tag are \"many-to-many\", but for the same zone, the tag names cannot be repeated for the same zone.\n\nAll tags within the same zone share the entire shared memory of that zone. For performance reasons, it is recommended that one zone be created for each server context. It is better not to have multiple server context sharing a single zone, because accessing shared memory requires locking, so minimize the number of locking.\n\nTIP\n\n1MB of memory can record at least 4096 IP.\n\n\n# waf_rule_path\n\n * syntax: waf_rule_path <dir>\n * default: —\n * context: http, server, location\n\nThe absolute path to the directory where the rule file is located, and must end with /.\n\n\n# waf_mode\n\n * syntax: waf_mode <mode_type> ...\n * default: —\n * context: http, server, location\n\nSpecify the working mode of the firewall, specifying at least one mode and up to eight modes.\n\nmode_type has the following values (not case sensitive):\n\n * GET: Start the inspection process when Http.Method=GET.\n * HEAD: Start the inspection process when Http.Method=HEAD.\n * POST: Start the inspection process when Http.Method=POST.\n * PUT: Start the inspection process when Http.Method=PUT.\n * DELETE: Start the inspection process when Http.Method=DELETE.\n * MKCOL: Start the check process when Http.Method=MKCOL.\n * COPY: Start the inspection process when Http.Method=COPY.\n * MOVE: Start the inspection process when Http.Method=MOVE.\n * OPTIONS: Start the inspection process when Http.Method=OPTIONS.\n * PROPFIN: Start the inspection process when Http.Method=PROPFIN.\n * PROPPATCH: Start the inspection process when Http.Method=PROPPATCH.\n * LOCK: Start the inspection process when Http.Method=LOCK.\n * UNLOCK: Start the inspection process when Http.Method=UNLOCK.\n * PATCH: Start the inspection process when Http.Method=PATCH.\n * TRAC: Start the inspection process when Http.Method=TRAC.\n * CMN-METH: Equivalent to HEAD GET POST.\n * ALL-METH: Any HTTP request method will start the inspection process.\n * IP: Enable IP address inspecting rules.\n * URL: Enable URL inspecting rules.\n * RBODY: Enable POST request body inspecting rules.\n * ARGS: Enable ARGS inspecting rules.\n * UA: Enable UA inspecting rules.\n * COOKIE: Enable COOKIE inspecting rules.\n * REFERER: Enable REFERER inspecting rules.\n * CC: Enable 'Anti Challenge Collapsar'. When you enable this mode, you must set waf_cc_deny.\n * ADV: Enable the advanced rules.\n * LIB-INJECTION-SQLI: Use libinjection to detect SQL injection.\n * LIB-INJECTION-XSS: Use libinjection to detect XSS attacks.\n * LIB-INJECTION: Equivalent to LIB-INJECTION-SQLI LIB-INJECTION-XSS.\n * CACHE: Enable caching. Enabling this mode will cache the result of the inspection, so that the next time the same target is inspected, there is no need to repeat the inspection. However, the results of the POST body inspection are not cached. For example, if a URL is not in the blacklist after inspection, the next time the same URL is inspected, the cache can be read directly. When you enable this mode, you must set waf_cache.\n * STD: Standard working mode, equivalent to HEAD GET POST IP URL RBODY ARGS UA CC CACHE LIB-INJECTION-SQLI.\n * STATIC: working mode for static sites, equivalent to HEAD GET IP URL UA CC CACHE.\n * DYNAMIC: working mode for dynamic sites, equivalent to HEAD GET POST IP URL ARGS UA RBODY COOKIE CC CACHE LIB-INJECTION-SQLI.\n * FULL: Enable all modes.\n * [DATA EXPUNGED]: This mode [DATA EXPUNGED].\n\nYou can turn off a mode by prefixing mode_type with the prefix ! to turn off a mode. The following is an example of using the standard working mode, but without inspecting the User-Agent.\n\nwaf_mode STD !UA;\n\n\nNOTE\n\nIf two or more conflicting modes are enabled at the same time, the mode to the right will override the mode to its left. The following example means inspecting the User-Agent.\n\nwaf_mode !UA STD;\n\n\nNOTE\n\nThe mode of CC is independent of other modes, and whether it takes effect or not is not affected by other modes. A typical situation such as the URL mode will be affected by the GET mode, because if the GET mode is not used, the check will not be started when Http.Method=GET, and the URL will naturally not be inspected, but CC mode will not be similarly affected.\n\nCHANGES IN LATEST 'Current' VERSION\n\nThe parameters CC and CACHE are removed.\n\n * STD: Standard working mode, equivalent to HEAD GET POST IP URL RBODY ARGS UA.\n * STATIC: working mode for static sites, equivalent to HEAD GET IP URL UA.\n * DYNAMIC: working mode for dynamic sites, equivalent to HEAD GET POST IP URL ARGS UA RBODY COOKIE.\n * LIB-INJECTION: Removed.\n * LIB-INJECTION-SQLI: Removed.\n * LIB-INJECTION-XSS: Removed.\n * ADV: Removed.\n\n\n# waf_cc_deny\n\n * syntax: waf_cc_deny <rate=nr/m> [duration=1h] [size=20m]\n * default: —\n * context: http, server, location\n\nSet the parameters related to CC protection.\n\n * rate: Indicates the upper limit of the number of requests over a period of time, such as 500r/m. Exceeding the limit returns a 503 status code with a Retry-After response header.\n * duration: Indicates the time to block IP after exceeding the limit of the first parameter rate, such as 60s, 60m, 60h and 60d, if not specified, the default is 1h.\n * size: Used to set the size of the memory for recording IP accesses, such as 20m, 2048k, must not be less than 20m, if not specified, the default is 20m. When this memory is exhausted, the program will clean up some of the records according to the LRU policy.\n\nCHANGES IN LATEST 'Current' VERSION\n\n * syntax: waf_cc_deny <off | on> <rate=nr/t> <zone=name:tag> [duration=1h]\n * default: waf_cc_deny off\n * context: server, location\n\n----------------------------------------\n\n * zone: Set the shared memory used to record the necessary information.\n * rate: indicates the upper rate of requests, such as 500r/s, 500r/60s, 500r/m, 500r/60m, 500r/h, 500r/60h and 500r/d. Exceeding the limit returns a 503 status code with a Retry-After response header.\n\n\n# waf_cache\n\n * syntax: waf_cache <capacity=n>\n * default: —\n * context: http, server, location\n\nSet the parameters related to cache rule inspection results.\n\n * capacity: For some inspection items with caching mechanism enabled, the maximum number of inspection results per inspection item to be cached for each inspection target.\n\nCache-enabled inspections\n\nCache-enabled inspections refer to all inspections except CC protection, I P black and white list inspection, and POST inspection.\n\nPerformance optimization suggestions\n\nToo small a capacity will result in frequent cache cleanups, increasing memory fragmentation and reducing performance. So please set it reasonably according to your actual needs.\n\nCHANGES IN LATEST 'Current' VERSION\n\n * syntax: waf_cache <off | on> [capacity=50]\n * default: waf_cache off capacity=50\n * context: server, location\n\n\n# waf_modsecurity\n\n * syntax: waf_modsecurity <on | off> <file=*/path/to/modsecuriy/rules.conf*> <remote_key=key> <remote_url=url>\n * default: waf_modsecurity off\n * context: http, server, location\n\nUse ModSecurity's rules.\n\n * file: absolute path to the rule file.\n * remote_key: key for reading remote rule file.\n * remote_url: URL to read the remote file.\n\nYou can refer to the use case in Enable ModSecurity | Best Practices.\n\nNote\n\n * If you use the parameter remote_key, you must also use the parameter remote_url.\n * If you use the parameters file, remote_key and remote_url at the same time, then both rules will be loaded.\n\nMEMORY LEAKS\n\nMemory leaks can cause the system to have less and less memory available, degrade performance, and possibly cause programs or systems to crash.\n\nThe latest version v3.0.5 of ModSecurity has a memory leak bug.\n\n * ngin reload memory leak - Issue #2552 - SpiderLabs/ModSecurity\n * It often leads memory leak on nginx reload - Issue #2502 - SpiderLabs/ModSecurity\n\nIf you have ModSecurity enabled, memory leaks can occur when reloading nginx, which can have serious consequences in the long run.\n\nWe strongly recommend that you avoid using commands like the following.\n\nnginx -s reload\nsystemctl restart nginx\nservice nginx restart\n\n\nWhen you need to reload nginx, it is highly recommended to shut down nginx first and then start nginx.\n\nnginx -s stop && nginx\nsystemctl stop nginx && systemctl start nginx\nservice nginx stop && serivce nginx start\n\n\n\n# waf_modsecurity_transaction_id\n\n * Configuration syntax: waf_modsecurity_transaction_id <string>\n * Default configuration: waf_modsecurity off\n * Configuration segments: http, server, location\n\nSpecify the transaction ID for ModSecurity. you can use constant strings and variables here, here is an example.\n\nserver {\n    location /file/ {\n        waf_modsecurity_transaction_id \"$host-file\";\n    }\n\n    location /api/ {\n        waf_modsecurity_transaction_id \"$host-api\";\n    }\n}\n\n\n\n# waf_captcha\n\n * syntax: waf_captcha <on | off> <prov=hCaptcha | reCAPTCHAv2:checkbox | reCAPTCHAv2:invisible | reCAPTCHAv3> [file=/full/path] [sitekey=your_sitekey] <secret=your_secret> [score=0.5] [expire=30m] [api=uri] [verify=/captcha] [max_fails=times:duration] [zone=name:tag]\n * default: waf_captcha off\n * context: http, server, location\n\nUse CAPTCHA for human identification of the client.\n\n * prov: CAPTCHA platform with hCaptcha, reCAPTCHAv2 and reCAPTCHAv3.\n * file: The absolute path to the HTML file used to access the captcha, you can find the corresponding HTML file under assets/ and fill in your sitekey in the file. If you omit this parameter, a built-in HTML file (from the directory assets/) will be selected and used based on the value of the parameter prov, where you need to set the parameter sitekey.\n * sitekey: the sitekey you get from the captcha platform, this parameter needs to be set if and only if the parameter file is omitted.\n * secret: the key used to confirm the result of the CAPTCHA, you can get it from the corresponding CAPTCHA platform.\n * socre: when prov=reCAPTCHAv3, this indicates the minimum value of the CAPTCHA scoring result, below which the validation will be considered as failed. The default value is 0.5.\n * expire: the expiration time of the CAPTCHA, after which the CAPTCHA needs to be re-run. The default is 30 minutes.\n * api: The API provided by the CAPTCHA platform to the server to confirm the result of the CAPTCHA run.\n   * If prov=hCaptcha, the default value is https://hcaptcha.com/siteverify.\n   * If prov=reCAPTCHAv2:xxx, then the default value is https://www.recaptcha.net/recaptcha/api/siteverify.\n   * If prov=reCAPTCHAv3, the default value is https://www.recaptcha.net/recaptcha/api/siteverify.\n * verify: the url used by the captcha to submit the token to the backend, defaults to /captcha.\n * max_fails: The maximum number of times the CAPTCHA can be refreshed/tried, beyond which the corresponding IP is blacked out for a period of time. For example, max_fails=20:5m means that the IP will be blacked out for 5 minutes after 20 consecutive refreshes/tries. This is useful when you are using billing CAPTCHA. When you set this parameter, you must also set the parameter zone.\n * zone: Set the shared memory used to record the number of CAPTCHA tries, this parameter is required if and only if parameter max_fails is set.\n\nYou can refer to the use case in Enable Captcha | Best Practices.\n\nUse your own CAPTCHA page\n\nYou can customize the captcha page based on the HTML file under the directory assets/ and load it with the parameter file.\n\nDon't forget to fill in the sitekey in the HTML file.\n\n\n# waf_verify_bot\n\n * syntax: waf_verify_bot <off | on | strict> [who] ...\n * default: waf_verify_bot off GoogleBot BingBot BaiduSpider YandexBot SogouSpider\n * context: http, server, location\n\nVerify friendly crawlers, such as GoogleBot.\n\nIf the first parameter is on then all subsequent checks will be stopped and the request will be released.\n\nIf the first parameter is strict, then if the User-Agent of a request is correct, but the IP address is incorrect, it will be blocked (with false positives).\n\n * who: the name of the crawler, values include GoogleBot, BingBot, BaiduSpider, YandexBot and SogouSpider. If not specified, the default is all.\n\nHOW IT WORKS?\n\n * Overview of Google crawlers (user agents) | Search Central\n * Googlebot Verification | Google Search Central | Google Developers\n * Which Crawlers Does Bing Use? - Bing Webmaster Tools\n * How to Verify Bingbot\n * 百度用户服务中心-站长平台\n * How to check that a robot belongs to Yandex\n * 搜狗资源平台_公平开放的交流平台\n\n\n# waf_under_attack\n\n * syntax: waf_under_attack <on | off> [uri=str]\n * default: waf_under_attack off\n * context: http, server, location\n\nIf your site is under attack you can try using this directive. Turning it on forces a five-second delay on each user's first visit and automatically jumps to the page pointed to by uri.\n\n * uri: can be a full URL or a path. For example, https://example.com/attack.html or /attack.html.\n\nYou can refer to the use case in protect against distributed CC Attacks (distributed HTTP flooding) | Best Practices.\n\nTips\n\nThe page pointed to by uri should automatically jump to the page the user wants to visit after five seconds, the URL of the page can be obtained by querying a string with the parameter target.\n\nassets/under-attack.html is a sample page, you should copy this file to your web directory and configure uri correctly.\n\nNaturally, you can also write your own html file and point to it with uri.\n\nCHANGES IN LATEST 'Current' VERSION\n\nIn the LTS version we implemented this feature through redirects, but many reasons (such as caching and CDN) would cause the redirects to fail or not validate the cookie properly. So we changed the implementation so that we return the specified page by changing the response body in a way that does not cause the URI to change.\n\nWe also added the response header Cache-Control: no-store to avoid the impact of caching.\n\n * synyax: waf_under_attack <on | off> [file=full_path]\n\n * default: waf_under_attack off\n\n * context: http, server, location\n\n * Removed the parameter uri.\n\n * Added parameter file, the value of this parameter should be the absolute path to an HTML file, e.g. file=/path/to/under-attack.html. This HTML has only one function, which is to refresh automatically after five seconds. When you omit this parameter, the default is to use the built-in HTML file, which comes from assets/under-attack.html.\n\n\n# waf_priority\n\n * syntax: waf_priority \"str\"\n * default: waf_priority \"W-IP IP CC UNDER-ATTACK W-URL URL ARGS UA W-REFERER REFERER COOKIE ADV\"\n * context: http, server, location\n\nSet the priority of each inspection process, except for POST detection, which always has the lowest priority.\n\n * UNDER-ATTACK: Directive waf_under_attack.\n * W-IP: IP whitelist inspection\n * IP: IP Blacklist inspection\n * CC: CC protection\n * W-URL: URL whitelist inspection\n * URL: URL blacklist inspection\n * ARGS: URL parameter (query string) blacklist inspection\n * UA: User-Agent blacklist inspection\n * W-REFERER: Referer whitelist inspection\n * REFERER: Referer blacklist inspection\n * COOKIE: Cookie blacklist inspection\n * ADV: Advanced rules.\n\nWARNING\n\nstr must be wrapped in single or double quotes, and str must contain all of the inspection process.\n\nCHANGES IN LATEST 'Current' VERSION\n\n * default: waf_priority \"W-IP IP VERIFY-BOT CC CAPTCHA UNDER-ATTACK W-URL URL ARGS UA W-REFERER REFERER COOKIE POST MODSECURITY\"\n\n----------------------------------------\n\n * VERIFY-BOT: friendly crawler verification.\n * CAPTCHA: Captcha.\n * POST: Request body blacklist.\n * ModSecurity.\n * ADV: Removed.\n\n\n# waf_http_status\n\n * syntax: waf_http_status [general=http_status_code] [cc_deny=http_status_code]\n * default: waf_http_status general=403 cc_deny=503\n * context: http, server, location\n\nThis directive is used to set the HTTP status code returned when a request is blocked.\n\n * general: Indicates the HTTP status code returned when all blacklist-based inpection are triggered.\n * cc_deny: Indicates the HTTP status code returned when CC protection is triggered.\n\nCHANGES IN LATEST 'Current' VERSION\n\nThis directive has been removed from v10.0.0 and the associated features moved to directive waf_action.\n\n\n# waf_action\n\n * syntax: waf_action [blacklist=action] [cc_deny=action] [modsecurity=action] [verify_bot=action] [zone=name:tag]\n * default: waf_action blacklist=403 cc_deny=503 modsecurity=follow verify_bot=403\n * context: http, server, location\n\nThis directive is used to set the action to be taken when blocking a request. action indicates a specific action and can be the following values.\n\n * 4xx | 5xx：HTTP response code.\n * CAPTCHA：Use the CAPTCHA to challenge.\n * follow：Follow the action of Modsecurity's rule, only for parameter modsecurity.\n\nparameters:\n\n * blacklist: All blacklist-based rules, such as IP blacklist, User-Agent blacklist, URL blacklist, etc.\n * cc_deny: CC protection.\n * modsecurity：ModSecurity's rules.\n * verify_bot：waf_verify_bot.\n * zone：Set the shared memory used to record the necessary information, if and only if an action is CAPTCHA.\n\n\n# waf_block_page\n\n * syntax: waf_block_page < default | path/to/file.html >\n * default: ——\n * context: http, server, location\n\nUsed to set the page returned when a request is blocked, default is a built-in HTML file from assets/block.html, [DATA EXPUNGED] is [DATA EXPUNGED].",normalizedContent:"# directive\n\n\n# waf\n\n * syntax: waf <on | off | bypass >\n * default: waf off\n * context: http, server, location\n\nenable, disable or bypass.\n\n * on: enable\n * off: disable\n * bypass: only inspect and record logs, without blocking any requests.\n\n\n# waf_zone\n\n * syntax: waf_zone <name=zone_name> [size=5m]\n * default: —\n * context: http\n\ncreates a piece of shared memory to record some information that needs to be shared across processes because of nginx's multi-process model.\n\nyou may need to fill in the parameter zone when you use certain directive, such as waf_cc_deny. the fill format is name:tag, i.e. name and tag. name and tag are \"many-to-many\", but for the same zone, the tag names cannot be repeated for the same zone.\n\nall tags within the same zone share the entire shared memory of that zone. for performance reasons, it is recommended that one zone be created for each server context. it is better not to have multiple server context sharing a single zone, because accessing shared memory requires locking, so minimize the number of locking.\n\ntip\n\n1mb of memory can record at least 4096 ip.\n\n\n# waf_rule_path\n\n * syntax: waf_rule_path <dir>\n * default: —\n * context: http, server, location\n\nthe absolute path to the directory where the rule file is located, and must end with /.\n\n\n# waf_mode\n\n * syntax: waf_mode <mode_type> ...\n * default: —\n * context: http, server, location\n\nspecify the working mode of the firewall, specifying at least one mode and up to eight modes.\n\nmode_type has the following values (not case sensitive):\n\n * get: start the inspection process when http.method=get.\n * head: start the inspection process when http.method=head.\n * post: start the inspection process when http.method=post.\n * put: start the inspection process when http.method=put.\n * delete: start the inspection process when http.method=delete.\n * mkcol: start the check process when http.method=mkcol.\n * copy: start the inspection process when http.method=copy.\n * move: start the inspection process when http.method=move.\n * options: start the inspection process when http.method=options.\n * propfin: start the inspection process when http.method=propfin.\n * proppatch: start the inspection process when http.method=proppatch.\n * lock: start the inspection process when http.method=lock.\n * unlock: start the inspection process when http.method=unlock.\n * patch: start the inspection process when http.method=patch.\n * trac: start the inspection process when http.method=trac.\n * cmn-meth: equivalent to head get post.\n * all-meth: any http request method will start the inspection process.\n * ip: enable ip address inspecting rules.\n * url: enable url inspecting rules.\n * rbody: enable post request body inspecting rules.\n * args: enable args inspecting rules.\n * ua: enable ua inspecting rules.\n * cookie: enable cookie inspecting rules.\n * referer: enable referer inspecting rules.\n * cc: enable 'anti challenge collapsar'. when you enable this mode, you must set waf_cc_deny.\n * adv: enable the advanced rules.\n * lib-injection-sqli: use libinjection to detect sql injection.\n * lib-injection-xss: use libinjection to detect xss attacks.\n * lib-injection: equivalent to lib-injection-sqli lib-injection-xss.\n * cache: enable caching. enabling this mode will cache the result of the inspection, so that the next time the same target is inspected, there is no need to repeat the inspection. however, the results of the post body inspection are not cached. for example, if a url is not in the blacklist after inspection, the next time the same url is inspected, the cache can be read directly. when you enable this mode, you must set waf_cache.\n * std: standard working mode, equivalent to head get post ip url rbody args ua cc cache lib-injection-sqli.\n * static: working mode for static sites, equivalent to head get ip url ua cc cache.\n * dynamic: working mode for dynamic sites, equivalent to head get post ip url args ua rbody cookie cc cache lib-injection-sqli.\n * full: enable all modes.\n * [data expunged]: this mode [data expunged].\n\nyou can turn off a mode by prefixing mode_type with the prefix ! to turn off a mode. the following is an example of using the standard working mode, but without inspecting the user-agent.\n\nwaf_mode std !ua;\n\n\nnote\n\nif two or more conflicting modes are enabled at the same time, the mode to the right will override the mode to its left. the following example means inspecting the user-agent.\n\nwaf_mode !ua std;\n\n\nnote\n\nthe mode of cc is independent of other modes, and whether it takes effect or not is not affected by other modes. a typical situation such as the url mode will be affected by the get mode, because if the get mode is not used, the check will not be started when http.method=get, and the url will naturally not be inspected, but cc mode will not be similarly affected.\n\nchanges in latest 'current' version\n\nthe parameters cc and cache are removed.\n\n * std: standard working mode, equivalent to head get post ip url rbody args ua.\n * static: working mode for static sites, equivalent to head get ip url ua.\n * dynamic: working mode for dynamic sites, equivalent to head get post ip url args ua rbody cookie.\n * lib-injection: removed.\n * lib-injection-sqli: removed.\n * lib-injection-xss: removed.\n * adv: removed.\n\n\n# waf_cc_deny\n\n * syntax: waf_cc_deny <rate=nr/m> [duration=1h] [size=20m]\n * default: —\n * context: http, server, location\n\nset the parameters related to cc protection.\n\n * rate: indicates the upper limit of the number of requests over a period of time, such as 500r/m. exceeding the limit returns a 503 status code with a retry-after response header.\n * duration: indicates the time to block ip after exceeding the limit of the first parameter rate, such as 60s, 60m, 60h and 60d, if not specified, the default is 1h.\n * size: used to set the size of the memory for recording ip accesses, such as 20m, 2048k, must not be less than 20m, if not specified, the default is 20m. when this memory is exhausted, the program will clean up some of the records according to the lru policy.\n\nchanges in latest 'current' version\n\n * syntax: waf_cc_deny <off | on> <rate=nr/t> <zone=name:tag> [duration=1h]\n * default: waf_cc_deny off\n * context: server, location\n\n----------------------------------------\n\n * zone: set the shared memory used to record the necessary information.\n * rate: indicates the upper rate of requests, such as 500r/s, 500r/60s, 500r/m, 500r/60m, 500r/h, 500r/60h and 500r/d. exceeding the limit returns a 503 status code with a retry-after response header.\n\n\n# waf_cache\n\n * syntax: waf_cache <capacity=n>\n * default: —\n * context: http, server, location\n\nset the parameters related to cache rule inspection results.\n\n * capacity: for some inspection items with caching mechanism enabled, the maximum number of inspection results per inspection item to be cached for each inspection target.\n\ncache-enabled inspections\n\ncache-enabled inspections refer to all inspections except cc protection, i p black and white list inspection, and post inspection.\n\nperformance optimization suggestions\n\ntoo small a capacity will result in frequent cache cleanups, increasing memory fragmentation and reducing performance. so please set it reasonably according to your actual needs.\n\nchanges in latest 'current' version\n\n * syntax: waf_cache <off | on> [capacity=50]\n * default: waf_cache off capacity=50\n * context: server, location\n\n\n# waf_modsecurity\n\n * syntax: waf_modsecurity <on | off> <file=*/path/to/modsecuriy/rules.conf*> <remote_key=key> <remote_url=url>\n * default: waf_modsecurity off\n * context: http, server, location\n\nuse modsecurity's rules.\n\n * file: absolute path to the rule file.\n * remote_key: key for reading remote rule file.\n * remote_url: url to read the remote file.\n\nyou can refer to the use case in enable modsecurity | best practices.\n\nnote\n\n * if you use the parameter remote_key, you must also use the parameter remote_url.\n * if you use the parameters file, remote_key and remote_url at the same time, then both rules will be loaded.\n\nmemory leaks\n\nmemory leaks can cause the system to have less and less memory available, degrade performance, and possibly cause programs or systems to crash.\n\nthe latest version v3.0.5 of modsecurity has a memory leak bug.\n\n * ngin reload memory leak - issue #2552 - spiderlabs/modsecurity\n * it often leads memory leak on nginx reload - issue #2502 - spiderlabs/modsecurity\n\nif you have modsecurity enabled, memory leaks can occur when reloading nginx, which can have serious consequences in the long run.\n\nwe strongly recommend that you avoid using commands like the following.\n\nnginx -s reload\nsystemctl restart nginx\nservice nginx restart\n\n\nwhen you need to reload nginx, it is highly recommended to shut down nginx first and then start nginx.\n\nnginx -s stop && nginx\nsystemctl stop nginx && systemctl start nginx\nservice nginx stop && serivce nginx start\n\n\n\n# waf_modsecurity_transaction_id\n\n * configuration syntax: waf_modsecurity_transaction_id <string>\n * default configuration: waf_modsecurity off\n * configuration segments: http, server, location\n\nspecify the transaction id for modsecurity. you can use constant strings and variables here, here is an example.\n\nserver {\n    location /file/ {\n        waf_modsecurity_transaction_id \"$host-file\";\n    }\n\n    location /api/ {\n        waf_modsecurity_transaction_id \"$host-api\";\n    }\n}\n\n\n\n# waf_captcha\n\n * syntax: waf_captcha <on | off> <prov=hcaptcha | recaptchav2:checkbox | recaptchav2:invisible | recaptchav3> [file=/full/path] [sitekey=your_sitekey] <secret=your_secret> [score=0.5] [expire=30m] [api=uri] [verify=/captcha] [max_fails=times:duration] [zone=name:tag]\n * default: waf_captcha off\n * context: http, server, location\n\nuse captcha for human identification of the client.\n\n * prov: captcha platform with hcaptcha, recaptchav2 and recaptchav3.\n * file: the absolute path to the html file used to access the captcha, you can find the corresponding html file under assets/ and fill in your sitekey in the file. if you omit this parameter, a built-in html file (from the directory assets/) will be selected and used based on the value of the parameter prov, where you need to set the parameter sitekey.\n * sitekey: the sitekey you get from the captcha platform, this parameter needs to be set if and only if the parameter file is omitted.\n * secret: the key used to confirm the result of the captcha, you can get it from the corresponding captcha platform.\n * socre: when prov=recaptchav3, this indicates the minimum value of the captcha scoring result, below which the validation will be considered as failed. the default value is 0.5.\n * expire: the expiration time of the captcha, after which the captcha needs to be re-run. the default is 30 minutes.\n * api: the api provided by the captcha platform to the server to confirm the result of the captcha run.\n   * if prov=hcaptcha, the default value is https://hcaptcha.com/siteverify.\n   * if prov=recaptchav2:xxx, then the default value is https://www.recaptcha.net/recaptcha/api/siteverify.\n   * if prov=recaptchav3, the default value is https://www.recaptcha.net/recaptcha/api/siteverify.\n * verify: the url used by the captcha to submit the token to the backend, defaults to /captcha.\n * max_fails: the maximum number of times the captcha can be refreshed/tried, beyond which the corresponding ip is blacked out for a period of time. for example, max_fails=20:5m means that the ip will be blacked out for 5 minutes after 20 consecutive refreshes/tries. this is useful when you are using billing captcha. when you set this parameter, you must also set the parameter zone.\n * zone: set the shared memory used to record the number of captcha tries, this parameter is required if and only if parameter max_fails is set.\n\nyou can refer to the use case in enable captcha | best practices.\n\nuse your own captcha page\n\nyou can customize the captcha page based on the html file under the directory assets/ and load it with the parameter file.\n\ndon't forget to fill in the sitekey in the html file.\n\n\n# waf_verify_bot\n\n * syntax: waf_verify_bot <off | on | strict> [who] ...\n * default: waf_verify_bot off googlebot bingbot baiduspider yandexbot sogouspider\n * context: http, server, location\n\nverify friendly crawlers, such as googlebot.\n\nif the first parameter is on then all subsequent checks will be stopped and the request will be released.\n\nif the first parameter is strict, then if the user-agent of a request is correct, but the ip address is incorrect, it will be blocked (with false positives).\n\n * who: the name of the crawler, values include googlebot, bingbot, baiduspider, yandexbot and sogouspider. if not specified, the default is all.\n\nhow it works?\n\n * overview of google crawlers (user agents) | search central\n * googlebot verification | google search central | google developers\n * which crawlers does bing use? - bing webmaster tools\n * how to verify bingbot\n * 百度用户服务中心-站长平台\n * how to check that a robot belongs to yandex\n * 搜狗资源平台_公平开放的交流平台\n\n\n# waf_under_attack\n\n * syntax: waf_under_attack <on | off> [uri=str]\n * default: waf_under_attack off\n * context: http, server, location\n\nif your site is under attack you can try using this directive. turning it on forces a five-second delay on each user's first visit and automatically jumps to the page pointed to by uri.\n\n * uri: can be a full url or a path. for example, https://example.com/attack.html or /attack.html.\n\nyou can refer to the use case in protect against distributed cc attacks (distributed http flooding) | best practices.\n\ntips\n\nthe page pointed to by uri should automatically jump to the page the user wants to visit after five seconds, the url of the page can be obtained by querying a string with the parameter target.\n\nassets/under-attack.html is a sample page, you should copy this file to your web directory and configure uri correctly.\n\nnaturally, you can also write your own html file and point to it with uri.\n\nchanges in latest 'current' version\n\nin the lts version we implemented this feature through redirects, but many reasons (such as caching and cdn) would cause the redirects to fail or not validate the cookie properly. so we changed the implementation so that we return the specified page by changing the response body in a way that does not cause the uri to change.\n\nwe also added the response header cache-control: no-store to avoid the impact of caching.\n\n * synyax: waf_under_attack <on | off> [file=full_path]\n\n * default: waf_under_attack off\n\n * context: http, server, location\n\n * removed the parameter uri.\n\n * added parameter file, the value of this parameter should be the absolute path to an html file, e.g. file=/path/to/under-attack.html. this html has only one function, which is to refresh automatically after five seconds. when you omit this parameter, the default is to use the built-in html file, which comes from assets/under-attack.html.\n\n\n# waf_priority\n\n * syntax: waf_priority \"str\"\n * default: waf_priority \"w-ip ip cc under-attack w-url url args ua w-referer referer cookie adv\"\n * context: http, server, location\n\nset the priority of each inspection process, except for post detection, which always has the lowest priority.\n\n * under-attack: directive waf_under_attack.\n * w-ip: ip whitelist inspection\n * ip: ip blacklist inspection\n * cc: cc protection\n * w-url: url whitelist inspection\n * url: url blacklist inspection\n * args: url parameter (query string) blacklist inspection\n * ua: user-agent blacklist inspection\n * w-referer: referer whitelist inspection\n * referer: referer blacklist inspection\n * cookie: cookie blacklist inspection\n * adv: advanced rules.\n\nwarning\n\nstr must be wrapped in single or double quotes, and str must contain all of the inspection process.\n\nchanges in latest 'current' version\n\n * default: waf_priority \"w-ip ip verify-bot cc captcha under-attack w-url url args ua w-referer referer cookie post modsecurity\"\n\n----------------------------------------\n\n * verify-bot: friendly crawler verification.\n * captcha: captcha.\n * post: request body blacklist.\n * modsecurity.\n * adv: removed.\n\n\n# waf_http_status\n\n * syntax: waf_http_status [general=http_status_code] [cc_deny=http_status_code]\n * default: waf_http_status general=403 cc_deny=503\n * context: http, server, location\n\nthis directive is used to set the http status code returned when a request is blocked.\n\n * general: indicates the http status code returned when all blacklist-based inpection are triggered.\n * cc_deny: indicates the http status code returned when cc protection is triggered.\n\nchanges in latest 'current' version\n\nthis directive has been removed from v10.0.0 and the associated features moved to directive waf_action.\n\n\n# waf_action\n\n * syntax: waf_action [blacklist=action] [cc_deny=action] [modsecurity=action] [verify_bot=action] [zone=name:tag]\n * default: waf_action blacklist=403 cc_deny=503 modsecurity=follow verify_bot=403\n * context: http, server, location\n\nthis directive is used to set the action to be taken when blocking a request. action indicates a specific action and can be the following values.\n\n * 4xx | 5xx：http response code.\n * captcha：use the captcha to challenge.\n * follow：follow the action of modsecurity's rule, only for parameter modsecurity.\n\nparameters:\n\n * blacklist: all blacklist-based rules, such as ip blacklist, user-agent blacklist, url blacklist, etc.\n * cc_deny: cc protection.\n * modsecurity：modsecurity's rules.\n * verify_bot：waf_verify_bot.\n * zone：set the shared memory used to record the necessary information, if and only if an action is captcha.\n\n\n# waf_block_page\n\n * syntax: waf_block_page < default | path/to/file.html >\n * default: ——\n * context: http, server, location\n\nused to set the page returned when a request is blocked, default is a built-in html file from assets/block.html, [data expunged] is [data expunged].",charsets:{cjk:!0}},{title:"Home",frontmatter:{home:!0,heroImage:"https://cdn.jsdelivr.net/gh/ADD-SP/ngx_waf@master/assets/logo.png",heroText:"ngx_waf",tagline:"Handy, High performance Nginx firewall module.",actionText:"Quick Start →",actionLink:"/guide/overview.html",features:[{title:"Basic protection",details:"Such as black and white list of IPs or IP range, uri black and white list, and request body black list, etc."},{title:"Easy",details:"Directives and rules are easy to write and readable."},{title:"Fast",details:"The IP detection is a constant-time operation. Most of the remaining inspections use caching to improve performance."},{title:"Advanced protection",details:"Compatible with ModSecurity's rules, you can use OWASP ModSecurity Core Rule Set."},{title:"Friendly crawler verification",details:"Supports verifying Google, Bing, Baidu and Yandex crawlers and allowing them automatically to avoid false positives."},{title:"Captcha",details:"Supports three kinds of captchas: hCaptcha, reCAPTCHAv2 and reCAPTCHAv3."}],footer:"BSD 3-Clause License | Copyright © 2020, ADD-SP"},regularPath:"/",relativePath:"README.md",key:"v-191607df",path:"/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Log",frontmatter:{title:"Log",lang:"en"},regularPath:"/advance/log.html",relativePath:"advance/log.md",key:"v-50be0ffc",path:"/advance/log.html",headers:[{level:2,title:"Blocking Log",slug:"blocking-log",normalizedTitle:"blocking log",charIndex:10},{level:2,title:"Debugging Log",slug:"debugging-log",normalizedTitle:"debugging log",charIndex:754},{level:2,title:"Customised Log Format",slug:"customised-log-format",normalizedTitle:"customised log format",charIndex:2188}],headersStr:"Blocking Log Debugging Log Customised Log Format",content:'# Log\n\n\n# Blocking Log\n\nThe blocking log is stored in error.log. The log level of the blocking log is ALERT. The format is ngx_waf: [rule type][specific rule triggered].\n\nYou can use the following command to quickly view the blocking log.\n\ncat /path/to/error.log | grep ngx_waf:\n\n\nHere are two examples.\n\n2020/01/20 22:56:30 [alert] 6666#0: *30 ngx_waf: [BLACK-URL][(?i)(?:/\\.env$)], client: 192.168.1.1, server: example.com, request: "GET /v1/.env HTTP/1.1", host: "example.com", referrer: "http:/example.com/v1/.env"\n\n2020/01/20 22:58:40 [alert] 6667#0: *11 ngx_waf: [BLACK-POST][(?i)(?:select.+(?:from|limit))], client: 192.168.1.1, server: example.com, request: "POST /xmlrpc.php HTTP/1.1", host: "example.com", referrer: "https://example.com/"\n\n\n\n# Debugging Log\n\nWhen you adjust the error log level to debug in the nginx configuration file, the debug log will be output in error.log for troubleshooting purposes. for troubleshooting purposes. The format is ngx_waf_debug: debug information.\n\nYou can use the following command to quickly view the debug log.\n\ncat /path/to/error.log | grep ngx_waf_debug:\n\n\nBelow is a typical modulation log that illustrates the flow of a CC defense detection.\n\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Start the CC inspection process.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: The module context has been obtained.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: The configuration of the module has been obtained.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Detection has begun.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Shared memory is locked.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Shared memory is unlocked.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Detection is over.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: The CC detection process is fully completed.\n\n\nSENSITIVE INFORMATION DISCLOSURE\n\nIn the latest Current version, debug logs may contain some sensitive information, such as data received and sent by the server, CAPTCHA keys, etc. When providing debug logs it is recommended to send them to us via email. You can find our email address here.\n\n\n# Customised Log Format\n\nnginx allows custom log formats, and a server block can write to multiple log files at the same time, giving us the opportunity to customise our log formats. This module provides some built-in Variables that can be used to customise the blocking log with a little effort.\n\nHere is an example.\n\n...\n\nhttp {\n    ...\n\n    log_format  main    \'$remote_addr - $remote_user [$time_local] "$request" \'\n                        \'$status $body_bytes_sent "$http_referer" \'\n                        \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    log_format yaml     \'- remote_addr: "$remote_addr"\\n\'\n                        \'  remote_user: "$remote_user"\\n\'\n                        \'  time_local: "$time_local"\\n\'\n                        \'  request: "$request"\\n\'\n                        \'  status: "$status"\\n\'\n                        \'  body_bytes_sent: "$body_bytes_sent"\\n\'\n                        \'  http_referer: "$http_referer"\\n\'\n                        \'  http_user_agent: "$http_user_agent"\\n\'\n                        \'  http_x_forwarded_for: "$http_x_forwarded_for"\\n\'\n                        \'  waf_blocked: $waf_blocked\\n\'\n                        \'  waf_spend: $waf_spend\\n\'\n                        \'  waf_rule_type: "$waf_rule_type"\\n\'\n                        \'  waf_rule_details: "$waf_rule_details"\\n\';\n\n\n    server {\n        ...\n\n        access_log  logs/access.log  main;\n        access_log  logs/access.yml  yaml   if=$waf_log;\n        access_log  logs/waf.yml     yaml   if=$waf_blocking_log;\n\n        ...\n    }\n\n    ...\n}\n\n...\n\n\nThe above configuration stores the normal log format in logs/access.log, while the yaml format logs are stored in logs/access.yml. It is worth noting that yaml format logs use the three built-in variables provided by the module. You can easily read `logs/access.The above configuration will have the following effect.\n\n * normal access logs are written to logs/access.log.\n * YAML-formatted access logs are written to logs/access.yml.\n * YAML-formatted intercept logs are written to logs/waf.yml.\n\nLog analysis\n\nYou can customize the log format, and then programmatically analyze it and make statistical graphs.\n\nABOUT YAML FORMAT\n\nYAML is a highly readable data serialisation format that is very easy to learn. As long as you can read JSON, learning YAML will be a snap. You can search for a description of the YAML format yourself.',normalizedContent:'# log\n\n\n# blocking log\n\nthe blocking log is stored in error.log. the log level of the blocking log is alert. the format is ngx_waf: [rule type][specific rule triggered].\n\nyou can use the following command to quickly view the blocking log.\n\ncat /path/to/error.log | grep ngx_waf:\n\n\nhere are two examples.\n\n2020/01/20 22:56:30 [alert] 6666#0: *30 ngx_waf: [black-url][(?i)(?:/\\.env$)], client: 192.168.1.1, server: example.com, request: "get /v1/.env http/1.1", host: "example.com", referrer: "http:/example.com/v1/.env"\n\n2020/01/20 22:58:40 [alert] 6667#0: *11 ngx_waf: [black-post][(?i)(?:select.+(?:from|limit))], client: 192.168.1.1, server: example.com, request: "post /xmlrpc.php http/1.1", host: "example.com", referrer: "https://example.com/"\n\n\n\n# debugging log\n\nwhen you adjust the error log level to debug in the nginx configuration file, the debug log will be output in error.log for troubleshooting purposes. for troubleshooting purposes. the format is ngx_waf_debug: debug information.\n\nyou can use the following command to quickly view the debug log.\n\ncat /path/to/error.log | grep ngx_waf_debug:\n\n\nbelow is a typical modulation log that illustrates the flow of a cc defense detection.\n\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: start the cc inspection process.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: the module context has been obtained.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: the configuration of the module has been obtained.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: detection has begun.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: shared memory is locked.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: shared memory is unlocked.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: detection is over.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: the cc detection process is fully completed.\n\n\nsensitive information disclosure\n\nin the latest current version, debug logs may contain some sensitive information, such as data received and sent by the server, captcha keys, etc. when providing debug logs it is recommended to send them to us via email. you can find our email address here.\n\n\n# customised log format\n\nnginx allows custom log formats, and a server block can write to multiple log files at the same time, giving us the opportunity to customise our log formats. this module provides some built-in variables that can be used to customise the blocking log with a little effort.\n\nhere is an example.\n\n...\n\nhttp {\n    ...\n\n    log_format  main    \'$remote_addr - $remote_user [$time_local] "$request" \'\n                        \'$status $body_bytes_sent "$http_referer" \'\n                        \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    log_format yaml     \'- remote_addr: "$remote_addr"\\n\'\n                        \'  remote_user: "$remote_user"\\n\'\n                        \'  time_local: "$time_local"\\n\'\n                        \'  request: "$request"\\n\'\n                        \'  status: "$status"\\n\'\n                        \'  body_bytes_sent: "$body_bytes_sent"\\n\'\n                        \'  http_referer: "$http_referer"\\n\'\n                        \'  http_user_agent: "$http_user_agent"\\n\'\n                        \'  http_x_forwarded_for: "$http_x_forwarded_for"\\n\'\n                        \'  waf_blocked: $waf_blocked\\n\'\n                        \'  waf_spend: $waf_spend\\n\'\n                        \'  waf_rule_type: "$waf_rule_type"\\n\'\n                        \'  waf_rule_details: "$waf_rule_details"\\n\';\n\n\n    server {\n        ...\n\n        access_log  logs/access.log  main;\n        access_log  logs/access.yml  yaml   if=$waf_log;\n        access_log  logs/waf.yml     yaml   if=$waf_blocking_log;\n\n        ...\n    }\n\n    ...\n}\n\n...\n\n\nthe above configuration stores the normal log format in logs/access.log, while the yaml format logs are stored in logs/access.yml. it is worth noting that yaml format logs use the three built-in variables provided by the module. you can easily read `logs/access.the above configuration will have the following effect.\n\n * normal access logs are written to logs/access.log.\n * yaml-formatted access logs are written to logs/access.yml.\n * yaml-formatted intercept logs are written to logs/waf.yml.\n\nlog analysis\n\nyou can customize the log format, and then programmatically analyze it and make statistical graphs.\n\nabout yaml format\n\nyaml is a highly readable data serialisation format that is very easy to learn. as long as you can read json, learning yaml will be a snap. you can search for a description of the yaml format yourself.',charsets:{cjk:!0}},{title:"Rule Description",frontmatter:{title:"Rule Description",lang:"en"},regularPath:"/advance/rule.html",relativePath:"advance/rule.md",key:"v-5c8a7d76",path:"/advance/rule.html",headers:[{level:2,title:"IP Whitelist",slug:"ip-whitelist",normalizedTitle:"ip whitelist",charIndex:849},{level:2,title:"IP Blacklist",slug:"ip-blacklist",normalizedTitle:"ip blacklist",charIndex:1304},{level:2,title:"Url Whitelist",slug:"url-whitelist",normalizedTitle:"url whitelist",charIndex:1496},{level:2,title:"Url Blacklist",slug:"url-blacklist",normalizedTitle:"url blacklist",charIndex:1718},{level:2,title:"Get Parameter Blacklist",slug:"get-parameter-blacklist",normalizedTitle:"get parameter blacklist",charIndex:1947},{level:2,title:"Post body Blacklist",slug:"post-body-blacklist",normalizedTitle:"post body blacklist",charIndex:2226},{level:2,title:"User-Agent Blacklist",slug:"user-agent-blacklist",normalizedTitle:"user-agent blacklist",charIndex:2584},{level:2,title:"Cookie Blacklist",slug:"cookie-blacklist",normalizedTitle:"cookie blacklist",charIndex:2838},{level:2,title:"Referer Whitelist",slug:"referer-whitelist",normalizedTitle:"referer whitelist",charIndex:3087},{level:2,title:"Referer Blacklist",slug:"referer-blacklist",normalizedTitle:"referer blacklist",charIndex:3343}],headersStr:"IP Whitelist IP Blacklist Url Whitelist Url Blacklist Get Parameter Blacklist Post body Blacklist User-Agent Blacklist Cookie Blacklist Referer Whitelist Referer Blacklist",content:"# Rule Description\n\nThis module uses the following configuration files, all of which must be in the same directory and to which nginx has read access.\n\n * IP whitelist with the file names white-ipv4 and white-ipv6.\n * IP blacklist with the filenames ipv4 and ipv6.\n * Url whitelist with the filename white-url.\n * Url blacklist with the filename url.\n * Get parameter blacklist with the filename args.\n * Post request body blacklist, with the filename post.\n * UserAgent blacklist with the filename user-agent.\n * Cookie blacklist, with the filename cookie.\n * Referer whitelist with the filename white-referer.\n * Referer blacklist with the filename referer.\n * Advanced rules with the file name advaced.\n\nNOTE\n\nSome rule files require writing regular expressions, one regular expression per line. Regular expressions follow the PCRE standard.\n\n\n# IP Whitelist\n\nThe ip whitelist consists of the following two files.\n\n * ipv4 whitelist with the file name white-ipv4.\n * ipv6 whitelist with the file name white-ipv6.\n\nSpecify one IP address or IP address range per line when writing.\n\nHere are some examples.\n\nSpecifies a single ipv4 address.\n\n192.168.2.1\n\n\nSpecifies an ipv4 address range.\n\n192.168.2.0/24\n\n\nSpecifies a single ipv6 address.\n\nFE80::1000\n\n\nSpecifies an ipv6 address range.\n\nFE80::/10\n\n\n\n# IP Blacklist\n\nThe IP blacklist consists of the following two files.\n\n * ipv4 blacklist with the file name ipv4.\n * ipv6 blacklist with the file name ipv6.\n\nWrite the same as IP Whitelist.\n\n\n# Url Whitelist\n\nThe Url whitelist file name is white-url, and the rule is written with one regular expression per line. Url matched by any of the regular expressions will be released directly without subsequent checks.\n\n\n# Url Blacklist\n\nThe Url blacklist file name is url, and the rule is written with one regular expression per line. Url will be blocked if it is matched by any of the regular expressions, and a 403 status code will be returned.\n\n\n# Get Parameter Blacklist\n\nThe Get parameter is blacklisted with the file name args, and the rule is written with one regular expression per line. If the Get parameter is matched by any of the regular expressions, it will be intercepted and a 403 status code will be returned.\n\n\n# Post body Blacklist\n\nThe file name of the Post body blacklist is post, and the rule is written with one regular expression per line. The content of the Post body will be blocked if any of the regular expressions match it, and a 403 status code will be returned.\n\nWARNING\n\nSometimes this module does not perform Post body inspection, see FAQ for details.\n\n\n# User-Agent Blacklist\n\nThe file name of the UserAgent blacklist is user-agent, and the rule is written with one regular expression per line. UserAgent will be blocked if any of the regular expressions match it, and a 403 status code will be returned.\n\n\n# Cookie Blacklist\n\nThe file name of the cookie blacklist is cookie and the rule is written with one regular expression per line. If a cookie is matched by any of the regular expressions, it will be blocked and a 403 status code will be returned.\n\n\n# Referer Whitelist\n\nThe referer whitelist is named white-referer, and the rule is written with one regular expression per line. The referer will be released if it is matched by any of the regular expressions, and no subsequent checks will be performed.\n\n\n# Referer Blacklist\n\nThe Referer blacklist file is named referer and the rule is written with one regular expression per line. Referer will be blocked if it is matched by any of the regular expressions, and a 403 status code will be returned.",normalizedContent:"# rule description\n\nthis module uses the following configuration files, all of which must be in the same directory and to which nginx has read access.\n\n * ip whitelist with the file names white-ipv4 and white-ipv6.\n * ip blacklist with the filenames ipv4 and ipv6.\n * url whitelist with the filename white-url.\n * url blacklist with the filename url.\n * get parameter blacklist with the filename args.\n * post request body blacklist, with the filename post.\n * useragent blacklist with the filename user-agent.\n * cookie blacklist, with the filename cookie.\n * referer whitelist with the filename white-referer.\n * referer blacklist with the filename referer.\n * advanced rules with the file name advaced.\n\nnote\n\nsome rule files require writing regular expressions, one regular expression per line. regular expressions follow the pcre standard.\n\n\n# ip whitelist\n\nthe ip whitelist consists of the following two files.\n\n * ipv4 whitelist with the file name white-ipv4.\n * ipv6 whitelist with the file name white-ipv6.\n\nspecify one ip address or ip address range per line when writing.\n\nhere are some examples.\n\nspecifies a single ipv4 address.\n\n192.168.2.1\n\n\nspecifies an ipv4 address range.\n\n192.168.2.0/24\n\n\nspecifies a single ipv6 address.\n\nfe80::1000\n\n\nspecifies an ipv6 address range.\n\nfe80::/10\n\n\n\n# ip blacklist\n\nthe ip blacklist consists of the following two files.\n\n * ipv4 blacklist with the file name ipv4.\n * ipv6 blacklist with the file name ipv6.\n\nwrite the same as ip whitelist.\n\n\n# url whitelist\n\nthe url whitelist file name is white-url, and the rule is written with one regular expression per line. url matched by any of the regular expressions will be released directly without subsequent checks.\n\n\n# url blacklist\n\nthe url blacklist file name is url, and the rule is written with one regular expression per line. url will be blocked if it is matched by any of the regular expressions, and a 403 status code will be returned.\n\n\n# get parameter blacklist\n\nthe get parameter is blacklisted with the file name args, and the rule is written with one regular expression per line. if the get parameter is matched by any of the regular expressions, it will be intercepted and a 403 status code will be returned.\n\n\n# post body blacklist\n\nthe file name of the post body blacklist is post, and the rule is written with one regular expression per line. the content of the post body will be blocked if any of the regular expressions match it, and a 403 status code will be returned.\n\nwarning\n\nsometimes this module does not perform post body inspection, see faq for details.\n\n\n# user-agent blacklist\n\nthe file name of the useragent blacklist is user-agent, and the rule is written with one regular expression per line. useragent will be blocked if any of the regular expressions match it, and a 403 status code will be returned.\n\n\n# cookie blacklist\n\nthe file name of the cookie blacklist is cookie and the rule is written with one regular expression per line. if a cookie is matched by any of the regular expressions, it will be blocked and a 403 status code will be returned.\n\n\n# referer whitelist\n\nthe referer whitelist is named white-referer, and the rule is written with one regular expression per line. the referer will be released if it is matched by any of the regular expressions, and no subsequent checks will be performed.\n\n\n# referer blacklist\n\nthe referer blacklist file is named referer and the rule is written with one regular expression per line. referer will be blocked if it is matched by any of the regular expressions, and a 403 status code will be returned.",charsets:{}},{title:"Known Issues",frontmatter:{title:"Known Issues",lang:"en"},regularPath:"/advance/issue.html",relativePath:"advance/issue.md",key:"v-2c027e9c",path:"/advance/issue.html",headersStr:null,content:"# Known Issues\n\nBugs that exist in the latest stable release are listed here, bugs that have been fixed in the latest stable release are not listed here.",normalizedContent:"# known issues\n\nbugs that exist in the latest stable release are listed here, bugs that have been fixed in the latest stable release are not listed here.",charsets:{}},{title:"Rule Priority",frontmatter:{title:"Rule Priority",lang:"en"},regularPath:"/advance/priority.html",relativePath:"advance/priority.md",key:"v-6eb378b4",path:"/advance/priority.html",headersStr:null,content:"# Rule Priority\n\nThere are many inspection process in this module, so it is important to specify the inspection priority of each inspection process to avoid illogical inspection results.\n\nThe following is a list of all the tests in order of priority, from top to bottom.\n\n 1.  IP whitelist inspection\n 2.  IP blacklist inspection\n 3.  Friendly crawler verification\n 4.  CC protection\n 5.  CAPTCHA\n 6.  Under attack mode\n 7.  Url whitelist inspection\n 8.  Url blacklist inspection\n 9.  Get parameter blacklist inspection\n 10. User-Agent blacklist inspection\n 11. Referer whitelist inspection\n 12. Referer blacklist inspection\n 13. Cookie blacklist inspection\n 14. Post request body blacklist\n 15. ModSecurity\n\nChange priority\n\nYou can modify the priority through the configuration file, but the priority of the POST request body detection is not allowed to be modified, it will always have the lowest priority. See waf_priority for details\n\nCHANGES IN LATEST 'Current' VERSION\n\nAllows the priority of the request body inspection to be modified by the directive waf_priority.",normalizedContent:"# rule priority\n\nthere are many inspection process in this module, so it is important to specify the inspection priority of each inspection process to avoid illogical inspection results.\n\nthe following is a list of all the tests in order of priority, from top to bottom.\n\n 1.  ip whitelist inspection\n 2.  ip blacklist inspection\n 3.  friendly crawler verification\n 4.  cc protection\n 5.  captcha\n 6.  under attack mode\n 7.  url whitelist inspection\n 8.  url blacklist inspection\n 9.  get parameter blacklist inspection\n 10. user-agent blacklist inspection\n 11. referer whitelist inspection\n 12. referer blacklist inspection\n 13. cookie blacklist inspection\n 14. post request body blacklist\n 15. modsecurity\n\nchange priority\n\nyou can modify the priority through the configuration file, but the priority of the post request body detection is not allowed to be modified, it will always have the lowest priority. see waf_priority for details\n\nchanges in latest 'current' version\n\nallows the priority of the request body inspection to be modified by the directive waf_priority.",charsets:{}},{title:"Cross-version Upgrades",frontmatter:{title:"Cross-version Upgrades",lang:"en"},regularPath:"/advance/upgrade.html",relativePath:"advance/upgrade.md",key:"v-2223cd7c",path:"/advance/upgrade.html",headers:[{level:2,title:"Upgrade from 9.x.x to 10.x.x",slug:"upgrade-from-9-x-x-to-10-x-x",normalizedTitle:"upgrade from 9.x.x to 10.x.x",charIndex:131},{level:2,title:"Upgrade from 8.x.x to 9.x.x",slug:"upgrade-from-8-x-x-to-9-x-x",normalizedTitle:"upgrade from 8.x.x to 9.x.x",charIndex:574},{level:2,title:"Upgrade from 7.x.x to 8.x.x",slug:"upgrade-from-7-x-x-to-8-x-x",normalizedTitle:"upgrade from 7.x.x to 8.x.x",charIndex:1267},{level:2,title:"Upgrade from 6.x.x to 7.x.x",slug:"upgrade-from-6-x-x-to-7-x-x",normalizedTitle:"upgrade from 6.x.x to 7.x.x",charIndex:2549},{level:2,title:"Upgrade from 5.x.x to 6.x.x",slug:"upgrade-from-5-x-x-to-6-x-x",normalizedTitle:"upgrade from 5.x.x to 6.x.x",charIndex:2688}],headersStr:"Upgrade from 9.x.x to 10.x.x Upgrade from 8.x.x to 9.x.x Upgrade from 7.x.x to 8.x.x Upgrade from 6.x.x to 7.x.x Upgrade from 5.x.x to 6.x.x",content:"# Cross-version Upgrades\n\nTo upgrade the module, you need to reinstall it according to the instructions in installation guide.\n\n\n# Upgrade from 9.x.x to 10.x.x\n\n 1. If you use the directive waf_http_status, replace it with the directive waf_action according to the documentation.\n 2. If you set the parameter size of the directive waf_cc_deny, you should replace it with the parameter zone according to the documentation.\n 3. If you use the parameter CAPTCHA of the directive waf_cc_deny, you should use the directive waf_action instead, according to the documentation.\n\n\n# Upgrade from 8.x.x to 9.x.x\n\n 1. Install the dynamic libraries and headers for libmodsecurity.\n 2. Run the command git clone -b v2.3.0 https://github.com/troydhanson/uthash.git lib/uthash in the root of the project.\n 3. Remove some parameters from the command waf_mode, if you are using them.\n    * LIBINJECTION\n    * LIBINJECTION-SQLI\n    * LIBINJECTION-XSS\n    * ADV\n 4. Delete the file advanced for advanced rules. 5.\n 5. The parameter ADV of the directive waf_priority is removed, please delete it if you use this parameter.\n 6. A new parameter MODSECURITY has been added to the directive waf_priority. If you use this directive, please fill in the parameter in the appropriate place.\n\n\n# Upgrade from 7.x.x to 8.x.x\n\n 1. Install the dynamic libraries and headers for libcurl.\n 2. Run the command git clone https://github.com/DaveGamble/cJSON.git lib/cjson in the root of the project.\n 3. Run the command git clone https://github.com/libinjection/libinjection.git lib/libinjection at the root of the project.\n 4. If you used the directive waf_mode and used the directive's parameters CC or CACHE, remove both parameters. The function of each of these two parameters has been moved into the directive waf_cc_deny and waf_cache respectively.\n 5. If you want to enable CC protection, change the parameter of the directive waf_cc_deny, for example, change waf_cc_deny rate=2000r/m duration=1h to waf_cc_deny on rate=2000r/m duration=1h.\n 6. If you want to enable caching, change the parameter of the directive waf_cache, for example, change waf_cache capacity=50 to waf_cache on capacity=50.\n 7. If you use the directives waf_cc_deny or waf_cache in the http context, move these two directives to a lower context, such as to the server context.\n 8. If you use the directive waf_cache and use the directive's parameters interval or percent, remove these two parameters, which have been removed.\n 9. If you use the directive waf_priority, add VERIFY-BOT and CAPTCHA to it.\n\n\n# Upgrade from 6.x.x to 7.x.x\n\n 1. If you use the directive waf_cc_deny in the http block, move this directive to a more internal level.\n\n\n# Upgrade from 5.x.x to 6.x.x\n\n 1. Create a new empty file named advanced in the rules directory.\n 2. If the directive waf_priority is used, you can delete it or modify it according to the directive in the documentation.",normalizedContent:"# cross-version upgrades\n\nto upgrade the module, you need to reinstall it according to the instructions in installation guide.\n\n\n# upgrade from 9.x.x to 10.x.x\n\n 1. if you use the directive waf_http_status, replace it with the directive waf_action according to the documentation.\n 2. if you set the parameter size of the directive waf_cc_deny, you should replace it with the parameter zone according to the documentation.\n 3. if you use the parameter captcha of the directive waf_cc_deny, you should use the directive waf_action instead, according to the documentation.\n\n\n# upgrade from 8.x.x to 9.x.x\n\n 1. install the dynamic libraries and headers for libmodsecurity.\n 2. run the command git clone -b v2.3.0 https://github.com/troydhanson/uthash.git lib/uthash in the root of the project.\n 3. remove some parameters from the command waf_mode, if you are using them.\n    * libinjection\n    * libinjection-sqli\n    * libinjection-xss\n    * adv\n 4. delete the file advanced for advanced rules. 5.\n 5. the parameter adv of the directive waf_priority is removed, please delete it if you use this parameter.\n 6. a new parameter modsecurity has been added to the directive waf_priority. if you use this directive, please fill in the parameter in the appropriate place.\n\n\n# upgrade from 7.x.x to 8.x.x\n\n 1. install the dynamic libraries and headers for libcurl.\n 2. run the command git clone https://github.com/davegamble/cjson.git lib/cjson in the root of the project.\n 3. run the command git clone https://github.com/libinjection/libinjection.git lib/libinjection at the root of the project.\n 4. if you used the directive waf_mode and used the directive's parameters cc or cache, remove both parameters. the function of each of these two parameters has been moved into the directive waf_cc_deny and waf_cache respectively.\n 5. if you want to enable cc protection, change the parameter of the directive waf_cc_deny, for example, change waf_cc_deny rate=2000r/m duration=1h to waf_cc_deny on rate=2000r/m duration=1h.\n 6. if you want to enable caching, change the parameter of the directive waf_cache, for example, change waf_cache capacity=50 to waf_cache on capacity=50.\n 7. if you use the directives waf_cc_deny or waf_cache in the http context, move these two directives to a lower context, such as to the server context.\n 8. if you use the directive waf_cache and use the directive's parameters interval or percent, remove these two parameters, which have been removed.\n 9. if you use the directive waf_priority, add verify-bot and captcha to it.\n\n\n# upgrade from 6.x.x to 7.x.x\n\n 1. if you use the directive waf_cc_deny in the http block, move this directive to a more internal level.\n\n\n# upgrade from 5.x.x to 6.x.x\n\n 1. create a new empty file named advanced in the rules directory.\n 2. if the directive waf_priority is used, you can delete it or modify it according to the directive in the documentation.",charsets:{}},{title:"Embedded Variables",frontmatter:{title:"Embedded Variables",lang:"en"},regularPath:"/advance/variable.html",relativePath:"advance/variable.md",key:"v-42ac7bf6",path:"/advance/variable.html",headers:[{level:2,title:"$waf_log",slug:"waf-log",normalizedTitle:"$waf_log",charIndex:250},{level:2,title:"$waf_blocking_log",slug:"waf-blocking-log",normalizedTitle:"$waf_blocking_log",charIndex:440},{level:2,title:"$waf_blocked",slug:"waf-blocked",normalizedTitle:"$waf_blocked",charIndex:638},{level:2,title:"$waf_spend",slug:"waf-spend",normalizedTitle:"$waf_spend",charIndex:770},{level:2,title:"$waf_rule_type",slug:"waf-rule-type",normalizedTitle:"$waf_rule_type",charIndex:954},{level:2,title:"$waf_rule_details",slug:"waf-rule-details",normalizedTitle:"$waf_rule_details",charIndex:1445},{level:2,title:"$waf_rate",slug:"waf-rate",normalizedTitle:"$waf_rate",charIndex:1607}],headersStr:"$waf_log $waf_blocking_log $waf_blocked $waf_spend $waf_rule_type $waf_rule_details $waf_rate",content:"# Embedded Variables\n\nWhen writing nginx.conf, some variables are inevitably needed. For example, $remote_addr can be used to get the client IP address.\n\nThis module adds several available variables.\n\nCAN NOT BE USED FOR DIRECTIVE `if`\n\nSee FAQ.\n\n\n# $waf_log\n\nNot an empty string if the firewall is checked in this request, otherwise an empty string. This variable is mainly used in the directive access_log, see Customised Log Format.\n\n\n# $waf_blocking_log\n\nNot an empty string if this request was originally blocked by the module, and vice versa. This variable is mainly used in the directive access_log, see Customised Log Format.\n\n\n# $waf_blocked\n\nWhether this request is intercepted by this module, if intercepted, its value is 'true', otherwise it is 'false'.\n\n\n# $waf_spend\n\nIndicates how much time (in milliseconds) this check took, retaining 5 decimal places, with rounding rules depending on the specific C standard library implementation.\n\n\n# $waf_rule_type\n\nIf a black and white list rule is in effect for this request, the value is the type of rule that triggered it. Here are the possible values. If no black and white list rule is in effect then the value is ''.\n\n * 'CC-DENY'\n * 'WHITE-IPV4'\n * 'WHITE-IPV6'\n * 'BLACK-IPV4'\n * 'BLACK-IPV6'\n * 'WHITE-URL'\n * 'BLACK-URL'\n * 'BLACK-ARGS'\n * 'BLACK-USER-AGENT'\n * 'WHITE-REFERER'\n * 'BLACK-REFERER'\n * 'BLACK-COOKIE'\n * 'BLACK-POST'\n * 'UNDER-ATTACK'\n * 'FAKE-BOT'\n * 'CAPTCHA'\n\n\n# $waf_rule_details\n\nIf this request is blocked by this module, its value is the content of the specific rule triggered. If it is not blocked, its value is ''.\n\n\n# $waf_rate\n\nAn integer that represents the number of accesses to the current IP in a cycle.",normalizedContent:"# embedded variables\n\nwhen writing nginx.conf, some variables are inevitably needed. for example, $remote_addr can be used to get the client ip address.\n\nthis module adds several available variables.\n\ncan not be used for directive `if`\n\nsee faq.\n\n\n# $waf_log\n\nnot an empty string if the firewall is checked in this request, otherwise an empty string. this variable is mainly used in the directive access_log, see customised log format.\n\n\n# $waf_blocking_log\n\nnot an empty string if this request was originally blocked by the module, and vice versa. this variable is mainly used in the directive access_log, see customised log format.\n\n\n# $waf_blocked\n\nwhether this request is intercepted by this module, if intercepted, its value is 'true', otherwise it is 'false'.\n\n\n# $waf_spend\n\nindicates how much time (in milliseconds) this check took, retaining 5 decimal places, with rounding rules depending on the specific c standard library implementation.\n\n\n# $waf_rule_type\n\nif a black and white list rule is in effect for this request, the value is the type of rule that triggered it. here are the possible values. if no black and white list rule is in effect then the value is ''.\n\n * 'cc-deny'\n * 'white-ipv4'\n * 'white-ipv6'\n * 'black-ipv4'\n * 'black-ipv6'\n * 'white-url'\n * 'black-url'\n * 'black-args'\n * 'black-user-agent'\n * 'white-referer'\n * 'black-referer'\n * 'black-cookie'\n * 'black-post'\n * 'under-attack'\n * 'fake-bot'\n * 'captcha'\n\n\n# $waf_rule_details\n\nif this request is blocked by this module, its value is the content of the specific rule triggered. if it is not blocked, its value is ''.\n\n\n# $waf_rate\n\nan integer that represents the number of accesses to the current ip in a cycle.",charsets:{}},{title:"2.x.x",frontmatter:{title:"2.x.x",lang:"en"},regularPath:"/changes/2_x_x.html",relativePath:"changes/2_x_x.md",key:"v-9c16b5c8",path:"/changes/2_x_x.html",headers:[{level:2,title:"[2.1.1] - 2020-12.10",slug:"_2-1-1-2020-12-10",normalizedTitle:"[2.1.1] - 2020-12.10",charIndex:343},{level:3,title:"Added",slug:"added",normalizedTitle:"added",charIndex:368},{level:3,title:"Changed",slug:"changed",normalizedTitle:"changed",charIndex:378},{level:3,title:"Fixed",slug:"fixed",normalizedTitle:"fixed",charIndex:390},{level:2,title:"[2.1.0] - 2020-12-09",slug:"_2-1-0-2020-12-09",normalizedTitle:"[2.1.0] - 2020-12-09",charIndex:649},{level:3,title:"Added",slug:"added-2",normalizedTitle:"added",charIndex:368},{level:3,title:"Changed",slug:"changed-2",normalizedTitle:"changed",charIndex:378},{level:3,title:"Fixed",slug:"fixed-2",normalizedTitle:"fixed",charIndex:390},{level:2,title:"[2.0.2] - 2020-12-07",slug:"_2-0-2-2020-12-07",normalizedTitle:"[2.0.2] - 2020-12-07",charIndex:819},{level:3,title:"Added",slug:"added-3",normalizedTitle:"added",charIndex:368},{level:3,title:"Changed",slug:"changed-3",normalizedTitle:"changed",charIndex:378},{level:3,title:"Fixed",slug:"fixed-3",normalizedTitle:"fixed",charIndex:390},{level:2,title:"[2.0.1] - 2020-12-03",slug:"_2-0-1-2020-12-03",normalizedTitle:"[2.0.1] - 2020-12-03",charIndex:1070},{level:3,title:"Added",slug:"added-4",normalizedTitle:"added",charIndex:368},{level:3,title:"Changed",slug:"changed-4",normalizedTitle:"changed",charIndex:378},{level:3,title:"Fixed",slug:"fixed-4",normalizedTitle:"fixed",charIndex:390},{level:2,title:"[2.0.0] - 2020-09-29",slug:"_2-0-0-2020-09-29",normalizedTitle:"[2.0.0] - 2020-09-29",charIndex:1482},{level:3,title:"Added",slug:"added-5",normalizedTitle:"added",charIndex:368},{level:3,title:"Changed",slug:"changed-5",normalizedTitle:"changed",charIndex:378},{level:3,title:"Fixed",slug:"fixed-5",normalizedTitle:"fixed",charIndex:390}],headersStr:"[2.1.1] - 2020-12.10 Added Changed Fixed [2.1.0] - 2020-12-09 Added Changed Fixed [2.0.2] - 2020-12-07 Added Changed Fixed [2.0.1] - 2020-12-03 Added Changed Fixed [2.0.0] - 2020-09-29 Added Changed Fixed",content:'# Change Log (2.x.x)\n\nThe format is based on Keep a Changelog, and this project adheres to Semantic Versioning.\n\nWhat is a breaking change?\n\n * The original configuration file may not work, for example, if a directive item is removed or renamed.\n * It may be necessary to update the build environment, such as installing new dependencies.\n\n\n# [2.1.1] - 2020-12.10\n\n\n# Added\n\n\n# Changed\n\n\n# Fixed\n\n * Fixed a module startup failure error. The error message for this error is nginx: [alert] could not open error log file: open() "ngx_waf: /logs/error.log" failed (2: No such file or directory) (0dfc46f).\n\n----------------------------------------\n\n\n# [2.1.0] - 2020-12-09\n\n\n# Added\n\n * Compatible with the mainline version of NGINX (f31f906 & 65277d1).\n\n\n# Changed\n\n\n# Fixed\n\n----------------------------------------\n\n\n# [2.0.2] - 2020-12-07\n\n\n# Added\n\n\n# Changed\n\n\n# Fixed\n\n * Fix for Anti Challenge Collapsar failing when waf_mult_mount is disabled (048fe5c).\n\n * Fixed compile error caused by incorrect #include (3fa298c).\n\n----------------------------------------\n\n\n# [2.0.1] - 2020-12-03\n\n\n# Added\n\n\n# Changed\n\n * Instead of downloading the uthash dependency manually, you can install the system library with yum install uthash-devel or apt-get install uthash-dev (7cfc94b).\n\n\n# Fixed\n\n * Fixed a bug that failed to compile under CentOS/RHEL 6 or 7 that was caused by not properly preventing macro redefinitions (28e1c8a & 566ae4a).\n\n----------------------------------------\n\n\n# [2.0.0] - 2020-09-29\n\n\n# Added\n\n * We can compile the module with --add-dynamic-module. Thanks for dvershinin\'s work(https://github.com/ADD-SP/ngx_waf/pull/4)。\n\n\n# Changed\n\n * Remove a default User-Agent rule that is (?i)(? :Sogou web spider), as it will block non-malicious web spider(827d4e5).\n\n * Merge directives (ba92cfd). These directives will be merged: waf_check_ipv4, waf_check_url, waf_check_args, waf_check_ua, waf_check_referer, waf_check_cookie, waf_check_post, waf_check_cookie, waf_cc_deny. The merged new directive is waf_mode, see README.\n\n\n# Fixed\n\n * The blank lines in the rules can now be read correctly (955cf2d).',normalizedContent:'# change log (2.x.x)\n\nthe format is based on keep a changelog, and this project adheres to semantic versioning.\n\nwhat is a breaking change?\n\n * the original configuration file may not work, for example, if a directive item is removed or renamed.\n * it may be necessary to update the build environment, such as installing new dependencies.\n\n\n# [2.1.1] - 2020-12.10\n\n\n# added\n\n\n# changed\n\n\n# fixed\n\n * fixed a module startup failure error. the error message for this error is nginx: [alert] could not open error log file: open() "ngx_waf: /logs/error.log" failed (2: no such file or directory) (0dfc46f).\n\n----------------------------------------\n\n\n# [2.1.0] - 2020-12-09\n\n\n# added\n\n * compatible with the mainline version of nginx (f31f906 & 65277d1).\n\n\n# changed\n\n\n# fixed\n\n----------------------------------------\n\n\n# [2.0.2] - 2020-12-07\n\n\n# added\n\n\n# changed\n\n\n# fixed\n\n * fix for anti challenge collapsar failing when waf_mult_mount is disabled (048fe5c).\n\n * fixed compile error caused by incorrect #include (3fa298c).\n\n----------------------------------------\n\n\n# [2.0.1] - 2020-12-03\n\n\n# added\n\n\n# changed\n\n * instead of downloading the uthash dependency manually, you can install the system library with yum install uthash-devel or apt-get install uthash-dev (7cfc94b).\n\n\n# fixed\n\n * fixed a bug that failed to compile under centos/rhel 6 or 7 that was caused by not properly preventing macro redefinitions (28e1c8a & 566ae4a).\n\n----------------------------------------\n\n\n# [2.0.0] - 2020-09-29\n\n\n# added\n\n * we can compile the module with --add-dynamic-module. thanks for dvershinin\'s work(https://github.com/add-sp/ngx_waf/pull/4)。\n\n\n# changed\n\n * remove a default user-agent rule that is (?i)(? :sogou web spider), as it will block non-malicious web spider(827d4e5).\n\n * merge directives (ba92cfd). these directives will be merged: waf_check_ipv4, waf_check_url, waf_check_args, waf_check_ua, waf_check_referer, waf_check_cookie, waf_check_post, waf_check_cookie, waf_cc_deny. the merged new directive is waf_mode, see readme.\n\n\n# fixed\n\n * the blank lines in the rules can now be read correctly (955cf2d).',charsets:{}},{title:"3.x.x",frontmatter:{title:"3.x.x",lang:"en"},regularPath:"/changes/3_x_x.html",relativePath:"changes/3_x_x.md",key:"v-40e1b208",path:"/changes/3_x_x.html",headers:[{level:2,title:"[3.1.6] - 2021-03-07",slug:"_3-1-6-2021-03-07",normalizedTitle:"[3.1.6] - 2021-03-07",charIndex:343},{level:3,title:"Fixed",slug:"fixed",normalizedTitle:"fixed",charIndex:368},{level:2,title:"[3.1.5] - 2021-03-03",slug:"_3-1-5-2021-03-03",normalizedTitle:"[3.1.5] - 2021-03-03",charIndex:441},{level:3,title:"Fixed",slug:"fixed-2",normalizedTitle:"fixed",charIndex:368},{level:2,title:"[3.1.4] - 2021-03-02",slug:"_3-1-4-2021-03-02",normalizedTitle:"[3.1.4] - 2021-03-02",charIndex:619},{level:3,title:"Changed",slug:"changed",normalizedTitle:"changed",charIndex:644},{level:2,title:"[3.1.3] - 2021-02-23",slug:"_3-1-3-2021-02-23",normalizedTitle:"[3.1.3] - 2021-02-23",charIndex:797},{level:3,title:"Fixed",slug:"fixed-3",normalizedTitle:"fixed",charIndex:368},{level:2,title:"[3.1.2] - 2021-01-18",slug:"_3-1-2-2021-01-18",normalizedTitle:"[3.1.2] - 2021-01-18",charIndex:932},{level:3,title:"Fixed",slug:"fixed-4",normalizedTitle:"fixed",charIndex:368},{level:2,title:"[3.1.1] - 2021-01-18",slug:"_3-1-1-2021-01-18",normalizedTitle:"[3.1.1] - 2021-01-18",charIndex:1114},{level:3,title:"Fixed",slug:"fixed-5",normalizedTitle:"fixed",charIndex:368},{level:2,title:"[3.1.0] - 2021-01-17",slug:"_3-1-0-2021-01-17",normalizedTitle:"[3.1.0] - 2021-01-17",charIndex:1244},{level:3,title:"Note",slug:"note",normalizedTitle:"note",charIndex:1269},{level:3,title:"Added",slug:"added",normalizedTitle:"added",charIndex:1376},{level:3,title:"Fixed",slug:"fixed-6",normalizedTitle:"fixed",charIndex:368},{level:2,title:"[3.0.2] - 2021-01-10",slug:"_3-0-2-2021-01-10",normalizedTitle:"[3.0.2] - 2021-01-10",charIndex:1590},{level:3,title:"Note",slug:"note-2",normalizedTitle:"note",charIndex:1269},{level:3,title:"Fixed",slug:"fixed-7",normalizedTitle:"fixed",charIndex:368},{level:2,title:"[3.0.1] - 2020-12-28",slug:"_3-0-1-2020-12-28",normalizedTitle:"[3.0.1] - 2020-12-28",charIndex:1851},{level:3,title:"Fixed",slug:"fixed-8",normalizedTitle:"fixed",charIndex:368},{level:2,title:"[3.0.0] - 2020-12-25",slug:"_3-0-0-2020-12-25",normalizedTitle:"[3.0.0] - 2020-12-25",charIndex:1994},{level:3,title:"Added",slug:"added-2",normalizedTitle:"added",charIndex:1376},{level:3,title:"Changed",slug:"changed-2",normalizedTitle:"changed",charIndex:644},{level:3,title:"Fixed",slug:"fixed-9",normalizedTitle:"fixed",charIndex:368}],headersStr:"[3.1.6] - 2021-03-07 Fixed [3.1.5] - 2021-03-03 Fixed [3.1.4] - 2021-03-02 Changed [3.1.3] - 2021-02-23 Fixed [3.1.2] - 2021-01-18 Fixed [3.1.1] - 2021-01-18 Fixed [3.1.0] - 2021-01-17 Note Added Fixed [3.0.2] - 2021-01-10 Note Fixed [3.0.1] - 2020-12-28 Fixed [3.0.0] - 2020-12-25 Added Changed Fixed",content:"# Change Log (3.x.x)\n\nThe format is based on Keep a Changelog, and this project adheres to Semantic Versioning.\n\nWhat is a breaking change?\n\n * The original configuration file may not work, for example, if a directive item is removed or renamed.\n * It may be necessary to update the build environment, such as installing new dependencies.\n\n\n# [3.1.6] - 2021-03-07\n\n\n# Fixed\n\n * Correcting the order in which rules take effect (51c7824).\n\n\n# [3.1.5] - 2021-03-03\n\n\n# Fixed\n\n * Fixed a bug in the config script that caused dependencies to not be checked correctly (075a27e).\n\n----------------------------------------\n\n\n# [3.1.4] - 2021-03-02\n\n\n# Changed\n\n * Use safer string handling functions to avoid buffer overflows when conditions allow (177ae68).\n\n----------------------------------------\n\n\n# [3.1.3] - 2021-02-23\n\n\n# Fixed\n\n * Order of effectiveness of correction rules (857ec84).\n\n----------------------------------------\n\n\n# [3.1.2] - 2021-01-18\n\n\n# Fixed\n\n * Fixed a bug that caused module initialization to fail when the rule file was not writable (20acd27).\n\n----------------------------------------\n\n\n# [3.1.1] - 2021-01-18\n\n\n# Fixed\n\n * Compatible with lower versions of gcc (becbbe0).\n\n----------------------------------------\n\n\n# [3.1.0] - 2021-01-17\n\n\n# Note\n\n * v3.0.3 was skipped because a backward compatibility feature was added during the v3.0.3 test.\n\n\n# Added\n\n * Add debug log for easy troubleshooting (bac1d02).\n\n\n# Fixed\n\n * Fixed a segmentation fault (57d7719)。\n\n * More accurate visit frequency statistics (53d3b14).\n\n----------------------------------------\n\n\n# [3.0.2] - 2021-01-10\n\n\n# Note\n\n * Because of hotfixes performed on v3.0.1, all beta versions of v3.0.2 are voided, please do not use these beta versions.\n\n\n# Fixed\n\n * Fixed a build error on Alpine Linux (e989aa3).\n\n----------------------------------------\n\n\n# [3.0.1] - 2020-12-28\n\n\n# Fixed\n\n * Fixed a segmentation fault when inspecting cookies (8dc2b56).\n\n----------------------------------------\n\n\n# [3.0.0] - 2020-12-25\n\n\n# Added\n\n * Anti Challenge Collapsar now supports IPV6 (00fbc1c).\n\n * IP black and white lists support IPV6, and can recognize IPV6 strings such as fe80::/10 (8519b26).\n\n\n# Changed\n\n * Delete some meaningless logs (bd279e7).\n\n * Friendly error alerts (d1185b2 & f2b617d). Warnings or error reporting when IP addresses in the rule file are invalid or IP address blocks overlap (does not detect all overlaps).\n\n * Faster IP matching (2b9e774).\n\n\n# Fixed\n\n * Fixed a bug that caused the cookie inspection not work (87beed1).\n\n * Modify the config file to ensure that the latest module code is compiled when executing make or make modules (25f97f5). Before the fix, if only the files under inc/ changed, the latest code would not be compiled because the files under inc/ were not checked for changes.\n\n * Fixed a bug with incorrect IPV4 segment identification (73a22eb). This bug could cause the subnet mask not to be generated correctly when a rule like 192.168.0.0/10, i.e. the suffix is not a multiple of 8, appears in the rule.",normalizedContent:"# change log (3.x.x)\n\nthe format is based on keep a changelog, and this project adheres to semantic versioning.\n\nwhat is a breaking change?\n\n * the original configuration file may not work, for example, if a directive item is removed or renamed.\n * it may be necessary to update the build environment, such as installing new dependencies.\n\n\n# [3.1.6] - 2021-03-07\n\n\n# fixed\n\n * correcting the order in which rules take effect (51c7824).\n\n\n# [3.1.5] - 2021-03-03\n\n\n# fixed\n\n * fixed a bug in the config script that caused dependencies to not be checked correctly (075a27e).\n\n----------------------------------------\n\n\n# [3.1.4] - 2021-03-02\n\n\n# changed\n\n * use safer string handling functions to avoid buffer overflows when conditions allow (177ae68).\n\n----------------------------------------\n\n\n# [3.1.3] - 2021-02-23\n\n\n# fixed\n\n * order of effectiveness of correction rules (857ec84).\n\n----------------------------------------\n\n\n# [3.1.2] - 2021-01-18\n\n\n# fixed\n\n * fixed a bug that caused module initialization to fail when the rule file was not writable (20acd27).\n\n----------------------------------------\n\n\n# [3.1.1] - 2021-01-18\n\n\n# fixed\n\n * compatible with lower versions of gcc (becbbe0).\n\n----------------------------------------\n\n\n# [3.1.0] - 2021-01-17\n\n\n# note\n\n * v3.0.3 was skipped because a backward compatibility feature was added during the v3.0.3 test.\n\n\n# added\n\n * add debug log for easy troubleshooting (bac1d02).\n\n\n# fixed\n\n * fixed a segmentation fault (57d7719)。\n\n * more accurate visit frequency statistics (53d3b14).\n\n----------------------------------------\n\n\n# [3.0.2] - 2021-01-10\n\n\n# note\n\n * because of hotfixes performed on v3.0.1, all beta versions of v3.0.2 are voided, please do not use these beta versions.\n\n\n# fixed\n\n * fixed a build error on alpine linux (e989aa3).\n\n----------------------------------------\n\n\n# [3.0.1] - 2020-12-28\n\n\n# fixed\n\n * fixed a segmentation fault when inspecting cookies (8dc2b56).\n\n----------------------------------------\n\n\n# [3.0.0] - 2020-12-25\n\n\n# added\n\n * anti challenge collapsar now supports ipv6 (00fbc1c).\n\n * ip black and white lists support ipv6, and can recognize ipv6 strings such as fe80::/10 (8519b26).\n\n\n# changed\n\n * delete some meaningless logs (bd279e7).\n\n * friendly error alerts (d1185b2 & f2b617d). warnings or error reporting when ip addresses in the rule file are invalid or ip address blocks overlap (does not detect all overlaps).\n\n * faster ip matching (2b9e774).\n\n\n# fixed\n\n * fixed a bug that caused the cookie inspection not work (87beed1).\n\n * modify the config file to ensure that the latest module code is compiled when executing make or make modules (25f97f5). before the fix, if only the files under inc/ changed, the latest code would not be compiled because the files under inc/ were not checked for changes.\n\n * fixed a bug with incorrect ipv4 segment identification (73a22eb). this bug could cause the subnet mask not to be generated correctly when a rule like 192.168.0.0/10, i.e. the suffix is not a multiple of 8, appears in the rule.",charsets:{}},{title:"4.x.x",frontmatter:{title:"4.x.x",lang:"en"},regularPath:"/changes/4_x_x.html",relativePath:"changes/4_x_x.md",key:"v-0d29a8dc",path:"/changes/4_x_x.html",headers:[{level:2,title:"[4.0.0] - 2021-03-22 GMT+0800",slug:"_4-0-0-2021-03-22-gmt-0800",normalizedTitle:"[4.0.0] - 2021-03-22 gmt+0800",charIndex:343},{level:3,title:"WARNING",slug:"warning",normalizedTitle:"warning",charIndex:377},{level:3,title:"Added",slug:"added",normalizedTitle:"added",charIndex:430},{level:3,title:"Removed",slug:"removed",normalizedTitle:"removed",charIndex:511},{level:3,title:"Changed",slug:"changed",normalizedTitle:"changed",charIndex:636},{level:3,title:"Fixed",slug:"fixed",normalizedTitle:"fixed",charIndex:700}],headersStr:"[4.0.0] - 2021-03-22 GMT+0800 WARNING Added Removed Changed Fixed",content:"# Change Log (4.x.x)\n\nThe format is based on Keep a Changelog, and this project adheres to Semantic Versioning.\n\nWhat is a breaking change?\n\n * The original configuration file may not work, for example, if a directive item is removed or renamed.\n * It may be necessary to update the build environment, such as installing new dependencies.\n\n\n# [4.0.0] - 2021-03-22 GMT+0800\n\n\n# WARNING\n\nThis version contains breaking changes.\n\n\n# Added\n\n * Added some parameters to waf_mode and waf_cc_deny_limit (368db2b).\n\n\n# Removed\n\n * Abort directive: waf_mult_mount. The function of this directive has been merged into the directive waf_mode.\n\n\n# Changed\n\n * Adds some parameters to the directive waf_mode.\n\n\n# Fixed\n\n * Fixed an error in the name of the built-in variable waf_rule_details, which was set to waf_rule_deatails in a previous version of the code.\n\n * No more superfluous inspections.\n\n * Completely resolve compatibility issues with the ngx_http_rewrite_module.",normalizedContent:"# change log (4.x.x)\n\nthe format is based on keep a changelog, and this project adheres to semantic versioning.\n\nwhat is a breaking change?\n\n * the original configuration file may not work, for example, if a directive item is removed or renamed.\n * it may be necessary to update the build environment, such as installing new dependencies.\n\n\n# [4.0.0] - 2021-03-22 gmt+0800\n\n\n# warning\n\nthis version contains breaking changes.\n\n\n# added\n\n * added some parameters to waf_mode and waf_cc_deny_limit (368db2b).\n\n\n# removed\n\n * abort directive: waf_mult_mount. the function of this directive has been merged into the directive waf_mode.\n\n\n# changed\n\n * adds some parameters to the directive waf_mode.\n\n\n# fixed\n\n * fixed an error in the name of the built-in variable waf_rule_details, which was set to waf_rule_deatails in a previous version of the code.\n\n * no more superfluous inspections.\n\n * completely resolve compatibility issues with the ngx_http_rewrite_module.",charsets:{}},{title:"5.x.x",frontmatter:{title:"5.x.x",lang:"en"},regularPath:"/changes/5_x_x.html",relativePath:"changes/5_x_x.md",key:"v-3ac42abc",path:"/changes/5_x_x.html",headers:[{level:2,title:"[5.5.1] - 2021-07-16 UTC+0800",slug:"_5-5-1-2021-07-16-utc-0800",normalizedTitle:"[5.5.1] - 2021-07-16 utc+0800",charIndex:343},{level:3,title:"Fixed",slug:"fixed",normalizedTitle:"fixed",charIndex:377},{level:2,title:"[5.5.0] - 2021-06-25 UTC+0800",slug:"_5-5-0-2021-06-25-utc-0800",normalizedTitle:"[5.5.0] - 2021-06-25 utc+0800",charIndex:470},{level:3,title:"Changed",slug:"changed",normalizedTitle:"changed",charIndex:504},{level:2,title:"[5.4.2] - 2021-06-15 UTC+0800",slug:"_5-4-2-2021-06-15-utc-0800",normalizedTitle:"[5.4.2] - 2021-06-15 utc+0800",charIndex:687},{level:3,title:"Fixed",slug:"fixed-2",normalizedTitle:"fixed",charIndex:377},{level:2,title:"[5.4.1] - 2021-06-09 UTC+0800",slug:"_5-4-1-2021-06-09-utc-0800",normalizedTitle:"[5.4.1] - 2021-06-09 utc+0800",charIndex:858},{level:3,title:"Fixed",slug:"fixed-3",normalizedTitle:"fixed",charIndex:377},{level:2,title:"[5.4.0] - 2021-06-03 UTC+0800",slug:"_5-4-0-2021-06-03-utc-0800",normalizedTitle:"[5.4.0] - 2021-06-03 utc+0800",charIndex:1032},{level:3,title:"NOTE",slug:"note",normalizedTitle:"note",charIndex:1066},{level:3,title:"Added",slug:"added",normalizedTitle:"added",charIndex:1209},{level:3,title:"Changed",slug:"changed-2",normalizedTitle:"changed",charIndex:504},{level:3,title:"Fixed",slug:"fixed-4",normalizedTitle:"fixed",charIndex:377},{level:2,title:"[5.3.2] - 2021-05-28 UTC+0800",slug:"_5-3-2-2021-05-28-utc-0800",normalizedTitle:"[5.3.2] - 2021-05-28 utc+0800",charIndex:1419},{level:3,title:"Fixed",slug:"fixed-5",normalizedTitle:"fixed",charIndex:377},{level:2,title:"[5.3.1] - 2021-05-26 GMT+0800",slug:"_5-3-1-2021-05-26-gmt-0800",normalizedTitle:"[5.3.1] - 2021-05-26 gmt+0800",charIndex:1528},{level:3,title:"Fixed",slug:"fixed-6",normalizedTitle:"fixed",charIndex:377},{level:2,title:"[5.3.0] - 2021-05-16 GMT+0800",slug:"_5-3-0-2021-05-16-gmt-0800",normalizedTitle:"[5.3.0] - 2021-05-16 gmt+0800",charIndex:1706},{level:3,title:"Added",slug:"added-2",normalizedTitle:"added",charIndex:1209},{level:3,title:"Changed",slug:"changed-3",normalizedTitle:"changed",charIndex:504},{level:3,title:"Fixed",slug:"fixed-7",normalizedTitle:"fixed",charIndex:377},{level:2,title:"[5.1.2] - 2021-04-30 GMT+0800",slug:"_5-1-2-2021-04-30-gmt-0800",normalizedTitle:"[5.1.2] - 2021-04-30 gmt+0800",charIndex:2219},{level:3,title:"Added",slug:"added-3",normalizedTitle:"added",charIndex:1209},{level:2,title:"[5.1.1] - 2021-04-23 GMT+0800",slug:"_5-1-1-2021-04-23-gmt-0800",normalizedTitle:"[5.1.1] - 2021-04-23 gmt+0800",charIndex:2471},{level:3,title:"Fixed",slug:"fixed-8",normalizedTitle:"fixed",charIndex:377},{level:2,title:"[5.1.0] - 2021-04-20 GMT+0800",slug:"_5-1-0-2021-04-20-gmt-0800",normalizedTitle:"[5.1.0] - 2021-04-20 gmt+0800",charIndex:2604},{level:3,title:"Added",slug:"added-4",normalizedTitle:"added",charIndex:1209},{level:2,title:"[5.0.0] - 2021-04-07 GMT+0800",slug:"_5-0-0-2021-04-07-gmt-0800",normalizedTitle:"[5.0.0] - 2021-04-07 gmt+0800",charIndex:2997},{level:3,title:"WARNING",slug:"warning",normalizedTitle:"warning",charIndex:3031},{level:3,title:"Added",slug:"added-5",normalizedTitle:"added",charIndex:1209},{level:3,title:"Removed",slug:"removed",normalizedTitle:"removed",charIndex:3573},{level:3,title:"Changed",slug:"changed-4",normalizedTitle:"changed",charIndex:504},{level:3,title:"Fixed",slug:"fixed-9",normalizedTitle:"fixed",charIndex:377}],headersStr:"[5.5.1] - 2021-07-16 UTC+0800 Fixed [5.5.0] - 2021-06-25 UTC+0800 Changed [5.4.2] - 2021-06-15 UTC+0800 Fixed [5.4.1] - 2021-06-09 UTC+0800 Fixed [5.4.0] - 2021-06-03 UTC+0800 NOTE Added Changed Fixed [5.3.2] - 2021-05-28 UTC+0800 Fixed [5.3.1] - 2021-05-26 GMT+0800 Fixed [5.3.0] - 2021-05-16 GMT+0800 Added Changed Fixed [5.1.2] - 2021-04-30 GMT+0800 Added [5.1.1] - 2021-04-23 GMT+0800 Fixed [5.1.0] - 2021-04-20 GMT+0800 Added [5.0.0] - 2021-04-07 GMT+0800 WARNING Added Removed Changed Fixed",content:"# Change Log (5.x.x)\n\nThe format is based on Keep a Changelog, and this project adheres to Semantic Versioning.\n\nWhat is a breaking change?\n\n * The original configuration file may not work, for example, if a directive item is removed or renamed.\n * It may be necessary to update the build environment, such as installing new dependencies.\n\n\n# [5.5.1] - 2021-07-16 UTC+0800\n\n\n# Fixed\n\n * Segmentation fault.\n\n * Memory leak.\n\n----------------------------------------\n\n\n# [5.5.0] - 2021-06-25 UTC+0800\n\n\n# Changed\n\n * Because of high false positives, libinjection-based XSS attack detection has been disabled in working modes STD and DYNAMIC.\n\n----------------------------------------\n\n\n# [5.4.2] - 2021-06-15 UTC+0800\n\n\n# Fixed\n\n * When POST inspection is enabled, POST requests are not logged in the access log.\n\n----------------------------------------\n\n\n# [5.4.1] - 2021-06-09 UTC+0800\n\n\n# Fixed\n\n * The value of built-in variables may be wrong when the directive error_page is used.\n\n----------------------------------------\n\n\n# [5.4.0] - 2021-06-03 UTC+0800\n\n\n# NOTE\n\nThe clone link for libinjection has been replaced in this release. The new link is https://github.com/libinjection/libinjection.git.\n\n\n# Added\n\n * Anti XSS (powered by libinjection).\n\n\n# Changed\n\n * Add debug log related to built-in variable calculation.\n\n\n# Fixed\n\n * POST inspection is not working.\n\n----------------------------------------\n\n\n# [5.3.2] - 2021-05-28 UTC+0800\n\n\n# Fixed\n\n * Memory corruption.\n\n----------------------------------------\n\n\n# [5.3.1] - 2021-05-26 GMT+0800\n\n\n# Fixed\n\n * Sometimes the module does not compile even if the dependencies are installed correctly.\n\n----------------------------------------\n\n\n# [5.3.0] - 2021-05-16 GMT+0800\n\n\n# Added\n\n * New directive: waf_under_attack, which can be used when the site is under attack.\n\n * New directive: waf_http_status, which sets the HTTP status code returned when a request is blocked.\n\n * New built-in variable: $waf_blocking_log, not an empty string when the request is blocked for its value.\n\n\n# Changed\n\n * Update default rules.\n\n\n# Fixed\n\n * CC protection sometimes not work.\n\n * Cookie inspection sometimes not work.\n\n----------------------------------------\n\n\n# [5.1.2] - 2021-04-30 GMT+0800\n\n\n# Added\n\n * Support for detecting SQL injection (powered by libinjection). This feature can be enabled by enabling the mode LIB-INJECTION, see the documentation for details.\n\n----------------------------------------\n\n\n# [5.1.1] - 2021-04-23 GMT+0800\n\n\n# Fixed\n\n * URL and Referer whitelist are not working.\n\n----------------------------------------\n\n\n# [5.1.0] - 2021-04-20 GMT+0800\n\n\n# Added\n\n * New built-in variable waf_log, which is not an empty string when this module has performed a inspection, but an empty string otherwise, mainly used in the directive access_log.\n\n * New built-in variable waf_spend, which records the time (in milliseconds) taken by this module to perform the inspection.\n\n----------------------------------------\n\n\n# [5.0.0] - 2021-04-07 GMT+0800\n\n\n# WARNING\n\nThis version contains breaking changes.\n\n\n# Added\n\n * A new mode CACHE has been added, enabling this mode will cache the results of each inspection to improve performance.\n\n * New configuration waf_cache has been added to set parameters related to cache.\n\n * Added directive waf_cc_deny to set CC protection related parameters.\n\n * New directive waf_priority has been added to set the priority of all checks except for POST checks.\n\n * The Retry-Afte response header is appended when the CC protection returns a 503 status code.\n\n\n# Removed\n\n * The directive waf_cc_deny_limit is deprecated and replaced with the new directive waf_cc_deny.\n\n\n# Changed\n\n * Swaps the default priority of CC protection and IP whitelist inspection.\n\n\n# Fixed\n\n * Fixed a segmentation fault when the number of worker processes is greater than one.\n\n * Fixed a bug where CC protection statistics were sometimes inaccurate.",normalizedContent:"# change log (5.x.x)\n\nthe format is based on keep a changelog, and this project adheres to semantic versioning.\n\nwhat is a breaking change?\n\n * the original configuration file may not work, for example, if a directive item is removed or renamed.\n * it may be necessary to update the build environment, such as installing new dependencies.\n\n\n# [5.5.1] - 2021-07-16 utc+0800\n\n\n# fixed\n\n * segmentation fault.\n\n * memory leak.\n\n----------------------------------------\n\n\n# [5.5.0] - 2021-06-25 utc+0800\n\n\n# changed\n\n * because of high false positives, libinjection-based xss attack detection has been disabled in working modes std and dynamic.\n\n----------------------------------------\n\n\n# [5.4.2] - 2021-06-15 utc+0800\n\n\n# fixed\n\n * when post inspection is enabled, post requests are not logged in the access log.\n\n----------------------------------------\n\n\n# [5.4.1] - 2021-06-09 utc+0800\n\n\n# fixed\n\n * the value of built-in variables may be wrong when the directive error_page is used.\n\n----------------------------------------\n\n\n# [5.4.0] - 2021-06-03 utc+0800\n\n\n# note\n\nthe clone link for libinjection has been replaced in this release. the new link is https://github.com/libinjection/libinjection.git.\n\n\n# added\n\n * anti xss (powered by libinjection).\n\n\n# changed\n\n * add debug log related to built-in variable calculation.\n\n\n# fixed\n\n * post inspection is not working.\n\n----------------------------------------\n\n\n# [5.3.2] - 2021-05-28 utc+0800\n\n\n# fixed\n\n * memory corruption.\n\n----------------------------------------\n\n\n# [5.3.1] - 2021-05-26 gmt+0800\n\n\n# fixed\n\n * sometimes the module does not compile even if the dependencies are installed correctly.\n\n----------------------------------------\n\n\n# [5.3.0] - 2021-05-16 gmt+0800\n\n\n# added\n\n * new directive: waf_under_attack, which can be used when the site is under attack.\n\n * new directive: waf_http_status, which sets the http status code returned when a request is blocked.\n\n * new built-in variable: $waf_blocking_log, not an empty string when the request is blocked for its value.\n\n\n# changed\n\n * update default rules.\n\n\n# fixed\n\n * cc protection sometimes not work.\n\n * cookie inspection sometimes not work.\n\n----------------------------------------\n\n\n# [5.1.2] - 2021-04-30 gmt+0800\n\n\n# added\n\n * support for detecting sql injection (powered by libinjection). this feature can be enabled by enabling the mode lib-injection, see the documentation for details.\n\n----------------------------------------\n\n\n# [5.1.1] - 2021-04-23 gmt+0800\n\n\n# fixed\n\n * url and referer whitelist are not working.\n\n----------------------------------------\n\n\n# [5.1.0] - 2021-04-20 gmt+0800\n\n\n# added\n\n * new built-in variable waf_log, which is not an empty string when this module has performed a inspection, but an empty string otherwise, mainly used in the directive access_log.\n\n * new built-in variable waf_spend, which records the time (in milliseconds) taken by this module to perform the inspection.\n\n----------------------------------------\n\n\n# [5.0.0] - 2021-04-07 gmt+0800\n\n\n# warning\n\nthis version contains breaking changes.\n\n\n# added\n\n * a new mode cache has been added, enabling this mode will cache the results of each inspection to improve performance.\n\n * new configuration waf_cache has been added to set parameters related to cache.\n\n * added directive waf_cc_deny to set cc protection related parameters.\n\n * new directive waf_priority has been added to set the priority of all checks except for post checks.\n\n * the retry-afte response header is appended when the cc protection returns a 503 status code.\n\n\n# removed\n\n * the directive waf_cc_deny_limit is deprecated and replaced with the new directive waf_cc_deny.\n\n\n# changed\n\n * swaps the default priority of cc protection and ip whitelist inspection.\n\n\n# fixed\n\n * fixed a segmentation fault when the number of worker processes is greater than one.\n\n * fixed a bug where cc protection statistics were sometimes inaccurate.",charsets:{}},{title:"6.0.x",frontmatter:{title:"6.0.x",lang:"en"},regularPath:"/changes/6_0_x.html",relativePath:"changes/6_0_x.md",key:"v-0374659c",path:"/changes/6_0_x.html",headers:[{level:2,title:"[6.0.3] - 2021-08-02 UTC+0800",slug:"_6-0-3-2021-08-02-utc-0800",normalizedTitle:"[6.0.3] - 2021-08-02 utc+0800",charIndex:343},{level:3,title:"Fixed",slug:"fixed",normalizedTitle:"fixed",charIndex:377},{level:2,title:"[6.0.2] - 2021-08-01 UTC+0800",slug:"_6-0-2-2021-08-01-utc-0800",normalizedTitle:"[6.0.2] - 2021-08-01 utc+0800",charIndex:519},{level:3,title:"Fixed",slug:"fixed-2",normalizedTitle:"fixed",charIndex:377},{level:2,title:"[6.0.1] - 2021-07-30 UTC+0800",slug:"_6-0-1-2021-07-30-utc-0800",normalizedTitle:"[6.0.1] - 2021-07-30 utc+0800",charIndex:705},{level:3,title:"Deprecated",slug:"deprecated",normalizedTitle:"deprecated",charIndex:739},{level:3,title:"Changed",slug:"changed",normalizedTitle:"changed",charIndex:953},{level:3,title:"Fixed",slug:"fixed-3",normalizedTitle:"fixed",charIndex:377},{level:2,title:"[6.0.0] - 2021-07-21 UTC+0800",slug:"_6-0-0-2021-07-21-utc-0800",normalizedTitle:"[6.0.0] - 2021-07-21 utc+0800",charIndex:1141},{level:3,title:"NOTE",slug:"note",normalizedTitle:"note",charIndex:1175},{level:3,title:"Upgrade from 5.x.x to 6.x.x",slug:"upgrade-from-5-x-x-to-6-x-x",normalizedTitle:"upgrade from 5.x.x to 6.x.x",charIndex:1391},{level:3,title:"Pre-built modules",slug:"pre-built-modules",normalizedTitle:"pre-built modules",charIndex:1615},{level:3,title:"Added",slug:"added",normalizedTitle:"added",charIndex:2605},{level:3,title:"Removed",slug:"removed",normalizedTitle:"removed",charIndex:2684},{level:3,title:"Changed",slug:"changed-2",normalizedTitle:"changed",charIndex:953}],headersStr:"[6.0.3] - 2021-08-02 UTC+0800 Fixed [6.0.2] - 2021-08-01 UTC+0800 Fixed [6.0.1] - 2021-07-30 UTC+0800 Deprecated Changed Fixed [6.0.0] - 2021-07-21 UTC+0800 NOTE Upgrade from 5.x.x to 6.x.x Pre-built modules Added Removed Changed",content:"# Change Log (6.0.x)\n\nThe format is based on Keep a Changelog, and this project adheres to Semantic Versioning.\n\nWhat is a breaking change?\n\n * The original configuration file may not work, for example, if a directive item is removed or renamed.\n * It may be necessary to update the build environment, such as installing new dependencies.\n\n\n# [6.0.3] - 2021-08-02 UTC+0800\n\n\n# Fixed\n\n * A segmentation fault may be raised when releasing resources from the virtual machine.\n\n----------------------------------------\n\n\n# [6.0.2] - 2021-08-01 UTC+0800\n\n\n# Fixed\n\n * The whitelist of URL and Referer in the upper-level configuration cannot be inherited properly.\n\n----------------------------------------\n\n\n# [6.0.1] - 2021-07-30 UTC+0800\n\n\n# Deprecated\n\n * Deprecates the parameters interval and percent of the directive waf_cache, but does not remove them, only that they no longer have any effect. These two parameters will be removed in the future.\n\n\n# Changed\n\n * Improved performance of CC protection.\n\n\n# Fixed\n\n * Extreme cases may waste a lot of memory. Thanks to @RekGRpth for their help.\n\n----------------------------------------\n\n\n# [6.0.0] - 2021-07-21 UTC+0800\n\n\n# NOTE\n\n * This release contains some breaking changes.\n\n * Advanced rules have a high performance cost because the principle is to compile the rules into a series of instructions that are then executed by the VM.\n\n\n# Upgrade from 5.x.x to 6.x.x\n\n 1. Create a new empty file named advanced in the rules directory.\n\n 2. If the directive waf_priority is used, you can delete it or modify it according to the directive in the documentation.\n\n\n# Pre-built modules\n\nWe now provide pre-compiled modules that can be used as long as the following requirements are met.\n\n 1. The version of nginx must be the latest stable or mainline version.\n 2. The C standard library implementation must be the GNU implementation or the MUSL implementation.\n\n> The download script will automatically check if the second condition is met.\n\nYou can execute assets/download.sh to download the corresponding version of the module and save it to the current directory. Here is the use case.\n\n# nginx-stable ngx_waf-stable\nsh assets/download stable stable\n\n# nginx-mainline ngx_waf-stable\nsh assets/download mainline stable\n\n# nginx-stable ngx_waf-beta\nsh assets/download stable beta\n\n# nginx-mainline ngx_waf-beta\nsh assets/download mainline beta\n\n\n> Each update takes about an hour and a half to compile the module, so it is recommended that you download the updated module more than two hours after the update, otherwise you may download the old module.\n\n\n# Added\n\n * Advanced rules are supported, see the documentation for details.\n\n\n# Removed\n\n * Remove mode COMPAT, no longer fully compatible with ngx_http_rewrite_module.\n\n\n# Changed\n\n * Updated the directive waf_priority, see the documentation for details.\n\n * You can now use all the directives of this module in blocks http, server and location",normalizedContent:"# change log (6.0.x)\n\nthe format is based on keep a changelog, and this project adheres to semantic versioning.\n\nwhat is a breaking change?\n\n * the original configuration file may not work, for example, if a directive item is removed or renamed.\n * it may be necessary to update the build environment, such as installing new dependencies.\n\n\n# [6.0.3] - 2021-08-02 utc+0800\n\n\n# fixed\n\n * a segmentation fault may be raised when releasing resources from the virtual machine.\n\n----------------------------------------\n\n\n# [6.0.2] - 2021-08-01 utc+0800\n\n\n# fixed\n\n * the whitelist of url and referer in the upper-level configuration cannot be inherited properly.\n\n----------------------------------------\n\n\n# [6.0.1] - 2021-07-30 utc+0800\n\n\n# deprecated\n\n * deprecates the parameters interval and percent of the directive waf_cache, but does not remove them, only that they no longer have any effect. these two parameters will be removed in the future.\n\n\n# changed\n\n * improved performance of cc protection.\n\n\n# fixed\n\n * extreme cases may waste a lot of memory. thanks to @rekgrpth for their help.\n\n----------------------------------------\n\n\n# [6.0.0] - 2021-07-21 utc+0800\n\n\n# note\n\n * this release contains some breaking changes.\n\n * advanced rules have a high performance cost because the principle is to compile the rules into a series of instructions that are then executed by the vm.\n\n\n# upgrade from 5.x.x to 6.x.x\n\n 1. create a new empty file named advanced in the rules directory.\n\n 2. if the directive waf_priority is used, you can delete it or modify it according to the directive in the documentation.\n\n\n# pre-built modules\n\nwe now provide pre-compiled modules that can be used as long as the following requirements are met.\n\n 1. the version of nginx must be the latest stable or mainline version.\n 2. the c standard library implementation must be the gnu implementation or the musl implementation.\n\n> the download script will automatically check if the second condition is met.\n\nyou can execute assets/download.sh to download the corresponding version of the module and save it to the current directory. here is the use case.\n\n# nginx-stable ngx_waf-stable\nsh assets/download stable stable\n\n# nginx-mainline ngx_waf-stable\nsh assets/download mainline stable\n\n# nginx-stable ngx_waf-beta\nsh assets/download stable beta\n\n# nginx-mainline ngx_waf-beta\nsh assets/download mainline beta\n\n\n> each update takes about an hour and a half to compile the module, so it is recommended that you download the updated module more than two hours after the update, otherwise you may download the old module.\n\n\n# added\n\n * advanced rules are supported, see the documentation for details.\n\n\n# removed\n\n * remove mode compat, no longer fully compatible with ngx_http_rewrite_module.\n\n\n# changed\n\n * updated the directive waf_priority, see the documentation for details.\n\n * you can now use all the directives of this module in blocks http, server and location",charsets:{}},{title:"Long-term Support (LTS)",frontmatter:{title:"Long-term Support (LTS)",lang:"en"},regularPath:"/changes/lts.html",relativePath:"changes/lts.md",key:"v-662c0cfc",path:"/changes/lts.html",headers:[{level:2,title:"[Unreleased]",slug:"unreleased",normalizedTitle:"[unreleased]",charIndex:243},{level:3,title:"Added",slug:"added",normalizedTitle:"added",charIndex:260},{level:3,title:"Removed",slug:"removed",normalizedTitle:"removed",charIndex:270},{level:3,title:"Changed",slug:"changed",normalizedTitle:"changed",charIndex:282},{level:3,title:"Fixed",slug:"fixed",normalizedTitle:"fixed",charIndex:294},{level:2,title:"[6.1.10] - 2025-01-25 UTC+0800",slug:"_6-1-10-2025-01-25-utc-0800",normalizedTitle:"[6.1.10] - 2025-01-25 utc+0800",charIndex:346},{level:3,title:"Fixed",slug:"fixed-2",normalizedTitle:"fixed",charIndex:294},{level:2,title:"[6.1.9] - 2022-07-09 UTC+0800",slug:"_6-1-9-2022-07-09-utc-0800",normalizedTitle:"[6.1.9] - 2022-07-09 utc+0800",charIndex:503},{level:3,title:"Fixed",slug:"fixed-3",normalizedTitle:"fixed",charIndex:294},{level:2,title:"[6.1.8] - 2022-01-07 UTC+0800",slug:"_6-1-8-2022-01-07-utc-0800",normalizedTitle:"[6.1.8] - 2022-01-07 utc+0800",charIndex:622},{level:3,title:"Fixed",slug:"fixed-4",normalizedTitle:"fixed",charIndex:294},{level:2,title:"[6.1.7] - 2021-12-05 UTC+0800",slug:"_6-1-7-2021-12-05-utc-0800",normalizedTitle:"[6.1.7] - 2021-12-05 utc+0800",charIndex:725},{level:3,title:"Fixed",slug:"fixed-5",normalizedTitle:"fixed",charIndex:294},{level:2,title:"[6.1.6] - 2021-10-10 UTC+0800",slug:"_6-1-6-2021-10-10-utc-0800",normalizedTitle:"[6.1.6] - 2021-10-10 utc+0800",charIndex:909},{level:3,title:"Fixed",slug:"fixed-6",normalizedTitle:"fixed",charIndex:294},{level:2,title:"[6.1.5] - 2021-09-29 UTC+0800",slug:"_6-1-5-2021-09-29-utc-0800",normalizedTitle:"[6.1.5] - 2021-09-29 utc+0800",charIndex:1193},{level:3,title:"Fixed",slug:"fixed-7",normalizedTitle:"fixed",charIndex:294},{level:2,title:"[6.1.4] - 2021-08-27 UTC+0800",slug:"_6-1-4-2021-08-27-utc-0800",normalizedTitle:"[6.1.4] - 2021-08-27 utc+0800",charIndex:1379},{level:3,title:"Fixed",slug:"fixed-8",normalizedTitle:"fixed",charIndex:294},{level:2,title:"[6.1.3] - 2021-08-23 UTC+0800",slug:"_6-1-3-2021-08-23-utc-0800",normalizedTitle:"[6.1.3] - 2021-08-23 utc+0800",charIndex:1482},{level:3,title:"Added",slug:"added-2",normalizedTitle:"added",charIndex:260},{level:3,title:"Fixed",slug:"fixed-9",normalizedTitle:"fixed",charIndex:294},{level:2,title:"[6.1.2] - 2021-08-11 UTC+0800",slug:"_6-1-2-2021-08-11-utc-0800",normalizedTitle:"[6.1.2] - 2021-08-11 utc+0800",charIndex:1743},{level:3,title:"Fixed",slug:"fixed-10",normalizedTitle:"fixed",charIndex:294},{level:2,title:"[6.1.1] - 2021-08-04 UTC+0800",slug:"_6-1-1-2021-08-04-utc-0800",normalizedTitle:"[6.1.1] - 2021-08-04 utc+0800",charIndex:1968},{level:3,title:"Fixed",slug:"fixed-11",normalizedTitle:"fixed",charIndex:294},{level:2,title:"[6.1.0] - 2021-08-03 UTC+0800",slug:"_6-1-0-2021-08-03-utc-0800",normalizedTitle:"[6.1.0] - 2021-08-03 utc+0800",charIndex:2117},{level:3,title:"Added",slug:"added-3",normalizedTitle:"added",charIndex:260}],headersStr:"[Unreleased] Added Removed Changed Fixed [6.1.10] - 2025-01-25 UTC+0800 Fixed [6.1.9] - 2022-07-09 UTC+0800 Fixed [6.1.8] - 2022-01-07 UTC+0800 Fixed [6.1.7] - 2021-12-05 UTC+0800 Fixed [6.1.6] - 2021-10-10 UTC+0800 Fixed [6.1.5] - 2021-09-29 UTC+0800 Fixed [6.1.4] - 2021-08-27 UTC+0800 Fixed [6.1.3] - 2021-08-23 UTC+0800 Added Fixed [6.1.2] - 2021-08-11 UTC+0800 Fixed [6.1.1] - 2021-08-04 UTC+0800 Fixed [6.1.0] - 2021-08-03 UTC+0800 Added",content:"# Change Log (LTS)\n\nThe format is based on Keep a Changelog, and this project adheres to Semantic Versioning.\n\nWhat is a breaking change?\n\n * The old configuration file may not work, for example, if a directive item is removed or renamed.\n\n\n# [Unreleased]\n\n\n# Added\n\n\n# Removed\n\n\n# Changed\n\n\n# Fixed\n\n----------------------------------------\n\n\n# [6.1.10] - 2025-01-25 UTC+0800\n\n\n# Fixed\n\n * Fix compile error caused by changed build process of libinjection\n\n----------------------------------------\n\n\n# [6.1.9] - 2022-07-09 UTC+0800\n\n\n# Fixed\n\n * compatible with nginx-1.23.0\n\n----------------------------------------\n\n\n# [6.1.8] - 2022-01-07 UTC+0800\n\n\n# Fixed\n\n * Memory leak.\n\n----------------------------------------\n\n\n# [6.1.7] - 2021-12-05 UTC+0800\n\n\n# Fixed\n\n * All parameters of the directive waf_mode corresponding to the request method are not working.\n\n----------------------------------------\n\n\n# [6.1.6] - 2021-10-10 UTC+0800\n\n\n# Fixed\n\n * Sometimes the connection is closed prematurely.\n\n * Sometimes the request body is read incompletely.\n\n * Failed to inherit Referer blacklist different contexts.\n\n * Fixed a default rule of URL.\n\n----------------------------------------\n\n\n# [6.1.5] - 2021-09-29 UTC+0800\n\n\n# Fixed\n\n * All inspections are incorrectly skipped when the directive rewrite causes an internal redirect.\n\n----------------------------------------\n\n\n# [6.1.4] - 2021-08-27 UTC+0800\n\n\n# Fixed\n\n * Memory leak.\n\n----------------------------------------\n\n\n# [6.1.3] - 2021-08-23 UTC+0800\n\n\n# Added\n\n * No longer generates additional response headers when CC protection returns the status code 444.\n\n\n# Fixed\n\n * The directive waf_http_status could not be merged correctly.\n\n----------------------------------------\n\n\n# [6.1.2] - 2021-08-11 UTC+0800\n\n\n# Fixed\n\n * Failed to parse 0.0.0.0/0 correctly when handling IP black and white lists.\n\n * Compatible with environments that do not support IPV6.\n\n----------------------------------------\n\n\n# [6.1.1] - 2021-08-04 UTC+0800\n\n\n# Fixed\n\n * Under Attack Mode (UAM) sometimes does not work correctly.\n\n----------------------------------------\n\n\n# [6.1.0] - 2021-08-03 UTC+0800\n\n\n# Added\n\n * Added three options to the directive waf_mode.\n   * ADV: Enable the advanced rules.\n   * CMN-METH: Equivalent to head get post.\n   * ALL-METH: Any http request method will start checking.",normalizedContent:"# change log (lts)\n\nthe format is based on keep a changelog, and this project adheres to semantic versioning.\n\nwhat is a breaking change?\n\n * the old configuration file may not work, for example, if a directive item is removed or renamed.\n\n\n# [unreleased]\n\n\n# added\n\n\n# removed\n\n\n# changed\n\n\n# fixed\n\n----------------------------------------\n\n\n# [6.1.10] - 2025-01-25 utc+0800\n\n\n# fixed\n\n * fix compile error caused by changed build process of libinjection\n\n----------------------------------------\n\n\n# [6.1.9] - 2022-07-09 utc+0800\n\n\n# fixed\n\n * compatible with nginx-1.23.0\n\n----------------------------------------\n\n\n# [6.1.8] - 2022-01-07 utc+0800\n\n\n# fixed\n\n * memory leak.\n\n----------------------------------------\n\n\n# [6.1.7] - 2021-12-05 utc+0800\n\n\n# fixed\n\n * all parameters of the directive waf_mode corresponding to the request method are not working.\n\n----------------------------------------\n\n\n# [6.1.6] - 2021-10-10 utc+0800\n\n\n# fixed\n\n * sometimes the connection is closed prematurely.\n\n * sometimes the request body is read incompletely.\n\n * failed to inherit referer blacklist different contexts.\n\n * fixed a default rule of url.\n\n----------------------------------------\n\n\n# [6.1.5] - 2021-09-29 utc+0800\n\n\n# fixed\n\n * all inspections are incorrectly skipped when the directive rewrite causes an internal redirect.\n\n----------------------------------------\n\n\n# [6.1.4] - 2021-08-27 utc+0800\n\n\n# fixed\n\n * memory leak.\n\n----------------------------------------\n\n\n# [6.1.3] - 2021-08-23 utc+0800\n\n\n# added\n\n * no longer generates additional response headers when cc protection returns the status code 444.\n\n\n# fixed\n\n * the directive waf_http_status could not be merged correctly.\n\n----------------------------------------\n\n\n# [6.1.2] - 2021-08-11 utc+0800\n\n\n# fixed\n\n * failed to parse 0.0.0.0/0 correctly when handling ip black and white lists.\n\n * compatible with environments that do not support ipv6.\n\n----------------------------------------\n\n\n# [6.1.1] - 2021-08-04 utc+0800\n\n\n# fixed\n\n * under attack mode (uam) sometimes does not work correctly.\n\n----------------------------------------\n\n\n# [6.1.0] - 2021-08-03 utc+0800\n\n\n# added\n\n * added three options to the directive waf_mode.\n   * adv: enable the advanced rules.\n   * cmn-meth: equivalent to head get post.\n   * all-meth: any http request method will start checking.",charsets:{}},{title:"Overview",frontmatter:{title:"Overview",lang:"en"},regularPath:"/changes/overview.html",relativePath:"changes/overview.md",key:"v-fa95bd84",path:"/changes/overview.html",headers:[{level:2,title:"Long-term Support (LTS)",slug:"long-term-support-lts",normalizedTitle:"long-term support (lts)",charIndex:53},{level:2,title:"Current",slug:"current",normalizedTitle:"current",charIndex:81},{level:2,title:"Legacy versions",slug:"legacy-versions",normalizedTitle:"legacy versions",charIndex:479}],headersStr:"Long-term Support (LTS) Current Legacy versions",content:"# Overview\n\nThis project maintains two release flow, Long-term Support (LTS) and Current.\n\n\n# Long-term Support (LTS)\n\nLTS is maintained for at least one year, and only bugs will be fixed during the maintenance period, especially serious bugs, and some minor bugs may not be fixed.\n\n\n# Current\n\nBugs are also fixed in the Current version, but the Current version includes all updates, such as new features, feature changes, feature deletions, performance optimizations, etc.\n\n\n# Legacy versions\n\n * 6.0.x\n * 5.x.x\n * 4.x.x\n * 3.x.x\n * 2.x.x",normalizedContent:"# overview\n\nthis project maintains two release flow, long-term support (lts) and current.\n\n\n# long-term support (lts)\n\nlts is maintained for at least one year, and only bugs will be fixed during the maintenance period, especially serious bugs, and some minor bugs may not be fixed.\n\n\n# current\n\nbugs are also fixed in the current version, but the current version includes all updates, such as new features, feature changes, feature deletions, performance optimizations, etc.\n\n\n# legacy versions\n\n * 6.0.x\n * 5.x.x\n * 4.x.x\n * 3.x.x\n * 2.x.x",charsets:{}},{title:"Current",frontmatter:{title:"Current",lang:"en"},regularPath:"/changes/current.html",relativePath:"changes/current.md",key:"v-be96f388",path:"/changes/current.html",headers:[{level:2,title:"[Unreleased]",slug:"unreleased",normalizedTitle:"[unreleased]",charIndex:247},{level:3,title:"Added",slug:"added",normalizedTitle:"added",charIndex:264},{level:3,title:"Removed",slug:"removed",normalizedTitle:"removed",charIndex:274},{level:3,title:"Changed",slug:"changed",normalizedTitle:"changed",charIndex:286},{level:3,title:"Fixed",slug:"fixed",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[10.1.2] - 2022-07-09 UTC+0800",slug:"_10-1-2-2022-07-09-utc-0800",normalizedTitle:"[10.1.2] - 2022-07-09 utc+0800",charIndex:350},{level:3,title:"Fixed",slug:"fixed-2",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[10.1.1] - 2022-01-07 UTC+0800",slug:"_10-1-1-2022-01-07-utc-0800",normalizedTitle:"[10.1.1] - 2022-01-07 utc+0800",charIndex:470},{level:3,title:"Added",slug:"added-2",normalizedTitle:"added",charIndex:264},{level:3,title:"Fixed",slug:"fixed-3",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[10.1.0] - 2021-12-14 UTC+0800",slug:"_10-1-0-2021-12-14-utc-0800",normalizedTitle:"[10.1.0] - 2021-12-14 utc+0800",charIndex:686},{level:3,title:"Added",slug:"added-3",normalizedTitle:"added",charIndex:264},{level:3,title:"Fixed",slug:"fixed-4",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[10.0.1] - 2021-12-05 UTC+0800",slug:"_10-0-1-2021-12-05-utc-0800",normalizedTitle:"[10.0.1] - 2021-12-05 utc+0800",charIndex:1216},{level:3,title:"Added",slug:"added-4",normalizedTitle:"added",charIndex:264},{level:3,title:"Fixed",slug:"fixed-5",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[10.0.0] - 2021-11-30 UTC+0800",slug:"_10-0-0-2021-11-30-utc-0800",normalizedTitle:"[10.0.0] - 2021-11-30 utc+0800",charIndex:1565},{level:3,title:"Added",slug:"added-5",normalizedTitle:"added",charIndex:264},{level:3,title:"Removed",slug:"removed-2",normalizedTitle:"removed",charIndex:274},{level:3,title:"Changed",slug:"changed-2",normalizedTitle:"changed",charIndex:286},{level:2,title:"[9.0.6] - 2021-10-10 UTC+0800",slug:"_9-0-6-2021-10-10-utc-0800",normalizedTitle:"[9.0.6] - 2021-10-10 utc+0800",charIndex:3529},{level:3,title:"Fixed",slug:"fixed-6",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[9.0.5] - 2021-10-09 UTC+0800",slug:"_9-0-5-2021-10-09-utc-0800",normalizedTitle:"[9.0.5] - 2021-10-09 utc+0800",charIndex:3677},{level:3,title:"New test suite",slug:"new-test-suite",normalizedTitle:"new test suite",charIndex:3711},{level:3,title:"Changed",slug:"changed-3",normalizedTitle:"changed",charIndex:286},{level:3,title:"Fixed",slug:"fixed-7",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[9.0.4] - 2021-09-29 UTC+0800",slug:"_9-0-4-2021-09-29-utc-0800",normalizedTitle:"[9.0.4] - 2021-09-29 utc+0800",charIndex:4762},{level:3,title:"Fixed",slug:"fixed-8",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[9.0.3] - 2021-09-28 UTC+0800",slug:"_9-0-3-2021-09-28-utc-0800",normalizedTitle:"[9.0.3] - 2021-09-28 utc+0800",charIndex:4948},{level:3,title:"Changed",slug:"changed-4",normalizedTitle:"changed",charIndex:286},{level:3,title:"Fixed",slug:"fixed-9",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[9.0.2] - 2021-09-25 UTC+0800",slug:"_9-0-2-2021-09-25-utc-0800",normalizedTitle:"[9.0.2] - 2021-09-25 utc+0800",charIndex:5107},{level:3,title:"Fixed",slug:"fixed-10",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[9.0.1] - 2021-09-24 UTC+0800",slug:"_9-0-1-2021-09-24-utc-0800",normalizedTitle:"[9.0.1] - 2021-09-24 utc+0800",charIndex:5270},{level:3,title:"Fixed",slug:"fixed-11",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[9.0.0] - 2021-09-23 UTC+0800",slug:"_9-0-0-2021-09-23-utc-0800",normalizedTitle:"[9.0.0] - 2021-09-23 utc+0800",charIndex:5397},{level:3,title:"NOTE",slug:"note",normalizedTitle:"note",charIndex:5431},{level:3,title:"Added",slug:"added-6",normalizedTitle:"added",charIndex:264},{level:3,title:"Removed",slug:"removed-3",normalizedTitle:"removed",charIndex:274},{level:3,title:"Fixes",slug:"fixes",normalizedTitle:"fixes",charIndex:5964},{level:2,title:"[8.0.3] - 2021-08-27 UTC+0800",slug:"_8-0-3-2021-08-27-utc-0800",normalizedTitle:"[8.0.3] - 2021-08-27 utc+0800",charIndex:6188},{level:3,title:"Fixed",slug:"fixed-12",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[8.0.2] - 2021-08-27 UTC+0800",slug:"_8-0-2-2021-08-27-utc-0800",normalizedTitle:"[8.0.2] - 2021-08-27 utc+0800",charIndex:6421},{level:3,title:"Fixed",slug:"fixed-13",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[8.0.1] - 2021-08-23 UTC+0800",slug:"_8-0-1-2021-08-23-utc-0800",normalizedTitle:"[8.0.1] - 2021-08-23 utc+0800",charIndex:6870},{level:3,title:"Added",slug:"added-7",normalizedTitle:"added",charIndex:264},{level:3,title:"Fixed",slug:"fixed-14",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[8.0.0] - 2021-08-21 UTC+0800",slug:"_8-0-0-2021-08-21-utc-0800",normalizedTitle:"[8.0.0] - 2021-08-21 utc+0800",charIndex:7180},{level:3,title:"NOTE",slug:"note-2",normalizedTitle:"note",charIndex:5431},{level:3,title:"Added",slug:"added-8",normalizedTitle:"added",charIndex:264},{level:3,title:"Changed",slug:"changed-5",normalizedTitle:"changed",charIndex:286},{level:3,title:"Removed",slug:"removed-4",normalizedTitle:"removed",charIndex:274},{level:2,title:"[7.1.0] - 2021-08-16 UTC+0800",slug:"_7-1-0-2021-08-16-utc-0800",normalizedTitle:"[7.1.0] - 2021-08-16 utc+0800",charIndex:8480},{level:3,title:"Added",slug:"added-9",normalizedTitle:"added",charIndex:264},{level:2,title:"[7.0.1] - 2021-08-11 UTC+0800",slug:"_7-0-1-2021-08-11-utc-0800",normalizedTitle:"[7.0.1] - 2021-08-11 utc+0800",charIndex:8712},{level:3,title:"Fixed",slug:"fixed-15",normalizedTitle:"fixed",charIndex:298},{level:2,title:"[7.0.0] - 2021-08-04 UTC+0800",slug:"_7-0-0-2021-08-04-utc-0800",normalizedTitle:"[7.0.0] - 2021-08-04 utc+0800",charIndex:8937},{level:3,title:"Changed",slug:"changed-6",normalizedTitle:"changed",charIndex:286}],headersStr:"[Unreleased] Added Removed Changed Fixed [10.1.2] - 2022-07-09 UTC+0800 Fixed [10.1.1] - 2022-01-07 UTC+0800 Added Fixed [10.1.0] - 2021-12-14 UTC+0800 Added Fixed [10.0.1] - 2021-12-05 UTC+0800 Added Fixed [10.0.0] - 2021-11-30 UTC+0800 Added Removed Changed [9.0.6] - 2021-10-10 UTC+0800 Fixed [9.0.5] - 2021-10-09 UTC+0800 New test suite Changed Fixed [9.0.4] - 2021-09-29 UTC+0800 Fixed [9.0.3] - 2021-09-28 UTC+0800 Changed Fixed [9.0.2] - 2021-09-25 UTC+0800 Fixed [9.0.1] - 2021-09-24 UTC+0800 Fixed [9.0.0] - 2021-09-23 UTC+0800 NOTE Added Removed Fixes [8.0.3] - 2021-08-27 UTC+0800 Fixed [8.0.2] - 2021-08-27 UTC+0800 Fixed [8.0.1] - 2021-08-23 UTC+0800 Added Fixed [8.0.0] - 2021-08-21 UTC+0800 NOTE Added Changed Removed [7.1.0] - 2021-08-16 UTC+0800 Added [7.0.1] - 2021-08-11 UTC+0800 Fixed [7.0.0] - 2021-08-04 UTC+0800 Changed",content:"# Change Log (Current)\n\nThe format is based on Keep a Changelog, and this project adheres to Semantic Versioning.\n\nWhat is a breaking change?\n\n * The old configuration file may not work, for example, if a directive item is removed or renamed.\n\n\n# [Unreleased]\n\n\n# Added\n\n\n# Removed\n\n\n# Changed\n\n\n# Fixed\n\n----------------------------------------\n\n\n# [10.1.2] - 2022-07-09 UTC+0800\n\n\n# Fixed\n\n * compatible with nginx-1.23.0\n\n----------------------------------------\n\n\n# [10.1.1] - 2022-01-07 UTC+0800\n\n\n# Added\n\n * PCRE2 library support.\n\n\n# Fixed\n\n * Memory leak.\n\n * CAPTCHA and Under-Attack-Mode sometimes cause infinite page refreshes.\n\n----------------------------------------\n\n\n# [10.1.0] - 2021-12-14 UTC+0800\n\n\n# Added\n\n * You can set the directive waf to bypass, in which case no requests will be intercepted, but ngx_waf will still do the detection and logging.\n\n * The directive waf_verify_bot has a new parameter SogouSpider, which is used to verify if it is a Sogou crawler.\n\n\n# Fixed\n\n * Garbage collection is not running, which does not lead to memory leaks, but does lead to performance problems.\n\n * Sometimes the [FAKE-BOT] log is printed incorrectly.\n\n----------------------------------------\n\n\n# [10.0.1] - 2021-12-05 UTC+0800\n\n\n# Added\n\n * Added two Easter eggs, which you can find clues in the documentation. These two eggs are not triggered automatically and need to be enabled manually.\n\n\n# Fixed\n\n * All parameters of the directive waf_mode corresponding to the request method are not working.\n\n----------------------------------------\n\n\n# [10.0.0] - 2021-11-30 UTC+0800\n\n\n# Added\n\n * New directive waf_zone, used to declare a piece of shared memory that will be used for other directives, such as waf_cc_deny.\n\n * New directive waf_action, used to set actions after intercepting a request, such as returning a specific status code or challenging the client with a captcha.\n\n * New directive waf_block_page, used to set the blocking page to return the specified HTML file when the request is blocked.\n\n * A new embedded variable, $waf_rate, is used to indicate the number of accesses to the current IP in a period. The period is determined by the parameter rate of the directive waf_cc_deny, or by the parameter duration if the IP has been blacked out.\n\n * The directive waf_captcha has a new parameter max_fails, which sets the maximum number of attempts for the captcha and the blocking time after it is exceeded.\n\n * The directive waf_captcha has a new parameter zone that specifies a piece of shared memory, which needs to be set if and only if the parameter max_fails is set.\n\n * The directive waf_captcha has a new parameter sitekey, which needs to be set if and only if the parameter file is omitted.\n\n * When you reload nginx, the module keeps as much information in shared memory as possible so that it is not emptied, such as statistics used by CC protection.\n\n\n# Removed\n\n * The directive waf_http_status has been removed and the related features have been merged into the directive waf_action.\n\n * The parameter size of the directive waf_cc_deny has been removed and zone is now used instead.\n\n\n# Changed\n\n * You can omit the parameter file of the directive waf_under_attack; omitting this parameter will use a built-in file from assets/under_attack.html.\n\n * You can omit the argument file to the directive waf_captcha, which when omitted will use a built-in file based on the value of the argument prov, which comes from the directory assets/.\n\n----------------------------------------\n\n\n# [9.0.6] - 2021-10-10 UTC+0800\n\n\n# Fixed\n\n * If the directive try_files is executed, CAPTCHA may fail.\n\n----------------------------------------\n\n\n# [9.0.5] - 2021-10-09 UTC+0800\n\n\n# New test suite\n\nBy chance, I found a test suite: test-nginx. It looked great, so I wrote a lot of test cases and tested with it. Unfortunately I found a lot of bugs, very wise of me.\n\n\n# Changed\n\n * Removed useless debug log.\n\n * More debug log.\n\n\n# Fixed\n\n * Sometimes the connection is closed prematurely.\n\n * When CAPTCHA is enabled, the request body inspection may be wrong.\n\n * CAPTCHA may fail due to HTTP caching.\n\n * Memory leak when reloading nginx.\n\n * Failed to properly merge directive waf_cache from different contexts.\n\n * Failed to properly merge directives waf_cc_deny from different contexts.\n\n * Failed to inherit Referer blacklist different contexts.\n\n * Failed to properly handle incorrect command syntax.\n\n * Fixed a default rule of URL.\n\n * Fixed the following files so that the page can be refreshed automatically after the CAPTCHA is completed.\n   \n   * assets/hCaptcha.html\n   * assets/reCAPTCHAv2_Checkbox.html\n   * assets/reCAPTCHAv2_Invisible.html\n   * assets/reCAPTCHAv3.html\n\n----------------------------------------\n\n\n# [9.0.4] - 2021-09-29 UTC+0800\n\n\n# Fixed\n\n * All inspections are incorrectly skipped when the directive rewrite causes an internal redirect.\n\n----------------------------------------\n\n\n# [9.0.3] - 2021-09-28 UTC+0800\n\n\n# Changed\n\n * More debug logs.\n\n\n# Fixed\n\n * Failed to display the CAPTCHA page.\n\n----------------------------------------\n\n\n# [9.0.2] - 2021-09-25 UTC+0800\n\n\n# Fixed\n\n * Sometimes the value of the built-in variable $waf_blocking_log is wrong.\n\n----------------------------------------\n\n\n# [9.0.1] - 2021-09-24 UTC+0800\n\n\n# Fixed\n\n * Failed to load rules of ModSecurity.\n\n----------------------------------------\n\n\n# [9.0.0] - 2021-09-23 UTC+0800\n\n\n# NOTE\n\nIf you would like to upgrade to this version, please see the documentation for guidelines on upgrading across versions.\n\n\n# Added\n\n * Compatible with ModSecurity.\n\n * Added two directives: waf_modsecurity and waf_modsecurity_transaction_id.\n\n * Added parameter MODSECURITY to directive waf_priority.\n\n\n# Removed\n\n * Removed some parameters for directive waf_mode: LIBINJECTION, LIBINJECTION-SQLI, LIBINJECTION-XSS and ADV.\n\n * Removed the parameter ADV from the directive waf_priority.\n\n * Removed dependency libinjection.\n\n\n# Fixes\n\n * No longer returns a 404 status code when the captcha succeeds, but a 204 status code instead.\n\n * Sometimes a complete inspection of the request body is not performed.\n\n----------------------------------------\n\n\n# [8.0.3] - 2021-08-27 UTC+0800\n\n\n# Fixed\n\n * Memory leak.\n\n * A field of a structure is not initialized, so you will see a lot of malloc(size) failed (12: Out of memory) in the error log.\n\n----------------------------------------\n\n\n# [8.0.2] - 2021-08-27 UTC+0800\n\n\n# Fixed\n\n * nginx crashes(segmentation fault) after enabling CAPTCHA because the directive waf_captcha was not properly merged with different contexts.\n\n * CAPTCHA page cannot be displayed because the directive waf_captcha was not properly merged with different contexts.\n\n * If the directive proxy_pass is used, neither Under-Attack-Mode nor CAPTCHA will work properly.\n\n----------------------------------------\n\n\n# [8.0.1] - 2021-08-23 UTC+0800\n\n\n# Added\n\n * No longer generates additional response headers when CC protection returns the status code 444.\n\n\n# Fixed\n\n * Segmentation fault when User-Agent is empty.\n\n * The directive waf_http_status could not be merged correctly.\n\n----------------------------------------\n\n\n# [8.0.0] - 2021-08-21 UTC+0800\n\n\n# NOTE\n\nIf you would like to upgrade to this version, please see the documentation for guidelines on upgrading across versions.\n\n\n# Added\n\n * Introduced CAPTCHAs for third-party platforms, supporting hCaptcha, reCAPTCHAv2 and reCAPTCHAv3, with the associated directive waf_captcha.\n\n * Support recognizing friendly crawlers, including GooleBot, BingBot, BaiduSpider and YandexBot, and automatically allow them after successful recognition, the related command is waf_verify_bot.\n\n * CC protection supports enabling CAPTCHA mode, which enables CAPTCHA when the request rate exceeds the limit, and blocks the IP if the CAPTCHA fails three times in a row, and recounts the request rate on the contrary.\n\n\n# Changed\n\n * The syntax of the directive waf_mode has changed, see the documentation for a guide to cross-version upgrades.\n\n * The syntax of the directive waf_cc_deny has changed, see the documented guide to cross-version upgrades for details.\n\n * The syntax of the directive waf_cache has been changed, see the cross-version upgrade guide in the documentation.\n\n * Support for modifying the priority of request body inspection.\n\n\n# Removed\n\n * Removed two parameters of the directive waf_cache: interval and percent.\n\n----------------------------------------\n\n\n# [7.1.0] - 2021-08-16 UTC+0800\n\n\n# Added\n\n * The parameter rate of the directive waf_cc_deny allows more formats, such as 500r/s, 500r/60s, 500r/m, 500r/60m, 500r/h, 500r/60h and 500r/d.\n\n----------------------------------------\n\n\n# [7.0.1] - 2021-08-11 UTC+0800\n\n\n# Fixed\n\n * Failed to parse 0.0.0.0/0 correctly when handling IP black and white lists.\n\n * Compatible with environments that do not support IPV6.\n\n----------------------------------------\n\n\n# [7.0.0] - 2021-08-04 UTC+0800\n\n\n# Changed\n\n * Changed the way Under Attack Mode is implemented. It is no longer implemented using redirects, but by modifying the response body.\n\n * Removed directive uri from configuration item waf_under_attack, see documentation for details.\n\n * Added a directive file to the configuration item waf_under_attack whose value should be the absolute path to an HTML file, see the documentation for details.\n\n * The directive waf_cc_deny is not allowed at the context http。",normalizedContent:"# change log (current)\n\nthe format is based on keep a changelog, and this project adheres to semantic versioning.\n\nwhat is a breaking change?\n\n * the old configuration file may not work, for example, if a directive item is removed or renamed.\n\n\n# [unreleased]\n\n\n# added\n\n\n# removed\n\n\n# changed\n\n\n# fixed\n\n----------------------------------------\n\n\n# [10.1.2] - 2022-07-09 utc+0800\n\n\n# fixed\n\n * compatible with nginx-1.23.0\n\n----------------------------------------\n\n\n# [10.1.1] - 2022-01-07 utc+0800\n\n\n# added\n\n * pcre2 library support.\n\n\n# fixed\n\n * memory leak.\n\n * captcha and under-attack-mode sometimes cause infinite page refreshes.\n\n----------------------------------------\n\n\n# [10.1.0] - 2021-12-14 utc+0800\n\n\n# added\n\n * you can set the directive waf to bypass, in which case no requests will be intercepted, but ngx_waf will still do the detection and logging.\n\n * the directive waf_verify_bot has a new parameter sogouspider, which is used to verify if it is a sogou crawler.\n\n\n# fixed\n\n * garbage collection is not running, which does not lead to memory leaks, but does lead to performance problems.\n\n * sometimes the [fake-bot] log is printed incorrectly.\n\n----------------------------------------\n\n\n# [10.0.1] - 2021-12-05 utc+0800\n\n\n# added\n\n * added two easter eggs, which you can find clues in the documentation. these two eggs are not triggered automatically and need to be enabled manually.\n\n\n# fixed\n\n * all parameters of the directive waf_mode corresponding to the request method are not working.\n\n----------------------------------------\n\n\n# [10.0.0] - 2021-11-30 utc+0800\n\n\n# added\n\n * new directive waf_zone, used to declare a piece of shared memory that will be used for other directives, such as waf_cc_deny.\n\n * new directive waf_action, used to set actions after intercepting a request, such as returning a specific status code or challenging the client with a captcha.\n\n * new directive waf_block_page, used to set the blocking page to return the specified html file when the request is blocked.\n\n * a new embedded variable, $waf_rate, is used to indicate the number of accesses to the current ip in a period. the period is determined by the parameter rate of the directive waf_cc_deny, or by the parameter duration if the ip has been blacked out.\n\n * the directive waf_captcha has a new parameter max_fails, which sets the maximum number of attempts for the captcha and the blocking time after it is exceeded.\n\n * the directive waf_captcha has a new parameter zone that specifies a piece of shared memory, which needs to be set if and only if the parameter max_fails is set.\n\n * the directive waf_captcha has a new parameter sitekey, which needs to be set if and only if the parameter file is omitted.\n\n * when you reload nginx, the module keeps as much information in shared memory as possible so that it is not emptied, such as statistics used by cc protection.\n\n\n# removed\n\n * the directive waf_http_status has been removed and the related features have been merged into the directive waf_action.\n\n * the parameter size of the directive waf_cc_deny has been removed and zone is now used instead.\n\n\n# changed\n\n * you can omit the parameter file of the directive waf_under_attack; omitting this parameter will use a built-in file from assets/under_attack.html.\n\n * you can omit the argument file to the directive waf_captcha, which when omitted will use a built-in file based on the value of the argument prov, which comes from the directory assets/.\n\n----------------------------------------\n\n\n# [9.0.6] - 2021-10-10 utc+0800\n\n\n# fixed\n\n * if the directive try_files is executed, captcha may fail.\n\n----------------------------------------\n\n\n# [9.0.5] - 2021-10-09 utc+0800\n\n\n# new test suite\n\nby chance, i found a test suite: test-nginx. it looked great, so i wrote a lot of test cases and tested with it. unfortunately i found a lot of bugs, very wise of me.\n\n\n# changed\n\n * removed useless debug log.\n\n * more debug log.\n\n\n# fixed\n\n * sometimes the connection is closed prematurely.\n\n * when captcha is enabled, the request body inspection may be wrong.\n\n * captcha may fail due to http caching.\n\n * memory leak when reloading nginx.\n\n * failed to properly merge directive waf_cache from different contexts.\n\n * failed to properly merge directives waf_cc_deny from different contexts.\n\n * failed to inherit referer blacklist different contexts.\n\n * failed to properly handle incorrect command syntax.\n\n * fixed a default rule of url.\n\n * fixed the following files so that the page can be refreshed automatically after the captcha is completed.\n   \n   * assets/hcaptcha.html\n   * assets/recaptchav2_checkbox.html\n   * assets/recaptchav2_invisible.html\n   * assets/recaptchav3.html\n\n----------------------------------------\n\n\n# [9.0.4] - 2021-09-29 utc+0800\n\n\n# fixed\n\n * all inspections are incorrectly skipped when the directive rewrite causes an internal redirect.\n\n----------------------------------------\n\n\n# [9.0.3] - 2021-09-28 utc+0800\n\n\n# changed\n\n * more debug logs.\n\n\n# fixed\n\n * failed to display the captcha page.\n\n----------------------------------------\n\n\n# [9.0.2] - 2021-09-25 utc+0800\n\n\n# fixed\n\n * sometimes the value of the built-in variable $waf_blocking_log is wrong.\n\n----------------------------------------\n\n\n# [9.0.1] - 2021-09-24 utc+0800\n\n\n# fixed\n\n * failed to load rules of modsecurity.\n\n----------------------------------------\n\n\n# [9.0.0] - 2021-09-23 utc+0800\n\n\n# note\n\nif you would like to upgrade to this version, please see the documentation for guidelines on upgrading across versions.\n\n\n# added\n\n * compatible with modsecurity.\n\n * added two directives: waf_modsecurity and waf_modsecurity_transaction_id.\n\n * added parameter modsecurity to directive waf_priority.\n\n\n# removed\n\n * removed some parameters for directive waf_mode: libinjection, libinjection-sqli, libinjection-xss and adv.\n\n * removed the parameter adv from the directive waf_priority.\n\n * removed dependency libinjection.\n\n\n# fixes\n\n * no longer returns a 404 status code when the captcha succeeds, but a 204 status code instead.\n\n * sometimes a complete inspection of the request body is not performed.\n\n----------------------------------------\n\n\n# [8.0.3] - 2021-08-27 utc+0800\n\n\n# fixed\n\n * memory leak.\n\n * a field of a structure is not initialized, so you will see a lot of malloc(size) failed (12: out of memory) in the error log.\n\n----------------------------------------\n\n\n# [8.0.2] - 2021-08-27 utc+0800\n\n\n# fixed\n\n * nginx crashes(segmentation fault) after enabling captcha because the directive waf_captcha was not properly merged with different contexts.\n\n * captcha page cannot be displayed because the directive waf_captcha was not properly merged with different contexts.\n\n * if the directive proxy_pass is used, neither under-attack-mode nor captcha will work properly.\n\n----------------------------------------\n\n\n# [8.0.1] - 2021-08-23 utc+0800\n\n\n# added\n\n * no longer generates additional response headers when cc protection returns the status code 444.\n\n\n# fixed\n\n * segmentation fault when user-agent is empty.\n\n * the directive waf_http_status could not be merged correctly.\n\n----------------------------------------\n\n\n# [8.0.0] - 2021-08-21 utc+0800\n\n\n# note\n\nif you would like to upgrade to this version, please see the documentation for guidelines on upgrading across versions.\n\n\n# added\n\n * introduced captchas for third-party platforms, supporting hcaptcha, recaptchav2 and recaptchav3, with the associated directive waf_captcha.\n\n * support recognizing friendly crawlers, including goolebot, bingbot, baiduspider and yandexbot, and automatically allow them after successful recognition, the related command is waf_verify_bot.\n\n * cc protection supports enabling captcha mode, which enables captcha when the request rate exceeds the limit, and blocks the ip if the captcha fails three times in a row, and recounts the request rate on the contrary.\n\n\n# changed\n\n * the syntax of the directive waf_mode has changed, see the documentation for a guide to cross-version upgrades.\n\n * the syntax of the directive waf_cc_deny has changed, see the documented guide to cross-version upgrades for details.\n\n * the syntax of the directive waf_cache has been changed, see the cross-version upgrade guide in the documentation.\n\n * support for modifying the priority of request body inspection.\n\n\n# removed\n\n * removed two parameters of the directive waf_cache: interval and percent.\n\n----------------------------------------\n\n\n# [7.1.0] - 2021-08-16 utc+0800\n\n\n# added\n\n * the parameter rate of the directive waf_cc_deny allows more formats, such as 500r/s, 500r/60s, 500r/m, 500r/60m, 500r/h, 500r/60h and 500r/d.\n\n----------------------------------------\n\n\n# [7.0.1] - 2021-08-11 utc+0800\n\n\n# fixed\n\n * failed to parse 0.0.0.0/0 correctly when handling ip black and white lists.\n\n * compatible with environments that do not support ipv6.\n\n----------------------------------------\n\n\n# [7.0.0] - 2021-08-04 utc+0800\n\n\n# changed\n\n * changed the way under attack mode is implemented. it is no longer implemented using redirects, but by modifying the response body.\n\n * removed directive uri from configuration item waf_under_attack, see documentation for details.\n\n * added a directive file to the configuration item waf_under_attack whose value should be the absolute path to an html file, see the documentation for details.\n\n * the directive waf_cc_deny is not allowed at the context http。",charsets:{}},{title:"Compatibility Statement",frontmatter:{title:"Compatibility Statement",lang:"en"},regularPath:"/guide/compatibility.html",relativePath:"guide/compatibility.md",key:"v-153367bc",path:"/guide/compatibility.html",headers:[{level:2,title:"OS Compatibility",slug:"os-compatibility",normalizedTitle:"os compatibility",charIndex:30},{level:2,title:"Nginx Compatibility",slug:"nginx-compatibility",normalizedTitle:"nginx compatibility",charIndex:125},{level:2,title:"Module Compatibility",slug:"module-compatibility",normalizedTitle:"module compatibility",charIndex:229},{level:3,title:"ngxhttprewrite_module",slug:"ngx-http-rewrite-module",normalizedTitle:"ngxhttprewrite_module",charIndex:null}],headersStr:"OS Compatibility Nginx Compatibility Module Compatibility ngxhttprewrite_module",content:"# Compatibility Statement\n\n\n# OS Compatibility\n\nCompatibility with operating systems other than Linux is not guaranteed.\n\n\n# Nginx Compatibility\n\nThis module only guarantees compatibility with nginx-1.18.0 or newer versions.\n\n\n# Module Compatibility\n\n\n# ngx_http_rewrite_module\n\nThere is a compatibility issue between ngx_waf and ngx_http_rewrite_module.\n\n * The module does not take effect if the request directive return takes effect.\n * The module does not take effect if the request directive rewrite results in a return (e.g., a 302 redirect).\n\nReplace 'rewrite' with 'try_files'.\n\nYou may have the following configuration.\n\nif (! -e $request_filename) {\n    rewrite (.*) /index.php\n}\n\n\nYou can replace it with the following configuration.\n\ntry_files $uri $uri/ /index.php;\n\n\nSee rewrite and try_files for details http_core_module.html#try_files).",normalizedContent:"# compatibility statement\n\n\n# os compatibility\n\ncompatibility with operating systems other than linux is not guaranteed.\n\n\n# nginx compatibility\n\nthis module only guarantees compatibility with nginx-1.18.0 or newer versions.\n\n\n# module compatibility\n\n\n# ngx_http_rewrite_module\n\nthere is a compatibility issue between ngx_waf and ngx_http_rewrite_module.\n\n * the module does not take effect if the request directive return takes effect.\n * the module does not take effect if the request directive rewrite results in a return (e.g., a 302 redirect).\n\nreplace 'rewrite' with 'try_files'.\n\nyou may have the following configuration.\n\nif (! -e $request_filename) {\n    rewrite (.*) /index.php\n}\n\n\nyou can replace it with the following configuration.\n\ntry_files $uri $uri/ /index.php;\n\n\nsee rewrite and try_files for details http_core_module.html#try_files).",charsets:{}},{title:"Configuration Guide",frontmatter:{title:"Configuration Guide",lang:"en"},regularPath:"/guide/configuration.html",relativePath:"guide/configuration.md",key:"v-56d17308",path:"/guide/configuration.html",headers:[{level:2,title:"LTS version",slug:"lts-version",normalizedTitle:"lts version",charIndex:246},{level:2,title:"'Current' version",slug:"current-version",normalizedTitle:"'current' version",charIndex:1053}],headersStr:"LTS version 'Current' version",content:"# Configuration Guide\n\nYou can enable ngx_waf by adding configuration to a server block inside nginx.conf. Here is an example.\n\nWARNING\n\nThe configurations listed below are required if you intend to change them unless you know what it means.\n\n\n# LTS version\n\nhttp {\n    ...\n    server {\n        ...\n        # on means enabled, off means disabled.\n        waf on;\n\n        # The absolute path to the directory where the rule file is located, must end with /.\n        waf_rule_path /usr/local/src/ngx_waf/assets/rules/;\n\n        # Firewall working mode, STD indicates standard mode.\n        waf_mode STD;\n\n        # CC defense parameter, 1000 requests per minute limit, \n        # block the corresponding ip for 60 minutes after exceeding the limit.\n        waf_cc_deny rate=1000r/m duration=60m;\n\n        # Cache detection results for up to 50 detection targets, \n        # effective for all detections \n        # except IP black and white list detection, CC protection and POST detection.\n        waf_cache capacity=50;\n        ...\n    }\n    ...\n}\n\n\n\n# 'Current' version\n\nhttp {\n    waf_zone name=waf size=20m;\n    ...\n    server {\n        ...\n        # on means enabled, off means disabled.\n        waf on;\n\n        # The absolute path to the directory where the rule file is located, must end with /.\n        waf_rule_path /usr/local/src/ngx_waf/assets/rules/;\n\n        # Firewall working mode, STD indicates standard mode.\n        waf_mode STD;\n\n        # CC defense parameter, 1000 requests per minute limit, \n        # block the corresponding ip for 60 minutes after exceeding the limit.\n        waf_cc_deny on rate=1000r/m duration=60m zone=waf:cc;\n\n        # Cache detection results for up to 50 detection targets, \n        # effective for all detections \n        # except IP black and white list detection, CC protection and POST detection.\n        waf_cache on capacity=50;\n        ...\n    }\n    ...\n}\n",normalizedContent:"# configuration guide\n\nyou can enable ngx_waf by adding configuration to a server block inside nginx.conf. here is an example.\n\nwarning\n\nthe configurations listed below are required if you intend to change them unless you know what it means.\n\n\n# lts version\n\nhttp {\n    ...\n    server {\n        ...\n        # on means enabled, off means disabled.\n        waf on;\n\n        # the absolute path to the directory where the rule file is located, must end with /.\n        waf_rule_path /usr/local/src/ngx_waf/assets/rules/;\n\n        # firewall working mode, std indicates standard mode.\n        waf_mode std;\n\n        # cc defense parameter, 1000 requests per minute limit, \n        # block the corresponding ip for 60 minutes after exceeding the limit.\n        waf_cc_deny rate=1000r/m duration=60m;\n\n        # cache detection results for up to 50 detection targets, \n        # effective for all detections \n        # except ip black and white list detection, cc protection and post detection.\n        waf_cache capacity=50;\n        ...\n    }\n    ...\n}\n\n\n\n# 'current' version\n\nhttp {\n    waf_zone name=waf size=20m;\n    ...\n    server {\n        ...\n        # on means enabled, off means disabled.\n        waf on;\n\n        # the absolute path to the directory where the rule file is located, must end with /.\n        waf_rule_path /usr/local/src/ngx_waf/assets/rules/;\n\n        # firewall working mode, std indicates standard mode.\n        waf_mode std;\n\n        # cc defense parameter, 1000 requests per minute limit, \n        # block the corresponding ip for 60 minutes after exceeding the limit.\n        waf_cc_deny on rate=1000r/m duration=60m zone=waf:cc;\n\n        # cache detection results for up to 50 detection targets, \n        # effective for all detections \n        # except ip black and white list detection, cc protection and post detection.\n        waf_cache on capacity=50;\n        ...\n    }\n    ...\n}\n",charsets:{}},{title:"FAQ",frontmatter:{title:"FAQ",lang:"en"},regularPath:"/guide/faq.html",relativePath:"guide/faq.md",key:"v-63bf3588",path:"/guide/faq.html",headers:[{level:2,title:"How does this module perform?",slug:"how-does-this-module-perform",normalizedTitle:"how does this module perform?",charIndex:10},{level:2,title:"Cache Policy",slug:"cache-policy",normalizedTitle:"cache policy",charIndex:471},{level:2,title:"Embedded variables and directive if",slug:"embedded-variables-and-directive-if",normalizedTitle:"embedded variables and directive if",charIndex:493},{level:2,title:"ngx_http_access_module",slug:"ngx-http-access-module",normalizedTitle:"ngx_http_access_module",charIndex:739},{level:2,title:"Post Inspection Failure",slug:"post-inspection-failure",normalizedTitle:"post inspection failure",charIndex:873},{level:2,title:"Can I change the rules at runtime?",slug:"can-i-change-the-rules-at-runtime",normalizedTitle:"can i change the rules at runtime?",charIndex:1264},{level:2,title:"Is IP inspection affected by CDN?",slug:"is-ip-inspection-affected-by-cdn",normalizedTitle:"is ip inspection affected by cdn?",charIndex:1438},{level:2,title:"Regular expression Denial of Service (ReDoS)",slug:"regular-expression-denial-of-service-redos",normalizedTitle:"regular expression denial of service (redos)",charIndex:1596},{level:2,title:'fork() failed while spawning "worker process" (12: Cannot allocate memory)',slug:"fork-failed-while-spawning-worker-process-12-cannot-allocate-memory",normalizedTitle:"fork() failed while spawning &quot;worker process&quot; (12: cannot allocate memory)",charIndex:null},{level:2,title:"PANIC: unprotected error in call to Lua API (attempt to index a nil value)",slug:"panic-unprotected-error-in-call-to-lua-api-attempt-to-index-a-nil-value",normalizedTitle:"panic: unprotected error in call to lua api (attempt to index a nil value)",charIndex:2783}],headersStr:'How does this module perform? Cache Policy Embedded variables and directive if ngx_http_access_module Post Inspection Failure Can I change the rules at runtime? Is IP inspection affected by CDN? Regular expression Denial of Service (ReDoS) fork() failed while spawning "worker process" (12: Cannot allocate memory) PANIC: unprotected error in call to Lua API (attempt to index a nil value)',content:'# FAQ\n\n\n# How does this module perform?\n\nIP inspection and CC defense take constant time, other inspections take O(nm), where n is the number of relevant rules and m is the time complexity to perform regular matching, but the results of this inspection are automatically cached after each inspection, so that the next time the same target is inspected, the cache can be used instead of checking all the rules. The result of the POST request body check is not cached.\n\n\n# Cache Policy\n\nLRU\n\n\n# Embedded variables and directive if\n\nIn short, due to NGINX\'s state machine model, you cannot use any embedded variables from this module (such as $waf_rule_type) for the directive if, except for the parameter if of the directive access_log.\n\n\n# ngx_http_access_module\n\nWhen this module is used with ngx_http_access_module, ngx_http_access_module will run before this module.\n\n\n# Post Inspection Failure\n\nFor performance reasons, this module will inspect whether it is in the memory before inspecting the request body. If it is, it will inspect normally, otherwise skip the inspection. You can try to edit nginx.conf.\n\nhttp {\n    ...\n    client_body_buffer_size 10M;\n    client_body_in_file_only off;\n    ...\n}\n\n\nclient_body_buffer_size and client_body_in_file_only.\n\n\n# Can I change the rules at runtime?\n\nNo, this module will only read the rules when nginx reads the configuration. nginx will read the configuration on startup and reload.\n\n\n# Is IP inspection affected by CDN?\n\nIf you use the ngx_http_realip_module module to get the real IP, then this module will use the real IP for inspection.\n\n\n# Regular expression Denial of Service (ReDoS)\n\n> The regular expression denial of service (ReDoS) is an algorithmic complexity attack that produces a denial-of-service by providing a regular expression that takes a very long time to evaluate.\n> \n> ReDoS - Wikipedia\n\n * This module uses the PCRE library to execute regular expressions. The PCRE library can specify the upper limit of the main loop counter at compile time and stop automatically when the upper limit is exceeded. The default limit is 500000. You can also adjust it manually at compile time, see the pcre2 build man page.\n\n * This module caches all regular inspections (except POST inspections), so that the next time you encounter a string for an attack, you do not need to execute the regular expression again without triggering the cache cleanup process.\n\n\n# fork() failed while spawning "worker process" (12: Cannot allocate memory)\n\nIt may be caused by excessive use of nginx -s reload. The module requests some memory when reading the configuration, but somehow the memory is not released immediately after nginx -s reload, so frequent nginx -s reload in a short period of time will most likely cause this error.\n\n\n# PANIC: unprotected error in call to Lua API (attempt to index a nil value)\n\nPlease check the version of libmodsecurity. After testing, libmodsecurity v3.0.3 has this bug, please update to libmodsecurity v3.0.5.',normalizedContent:'# faq\n\n\n# how does this module perform?\n\nip inspection and cc defense take constant time, other inspections take o(nm), where n is the number of relevant rules and m is the time complexity to perform regular matching, but the results of this inspection are automatically cached after each inspection, so that the next time the same target is inspected, the cache can be used instead of checking all the rules. the result of the post request body check is not cached.\n\n\n# cache policy\n\nlru\n\n\n# embedded variables and directive if\n\nin short, due to nginx\'s state machine model, you cannot use any embedded variables from this module (such as $waf_rule_type) for the directive if, except for the parameter if of the directive access_log.\n\n\n# ngx_http_access_module\n\nwhen this module is used with ngx_http_access_module, ngx_http_access_module will run before this module.\n\n\n# post inspection failure\n\nfor performance reasons, this module will inspect whether it is in the memory before inspecting the request body. if it is, it will inspect normally, otherwise skip the inspection. you can try to edit nginx.conf.\n\nhttp {\n    ...\n    client_body_buffer_size 10m;\n    client_body_in_file_only off;\n    ...\n}\n\n\nclient_body_buffer_size and client_body_in_file_only.\n\n\n# can i change the rules at runtime?\n\nno, this module will only read the rules when nginx reads the configuration. nginx will read the configuration on startup and reload.\n\n\n# is ip inspection affected by cdn?\n\nif you use the ngx_http_realip_module module to get the real ip, then this module will use the real ip for inspection.\n\n\n# regular expression denial of service (redos)\n\n> the regular expression denial of service (redos) is an algorithmic complexity attack that produces a denial-of-service by providing a regular expression that takes a very long time to evaluate.\n> \n> redos - wikipedia\n\n * this module uses the pcre library to execute regular expressions. the pcre library can specify the upper limit of the main loop counter at compile time and stop automatically when the upper limit is exceeded. the default limit is 500000. you can also adjust it manually at compile time, see the pcre2 build man page.\n\n * this module caches all regular inspections (except post inspections), so that the next time you encounter a string for an attack, you do not need to execute the regular expression again without triggering the cache cleanup process.\n\n\n# fork() failed while spawning "worker process" (12: cannot allocate memory)\n\nit may be caused by excessive use of nginx -s reload. the module requests some memory when reading the configuration, but somehow the memory is not released immediately after nginx -s reload, so frequent nginx -s reload in a short period of time will most likely cause this error.\n\n\n# panic: unprotected error in call to lua api (attempt to index a nil value)\n\nplease check the version of libmodsecurity. after testing, libmodsecurity v3.0.3 has this bug, please update to libmodsecurity v3.0.5.',charsets:{}},{title:"Installation Guide",frontmatter:{title:"Installation Guide",lang:"en",sidebarDepth:3},regularPath:"/guide/installation.html",relativePath:"guide/installation.md",key:"v-1855e3a4",path:"/guide/installation.html",headers:[{level:2,title:"Static Modules",slug:"static-modules",normalizedTitle:"static modules",charIndex:281},{level:2,title:"Dynamic Modules",slug:"dynamic-modules",normalizedTitle:"dynamic modules",charIndex:3302}],headersStr:"Static Modules Dynamic Modules",content:"# Installation Guide\n\nPlease read the Version Description first to pick the right version.\n\nnginx provides two ways to install modules, namely 'statically linked' and 'dynamically loaded', and the modules installed in each way are called 'static modules' and dynamic modules'.\n\n\n# Static Modules\n\nNOTE\n\nCompiling and installing the module may require some dependencies, such as gcc, so please work out the dependencies yourself; this article does not provide such information.\n\nWARNING\n\nCompiling and installing a new module requires knowing the parameters of the current nginx's configure script, which you can get by running nginx -V. Here is an example.\n\nnginx version: nginx/1.19.6\nbuilt by gcc 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04)\nbuilt with OpenSSL 1.1.1i  8 Dec 2020\nTLS SNI support enabled\nconfigure arguments: --with-mail=dynamic --with-openssl=/usr/local/src/openssl-OpenSSL_1_1_1i --prefix=/usr/local/nginx --user=nginx --group=nginx --with-file-aio --with-http_ssl_module --with-http_geoip_module --with-http_v2_module --with-http_realip_module --with-stream_ssl_preread_module --with-http_addition_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_slice_module --with-http_perl_module --with-http_stub_status_module --with-http_auth_request_module --with-mail=dynamic --with-mail_ssl_module --with-pcre --with-pcre-jit --with-stream=dynamic --with-stream_ssl_module --with-debug --with-cc-opt='-O3 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic'\n\n\nBe sure to remember what comes after configure arguments:, which will be replaced by ARG below.\n\nInstalling a static module requires recompiling the entire nginx, which takes longer than installing a dynamic module.\n\nFirst download the corresponding version of nginx, download page. The following is an example of nginx-1.20.1.\n\ncd /usr/local/src\nwget https://nginx.org/download/nginx-1.20.1.tar.gz\ntar -zxf nginx-1.20.1.tar.gz\n\n\nThen download the source code of this module, the following will use the stable version of the source code\n\ncd /usr/local/src\ngit clone -b lts https://github.com/ADD-SP/ngx_waf.git\n\n\nNext you should run the configuration script.\n\ncd /usr/local/src/nginx-1.20.1\n./configure ARG --add-module=/usr/local/src/ngx_waf --with-debug\nsed -i 's/^\\(CFLAGS.*\\)/\\1 -fstack-protector-strong -Wno-sign-compare/' objs/Makefile\n\n\nThen start compiling.\n\n# Not using parallel compilation\nmake\n\n# Use parallel compilation.\nmake -j$(nproc)\n\n\nNOTE\n\nParallel compilation will improve the compilation speed, but there is a chance of strange errors, so you can disable parallel compilation if it goes wrong.\n\nFinally, you should stop nginx and replace the nginx binary. Assume here that the absolute path to the nginx binary is /usr/local/nginx/sbin/nginx.\n\ncp objs/nginx /usr/local/nginx/sbin/nginx\n\n\nHot Deployment\n\nIf you do not want to not nginx when replacing binaries, you can refer to the official documentation for hot deployment scenarios.\n\n\n# Dynamic Modules\n\nCompiling and installing dynamic modules does not require recompiling the entire nginx, only all modules, which is faster than static modules, which is the recommended way in this document.\n\nThe process of downloading nginx source code and module source code is the same as for Static Modules and will not be repeated.\n\nRun the configuration script\n\n./configure --add-dynamic-module=/usr/local/src/ngx_waf --with-compat --with-debug\nsed -i 's/^\\(CFLAGS.*\\)/\\1 -fstack-protector-strong -Wno-sign-compare/' objs/Makefile\n\n\nThen start compiling the dynamic module\n\nmake modules\n\n\nYou should then stop nginx and copy the dynamic modules to the modules directory. Assume here that the absolute path to the modules directory is /usr/local/nginx/modules.\n\ncp objs/*.so /usr/local/nginx/modules\n\n\nFinally, add a line to the top of the nginx configuration file.\n\nload_module \"/usr/local/nginx/modules/ngx_http_waf_module.so\";\n",normalizedContent:"# installation guide\n\nplease read the version description first to pick the right version.\n\nnginx provides two ways to install modules, namely 'statically linked' and 'dynamically loaded', and the modules installed in each way are called 'static modules' and dynamic modules'.\n\n\n# static modules\n\nnote\n\ncompiling and installing the module may require some dependencies, such as gcc, so please work out the dependencies yourself; this article does not provide such information.\n\nwarning\n\ncompiling and installing a new module requires knowing the parameters of the current nginx's configure script, which you can get by running nginx -v. here is an example.\n\nnginx version: nginx/1.19.6\nbuilt by gcc 9.3.0 (ubuntu 9.3.0-17ubuntu1~20.04)\nbuilt with openssl 1.1.1i  8 dec 2020\ntls sni support enabled\nconfigure arguments: --with-mail=dynamic --with-openssl=/usr/local/src/openssl-openssl_1_1_1i --prefix=/usr/local/nginx --user=nginx --group=nginx --with-file-aio --with-http_ssl_module --with-http_geoip_module --with-http_v2_module --with-http_realip_module --with-stream_ssl_preread_module --with-http_addition_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_slice_module --with-http_perl_module --with-http_stub_status_module --with-http_auth_request_module --with-mail=dynamic --with-mail_ssl_module --with-pcre --with-pcre-jit --with-stream=dynamic --with-stream_ssl_module --with-debug --with-cc-opt='-o3 -g -pipe -wall -wp,-d_fortify_source=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic'\n\n\nbe sure to remember what comes after configure arguments:, which will be replaced by arg below.\n\ninstalling a static module requires recompiling the entire nginx, which takes longer than installing a dynamic module.\n\nfirst download the corresponding version of nginx, download page. the following is an example of nginx-1.20.1.\n\ncd /usr/local/src\nwget https://nginx.org/download/nginx-1.20.1.tar.gz\ntar -zxf nginx-1.20.1.tar.gz\n\n\nthen download the source code of this module, the following will use the stable version of the source code\n\ncd /usr/local/src\ngit clone -b lts https://github.com/add-sp/ngx_waf.git\n\n\nnext you should run the configuration script.\n\ncd /usr/local/src/nginx-1.20.1\n./configure arg --add-module=/usr/local/src/ngx_waf --with-debug\nsed -i 's/^\\(cflags.*\\)/\\1 -fstack-protector-strong -wno-sign-compare/' objs/makefile\n\n\nthen start compiling.\n\n# not using parallel compilation\nmake\n\n# use parallel compilation.\nmake -j$(nproc)\n\n\nnote\n\nparallel compilation will improve the compilation speed, but there is a chance of strange errors, so you can disable parallel compilation if it goes wrong.\n\nfinally, you should stop nginx and replace the nginx binary. assume here that the absolute path to the nginx binary is /usr/local/nginx/sbin/nginx.\n\ncp objs/nginx /usr/local/nginx/sbin/nginx\n\n\nhot deployment\n\nif you do not want to not nginx when replacing binaries, you can refer to the official documentation for hot deployment scenarios.\n\n\n# dynamic modules\n\ncompiling and installing dynamic modules does not require recompiling the entire nginx, only all modules, which is faster than static modules, which is the recommended way in this document.\n\nthe process of downloading nginx source code and module source code is the same as for static modules and will not be repeated.\n\nrun the configuration script\n\n./configure --add-dynamic-module=/usr/local/src/ngx_waf --with-compat --with-debug\nsed -i 's/^\\(cflags.*\\)/\\1 -fstack-protector-strong -wno-sign-compare/' objs/makefile\n\n\nthen start compiling the dynamic module\n\nmake modules\n\n\nyou should then stop nginx and copy the dynamic modules to the modules directory. assume here that the absolute path to the modules directory is /usr/local/nginx/modules.\n\ncp objs/*.so /usr/local/nginx/modules\n\n\nfinally, add a line to the top of the nginx configuration file.\n\nload_module \"/usr/local/nginx/modules/ngx_http_waf_module.so\";\n",charsets:{}},{title:"Overview",frontmatter:{title:"Overview",lang:"en"},regularPath:"/guide/overview.html",relativePath:"guide/overview.md",key:"v-7b174ab0",path:"/guide/overview.html",headers:[{level:2,title:"Why ngx_waf",slug:"why-ngx-waf",normalizedTitle:"why ngx_waf",charIndex:63},{level:2,title:"Features",slug:"features",normalizedTitle:"features",charIndex:717},{level:2,title:"Contact",slug:"contact",normalizedTitle:"contact",charIndex:1832},{level:2,title:"Sponsor",slug:"sponsor",normalizedTitle:"sponsor",charIndex:2002},{level:2,title:"Test Suite",slug:"test-suite",normalizedTitle:"test suite",charIndex:2106},{level:2,title:"Performance Test",slug:"performance-test",normalizedTitle:"performance test",charIndex:2971},{level:2,title:"Thanks",slug:"thanks",normalizedTitle:"thanks",charIndex:2203}],headersStr:"Why ngx_waf Features Contact Sponsor Test Suite Performance Test Thanks",content:"# Overview\n\nHandy, High performance Nginx firewall module.\n\n\n# Why ngx_waf\n\n * Basic protection: such as black and white list of IPs or IP range, uri black and white list, and request body black list, etc.\n * Easy to use: configuration files and rule files are easy to write and readable.\n * High performance: Efficient algorithms and caching.\n * Advanced protection: ModSecurity compatible, you can use OWASP(Open Web Application Security Project®) ModSecurity Core Rule Set.\n * Friendly crawler verification: Supports verifying Google, Bing, Baidu and Yandex crawlers and allowing them automatically to avoid false positives.\n * Captcha: Supports three kinds of captchas: hCaptcha, reCAPTCHAv2 and reCAPTCHAv3.\n\n\n# Features\n\n * ModSecurity compatible. This feature is only available in the latest Current version.\n * Anti SQL injection (powered by libinjection).\n * Anti XSS (powered by libinjection).\n * IPV4 and IPV6 support.\n * Support for enabling CAPTCHAs, including hCaptcha, reCAPTCHAv2 and reCAPTCHAv3. This feature is only available in the latest Current version.\n * Support authentication-friendly crawlers (based on user agent and IP identification) to avoid blocking of these crawlers (e.g. GoogleBot). This feature is only available in the latest Current version.\n * CC protection, if the request rate exceeds the limit, the IP will be automatically banned for a period of time, or use CAPTCHA to do human identification and allow it if successful..\n * Exceptional allow on specific IP address.\n * Block the specified IP or IP range.\n * Block the specified request body.\n * Exceptional allow on specific URL.\n * Block the specified URL.\n * Block the specified query string.\n * Block the specified UserAgent.\n * Block the specified Cookie.\n * Exceptional allow on specific Referer.\n * Block the specified Referer.\n\n\n# Contact\n\n * Telegram Channel: https://t.me/ngx_waf\n * Telegram Group (English): https://t.me/group_ngx_waf\n * Telegram Group (Chinese): https://t.me/group_ngx_waf_cn\n\n\n# Sponsor\n\nHope you can help promote this project. The more stars got, the better this project is. 😃\n\n\n# Test Suite\n\nThis module comes with a Perl-driven test suite. The test cases are declarative too. Thanks to the Test::Nginx module in the Perl world.\n\nTo run it on your side:\n\n## It will take a lot of time, but it only needs to be run once.\ncpan Test::Nginx\n\n# You need to specify a temporary directory.\n# If the directory does not exist it will be created automatically.\n# If the directory already exists it will be **removed** first and then created.\nexport MODULE_TEST_PATH=/path/to/temp/dir\n\n# You need to specify the absolute path to the dynamic module if you have it installed, \n# otherwise you do not need to run this line.\nexport MODULE_PATH=/path/to/ngx_http_waf_module.so\n\ncd ./test/test-nginx\nsh ./init.sh\nsh ./start.sh ./t/*.t\n\n\nSome parts of the test suite requires standard modules proxy, rewrite and SSI to be enabled as well when building Nginx.\n\n\n# Performance Test\n\nPerformance Test\n\n\n# Thanks\n\n * ModSecurity: An open source, cross platform web application firewall (WAF) engine.\n * uthash: C macros for hash tables and more.\n * libcurl: The multiprotocol file transfer library .\n * cJSON: Ultralightweight JSON parser in ANSI C.\n * libinjection: SQL / SQLI tokenizer parser analyzer.\n * libsodium: A modern, portable, easy to use crypto library.\n * test-nginx: Data-driven test scaffold for Nginx C module and OpenResty Lua library development.\n * lastversion: A command line tool that helps you download or install a specific version of a project.\n * ngx_lua_waf: A web application firewall based on the lua-nginx-module (openresty).\n * nginx-book: The Chinese language development guide for nginx.\n * nginx-development-guide: The Chinese language development guide for nginx.",normalizedContent:"# overview\n\nhandy, high performance nginx firewall module.\n\n\n# why ngx_waf\n\n * basic protection: such as black and white list of ips or ip range, uri black and white list, and request body black list, etc.\n * easy to use: configuration files and rule files are easy to write and readable.\n * high performance: efficient algorithms and caching.\n * advanced protection: modsecurity compatible, you can use owasp(open web application security project®) modsecurity core rule set.\n * friendly crawler verification: supports verifying google, bing, baidu and yandex crawlers and allowing them automatically to avoid false positives.\n * captcha: supports three kinds of captchas: hcaptcha, recaptchav2 and recaptchav3.\n\n\n# features\n\n * modsecurity compatible. this feature is only available in the latest current version.\n * anti sql injection (powered by libinjection).\n * anti xss (powered by libinjection).\n * ipv4 and ipv6 support.\n * support for enabling captchas, including hcaptcha, recaptchav2 and recaptchav3. this feature is only available in the latest current version.\n * support authentication-friendly crawlers (based on user agent and ip identification) to avoid blocking of these crawlers (e.g. googlebot). this feature is only available in the latest current version.\n * cc protection, if the request rate exceeds the limit, the ip will be automatically banned for a period of time, or use captcha to do human identification and allow it if successful..\n * exceptional allow on specific ip address.\n * block the specified ip or ip range.\n * block the specified request body.\n * exceptional allow on specific url.\n * block the specified url.\n * block the specified query string.\n * block the specified useragent.\n * block the specified cookie.\n * exceptional allow on specific referer.\n * block the specified referer.\n\n\n# contact\n\n * telegram channel: https://t.me/ngx_waf\n * telegram group (english): https://t.me/group_ngx_waf\n * telegram group (chinese): https://t.me/group_ngx_waf_cn\n\n\n# sponsor\n\nhope you can help promote this project. the more stars got, the better this project is. 😃\n\n\n# test suite\n\nthis module comes with a perl-driven test suite. the test cases are declarative too. thanks to the test::nginx module in the perl world.\n\nto run it on your side:\n\n## it will take a lot of time, but it only needs to be run once.\ncpan test::nginx\n\n# you need to specify a temporary directory.\n# if the directory does not exist it will be created automatically.\n# if the directory already exists it will be **removed** first and then created.\nexport module_test_path=/path/to/temp/dir\n\n# you need to specify the absolute path to the dynamic module if you have it installed, \n# otherwise you do not need to run this line.\nexport module_path=/path/to/ngx_http_waf_module.so\n\ncd ./test/test-nginx\nsh ./init.sh\nsh ./start.sh ./t/*.t\n\n\nsome parts of the test suite requires standard modules proxy, rewrite and ssi to be enabled as well when building nginx.\n\n\n# performance test\n\nperformance test\n\n\n# thanks\n\n * modsecurity: an open source, cross platform web application firewall (waf) engine.\n * uthash: c macros for hash tables and more.\n * libcurl: the multiprotocol file transfer library .\n * cjson: ultralightweight json parser in ansi c.\n * libinjection: sql / sqli tokenizer parser analyzer.\n * libsodium: a modern, portable, easy to use crypto library.\n * test-nginx: data-driven test scaffold for nginx c module and openresty lua library development.\n * lastversion: a command line tool that helps you download or install a specific version of a project.\n * ngx_lua_waf: a web application firewall based on the lua-nginx-module (openresty).\n * nginx-book: the chinese language development guide for nginx.\n * nginx-development-guide: the chinese language development guide for nginx.",charsets:{}},{title:"Version Description",frontmatter:{title:"Version Description",lang:"en"},regularPath:"/guide/version.html",relativePath:"guide/version.md",key:"v-fa492d08",path:"/guide/version.html",headers:[{level:2,title:"Semantic Versioning",slug:"semantic-versioning",normalizedTitle:"semantic versioning",charIndex:26},{level:2,title:"Long-term Support (LTS)",slug:"long-term-support-lts",normalizedTitle:"long-term support (lts)",charIndex:103},{level:2,title:"Current",slug:"current",normalizedTitle:"current",charIndex:499}],headersStr:"Semantic Versioning Long-term Support (LTS) Current",content:"# Version Description\n\n\n# Semantic Versioning\n\nThis project follows the Semantic Versioning 2.0.0.\n\n\n# Long-term Support (LTS)\n\nLTS is maintained for at least one year, and only bugs will be fixed during the maintenance period, especially serious bugs, and some minor bugs may not be fixed.\n\nIn most cases, this version is more stable, but there are no functional updates.\n\ngit clone -b master https://github.com/ADD-SP/ngx_waf.git\n\n# OR\n\ngit clone -b lts https://github.com/ADD-SP/ngx_waf.git\n\n\n\n# Current\n\nBugs are also fixed in the Current version, but the Current version includes all updates, such as new features, feature changes, feature deletions, performance optimizations, etc.\n\nThis version is not as stable as LTS, but includes functional updates.\n\ngit clone -b current https://github.com/ADD-SP/ngx_waf.git\n",normalizedContent:"# version description\n\n\n# semantic versioning\n\nthis project follows the semantic versioning 2.0.0.\n\n\n# long-term support (lts)\n\nlts is maintained for at least one year, and only bugs will be fixed during the maintenance period, especially serious bugs, and some minor bugs may not be fixed.\n\nin most cases, this version is more stable, but there are no functional updates.\n\ngit clone -b master https://github.com/add-sp/ngx_waf.git\n\n# or\n\ngit clone -b lts https://github.com/add-sp/ngx_waf.git\n\n\n\n# current\n\nbugs are also fixed in the current version, but the current version includes all updates, such as new features, feature changes, feature deletions, performance optimizations, etc.\n\nthis version is not as stable as lts, but includes functional updates.\n\ngit clone -b current https://github.com/add-sp/ngx_waf.git\n",charsets:{}},{title:"Enable CAPTCHA when blocking requests",frontmatter:{title:"Enable CAPTCHA when blocking requests",lang:"en"},regularPath:"/practice/enable-captcha-when-blocking-requests.html",relativePath:"practice/enable-captcha-when-blocking-requests.md",key:"v-b2808fb8",path:"/practice/enable-captcha-when-blocking-requests.html",headersStr:null,content:"# Enable CAPTCHA when blocking requests\n\nToday, many attackers use automated tools to attack servers. These automated tools try every vulnerability, some of which are blocked by security measures, and some of which can evade detection. Sometimes attackers will manually attack your service. We do not have a perfect defense against these attacks, but it is simple to increase the cost of the attack.\n\nWhen a request is blocked, ngx_waf will use the CAPTCHA to challenge subsequent requests from this IP until the challenge is successful. This counteracts most automated attack tools, which try every exploit, and we can always identify some obvious attack requests and enable CAPTCHA, which is very difficult for automated tools to challenge successfully. For manual attackers, this greatly increases the cost of their time.\n\nHere is an example.\n\nhttp {\n    waf_zone name=waf size=20m;\n    \n    server {\n        waf_captcha off prov=xxx sitekey=xxx secret=xxx;\n        waf_action blacklist=CAPTCHA zone=waf:action;\n    }\n}\n",normalizedContent:"# enable captcha when blocking requests\n\ntoday, many attackers use automated tools to attack servers. these automated tools try every vulnerability, some of which are blocked by security measures, and some of which can evade detection. sometimes attackers will manually attack your service. we do not have a perfect defense against these attacks, but it is simple to increase the cost of the attack.\n\nwhen a request is blocked, ngx_waf will use the captcha to challenge subsequent requests from this ip until the challenge is successful. this counteracts most automated attack tools, which try every exploit, and we can always identify some obvious attack requests and enable captcha, which is very difficult for automated tools to challenge successfully. for manual attackers, this greatly increases the cost of their time.\n\nhere is an example.\n\nhttp {\n    waf_zone name=waf size=20m;\n    \n    server {\n        waf_captcha off prov=xxx sitekey=xxx secret=xxx;\n        waf_action blacklist=captcha zone=waf:action;\n    }\n}\n",charsets:{}},{title:"Test",frontmatter:{title:"Test",lang:"en"},regularPath:"/guide/test.html",relativePath:"guide/test.md",key:"v-93872304",path:"/guide/test.html",headers:[{level:2,title:"Quick Test",slug:"quick-test",normalizedTitle:"quick test",charIndex:11},{level:2,title:"Automated Testing",slug:"automated-testing",normalizedTitle:"automated testing",charIndex:199},{level:2,title:"Performance Test",slug:"performance-test",normalizedTitle:"performance test",charIndex:912},{level:3,title:"Example Test",slug:"example-test",normalizedTitle:"example test",charIndex:933},{level:3,title:"Test By Yourself",slug:"test-by-yourself",normalizedTitle:"test by yourself",charIndex:3437}],headersStr:"Quick Test Automated Testing Performance Test Example Test Test By Yourself",content:"# Test\n\n\n# Quick Test\n\nRun the following command, if the output is 403 then the module is working properly.\n\ncurl -I -o /dev/null --user-agent bench -s -w \"%{http_code}\\\\n\" https://example.com/\n\n\n\n# Automated Testing\n\nThis project comes with many test cases.\n\nTo run it on your side:\n\n## It will take a lot of time, but it only needs to be run once.\ncpan Test::Nginx\n\n# You need to specify a temporary directory.\n# If the directory does not exist it will be created automatically.\n# If the directory already exists it will be **removed** first and then created.\nexport MODULE_TEST_PATH=/path/to/temp/dir\n\n# You need to specify the absolute path to the dynamic module if you have it installed, \n# otherwise you do not need to run this line.\nexport MODULE_PATH=/path/to/ngx_http_waf_module.so\n\ncd . /test/test-nginx\nsh ./init.sh\nsh ./start.sh ./t/*.t\n\n\nNormally all cases will pass, if not please let us know.\n\n\n# Performance Test\n\n\n# Example Test\n\n# Test Description\n\n * ngx_waf v5.1.1.\n * Approximately 210,000 IPV4 whitelist rules were used.\n * About 210,000 IPV4 blacklist rules were used.\n * Approximately 48,000 IPV6 whitelist rules were used.\n * Approximately 48,000 IPV6 blacklist rules were used.\n * 100,000 URL blacklist rules used, obtained by random string generator.\n * 100,000 URL whitelist rules were used, obtained by a random string generator.\n * Uses 5000 random strings, obtained by a random string generator. One of them is randomly selected as the URI for each request to send a GET request.\n * The test lasts 30 minutes.\n * Tested twice, once with the firewall on and once with the firewall off.\n\nNOTE\n\nThe IP for testing is obtained from IPdney.\n\nConfiguration used for testing.\n\nmaster_process on;\nworker_processes  1;\n\nhttp {\n    server {\n        listen 80;\n        server_name  localhost;\n\n        access_log off;\n        \n        waf on;\n        waf_mode DYNAMIC !CC !POST;\n        waf_rule_path /usr/local/src/ngx_waf/rules/;\n        waf_cache capacity=6000 interval=1h percent=50;\n\n        location / {\n            default_type text/html;\n            return 200 'hello';\n        }\n    }\n}\n\n\n# Test Command\n\nwrk -c 100 -d 30m -t 1 -s test/wrk/rand.lua --latency http://localhost/ -- /path/to/rand-str.txt\n\n\n# Test Results\n\nWith the firewall on, QPS(Queries Per Second) is reduced by about 4%.\n\n# waf on;\nwrk -c 100 -d 30m -t 1 -s ngx_waf/test/wrk/rand.lua --timeout 1m --latency http://localhost/ -- /usr/local/src/ngx_waf/txt.txt\n\nRunning 30m test @ http://localhost/\n  1 threads and 100 connections\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\n    Latency    78.56ms  340.74ms   3.97s    94.52%\n    Req/Sec    67.33k    25.42k   95.38k    86.58%\n  Latency Distribution\n     50%    1.14ms\n     75%    1.48ms\n     90%    4.84ms\n     99%    1.97s\n  120532104 requests in 30.00m, 17.06GB read\nRequests/sec:  66959.26\nTransfer/sec:      9.71MB\n\n\n# waf off;\nwrk -c 100 -d 30m -t 1 -s ngx_waf/test/wrk/rand.lua --timeout 1m --latency http://localhost/ -- /usr/local/src/ngx_waf/txt.txt\n\nRunning 30m test @ http://localhost/\n  1 threads and 100 connections\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\n    Latency   803.44us    0.87ms  40.32ms   95.23%\n    Req/Sec    70.69k    10.46k  105.82k    81.15%\n  Latency Distribution\n     50%  590.00us\n     75%  760.00us\n     90%    1.25ms\n     99%    4.25ms\n  126562158 requests in 30.00m, 17.92GB read\nRequests/sec:  70310.93\nTransfer/sec:     10.19MB\n\n\n\n# Test By Yourself\n\nYou can use wrk to perform performance tests on this module.\n\nThis project provides wrk's lua script for testing. The path of the script is test/wrk/rand.lua and its function is to send GET requests using a random URI. You need to provide it with a text file containing a certain number of random strings, one random string per line. Then test it with the following command.\n\nwrk -c 100 -d 1m -t 1 -s test/wrk/rand.lua --latency http://localhost/ -- /path/to/rand-str.txt\n",normalizedContent:"# test\n\n\n# quick test\n\nrun the following command, if the output is 403 then the module is working properly.\n\ncurl -i -o /dev/null --user-agent bench -s -w \"%{http_code}\\\\n\" https://example.com/\n\n\n\n# automated testing\n\nthis project comes with many test cases.\n\nto run it on your side:\n\n## it will take a lot of time, but it only needs to be run once.\ncpan test::nginx\n\n# you need to specify a temporary directory.\n# if the directory does not exist it will be created automatically.\n# if the directory already exists it will be **removed** first and then created.\nexport module_test_path=/path/to/temp/dir\n\n# you need to specify the absolute path to the dynamic module if you have it installed, \n# otherwise you do not need to run this line.\nexport module_path=/path/to/ngx_http_waf_module.so\n\ncd . /test/test-nginx\nsh ./init.sh\nsh ./start.sh ./t/*.t\n\n\nnormally all cases will pass, if not please let us know.\n\n\n# performance test\n\n\n# example test\n\n# test description\n\n * ngx_waf v5.1.1.\n * approximately 210,000 ipv4 whitelist rules were used.\n * about 210,000 ipv4 blacklist rules were used.\n * approximately 48,000 ipv6 whitelist rules were used.\n * approximately 48,000 ipv6 blacklist rules were used.\n * 100,000 url blacklist rules used, obtained by random string generator.\n * 100,000 url whitelist rules were used, obtained by a random string generator.\n * uses 5000 random strings, obtained by a random string generator. one of them is randomly selected as the uri for each request to send a get request.\n * the test lasts 30 minutes.\n * tested twice, once with the firewall on and once with the firewall off.\n\nnote\n\nthe ip for testing is obtained from ipdney.\n\nconfiguration used for testing.\n\nmaster_process on;\nworker_processes  1;\n\nhttp {\n    server {\n        listen 80;\n        server_name  localhost;\n\n        access_log off;\n        \n        waf on;\n        waf_mode dynamic !cc !post;\n        waf_rule_path /usr/local/src/ngx_waf/rules/;\n        waf_cache capacity=6000 interval=1h percent=50;\n\n        location / {\n            default_type text/html;\n            return 200 'hello';\n        }\n    }\n}\n\n\n# test command\n\nwrk -c 100 -d 30m -t 1 -s test/wrk/rand.lua --latency http://localhost/ -- /path/to/rand-str.txt\n\n\n# test results\n\nwith the firewall on, qps(queries per second) is reduced by about 4%.\n\n# waf on;\nwrk -c 100 -d 30m -t 1 -s ngx_waf/test/wrk/rand.lua --timeout 1m --latency http://localhost/ -- /usr/local/src/ngx_waf/txt.txt\n\nrunning 30m test @ http://localhost/\n  1 threads and 100 connections\n  thread stats   avg      stdev     max   +/- stdev\n    latency    78.56ms  340.74ms   3.97s    94.52%\n    req/sec    67.33k    25.42k   95.38k    86.58%\n  latency distribution\n     50%    1.14ms\n     75%    1.48ms\n     90%    4.84ms\n     99%    1.97s\n  120532104 requests in 30.00m, 17.06gb read\nrequests/sec:  66959.26\ntransfer/sec:      9.71mb\n\n\n# waf off;\nwrk -c 100 -d 30m -t 1 -s ngx_waf/test/wrk/rand.lua --timeout 1m --latency http://localhost/ -- /usr/local/src/ngx_waf/txt.txt\n\nrunning 30m test @ http://localhost/\n  1 threads and 100 connections\n  thread stats   avg      stdev     max   +/- stdev\n    latency   803.44us    0.87ms  40.32ms   95.23%\n    req/sec    70.69k    10.46k  105.82k    81.15%\n  latency distribution\n     50%  590.00us\n     75%  760.00us\n     90%    1.25ms\n     99%    4.25ms\n  126562158 requests in 30.00m, 17.92gb read\nrequests/sec:  70310.93\ntransfer/sec:     10.19mb\n\n\n\n# test by yourself\n\nyou can use wrk to perform performance tests on this module.\n\nthis project provides wrk's lua script for testing. the path of the script is test/wrk/rand.lua and its function is to send get requests using a random uri. you need to provide it with a text file containing a certain number of random strings, one random string per line. then test it with the following command.\n\nwrk -c 100 -d 1m -t 1 -s test/wrk/rand.lua --latency http://localhost/ -- /path/to/rand-str.txt\n",charsets:{}},{title:"Enable CAPTCHA",frontmatter:{title:"Enable CAPTCHA",lang:"en"},regularPath:"/practice/enable-captcha.html",relativePath:"practice/enable-captcha.md",key:"v-6ff320c8",path:"/practice/enable-captcha.html",headersStr:null,content:"# Enable CAPTCHA\n\nWhen your website is under CC attack, it is good to turn on CAPTCHA because CAPTCHA can help you identify the real users.\n\n 1. This module currently supports three CAPTCHAs, hCaptcha, reCAPTCHAv2 and reCAPTCHAv3. You should choose one and get the Sitekey and Secret from their website.\n 2. Go to assets/ in the project's directory and find the corresponding HTML file, then copy it to any path. For example, if you are using hCaptcha, you should copy assets/hCaptcha.html.\n 3. Modify the copied HTML file by changing the string Your Sitekey to the Sitekey you got from the CAPTCHA platform.\n 4. Modify the nginx configuration.\n    * Enable CAPTCHA for entire site.\n      \n      server {\n          waf_captcha on prov=hCaptcha secret=your_secret sitekey=your_sitekey;\n      }\n      \n    \n    * Enable CAPTCHA for a path\n      \n      location {\n          waf_captcha on prov=hCaptcha secret=your_secret sitekey=your_sitekey;\n      }\n      \n    \n    * Enable CAPTCHA when request rate is too high\n      \n      http {\n          waf_zone name=waf size=20m;\n          server {\n              waf_cc_deny on rate=1000r/m duration=1h zone=waf:cc;\n              waf_captcha off prov=hCaptcha secret=your_secret sitekey=your_sitekey;\n              waf_action cc_deny=CAPTCHA zone=waf:action;\n          }\n      }\n      \n\n 5. Restart nginx.\n\nWARNING\n\nIf you have some pseudo-static configuration, or some path rewriting configuration, you need to make sure that the path /captcha is not rewritten. Here is a sample modification.\n\n# BEGIN Before modification\nif (! -e $request_filename) {\n    rewrite ^(.*)$ index.php?s=$1 last break;\n}\n# END   After modification\n\n# BEGIN Before modification\ntry_files $uri $uri/ index.php?s=$1;\n# END   After modification\n\n\nSEO OPTIMIZATION\n\nEnable CAPTCHA will affect search engine crawling, you can use waf_verify_bot to allow certain search engine crawlers.\n\nwaf_verify_bot on;\n",normalizedContent:"# enable captcha\n\nwhen your website is under cc attack, it is good to turn on captcha because captcha can help you identify the real users.\n\n 1. this module currently supports three captchas, hcaptcha, recaptchav2 and recaptchav3. you should choose one and get the sitekey and secret from their website.\n 2. go to assets/ in the project's directory and find the corresponding html file, then copy it to any path. for example, if you are using hcaptcha, you should copy assets/hcaptcha.html.\n 3. modify the copied html file by changing the string your sitekey to the sitekey you got from the captcha platform.\n 4. modify the nginx configuration.\n    * enable captcha for entire site.\n      \n      server {\n          waf_captcha on prov=hcaptcha secret=your_secret sitekey=your_sitekey;\n      }\n      \n    \n    * enable captcha for a path\n      \n      location {\n          waf_captcha on prov=hcaptcha secret=your_secret sitekey=your_sitekey;\n      }\n      \n    \n    * enable captcha when request rate is too high\n      \n      http {\n          waf_zone name=waf size=20m;\n          server {\n              waf_cc_deny on rate=1000r/m duration=1h zone=waf:cc;\n              waf_captcha off prov=hcaptcha secret=your_secret sitekey=your_sitekey;\n              waf_action cc_deny=captcha zone=waf:action;\n          }\n      }\n      \n\n 5. restart nginx.\n\nwarning\n\nif you have some pseudo-static configuration, or some path rewriting configuration, you need to make sure that the path /captcha is not rewritten. here is a sample modification.\n\n# begin before modification\nif (! -e $request_filename) {\n    rewrite ^(.*)$ index.php?s=$1 last break;\n}\n# end   after modification\n\n# begin before modification\ntry_files $uri $uri/ index.php?s=$1;\n# end   after modification\n\n\nseo optimization\n\nenable captcha will affect search engine crawling, you can use waf_verify_bot to allow certain search engine crawlers.\n\nwaf_verify_bot on;\n",charsets:{}},{title:"Enable ModSecurity",frontmatter:{title:"Enable ModSecurity",lang:"en"},regularPath:"/practice/enable-modsecurity.html",relativePath:"practice/enable-modsecurity.md",key:"v-ab312ec8",path:"/practice/enable-modsecurity.html",headers:[{level:2,title:"Step 1: Download the rule set",slug:"step-1-download-the-rule-set",normalizedTitle:"step 1: download the rule set",charIndex:306},{level:2,title:"Step 2: Copy the rules file",slug:"step-2-copy-the-rules-file",normalizedTitle:"step 2: copy the rules file",charIndex:473},{level:2,title:"Step 3: Edit rules",slug:"step-3-edit-rules",normalizedTitle:"step 3: edit rules",charIndex:852},{level:2,title:"Step 4: Load Rules",slug:"step-4-load-rules",normalizedTitle:"step 4: load rules",charIndex:1222},{level:2,title:"Step 5: Optimize performance",slug:"step-5-optimize-performance",normalizedTitle:"step 5: optimize performance",charIndex:1354},{level:2,title:"Step 6: Restart nginx",slug:"step-6-restart-nginx",normalizedTitle:"step 6: restart nginx",charIndex:1810},{level:2,title:"Step 7: Testing",slug:"step-7-testing",normalizedTitle:"step 7: testing",charIndex:2037},{level:2,title:"Step 8: Handling false positives",slug:"step-8-handling-false-positives",normalizedTitle:"step 8: handling false positives",charIndex:2179}],headersStr:"Step 1: Download the rule set Step 2: Copy the rules file Step 3: Edit rules Step 4: Load Rules Step 5: Optimize performance Step 6: Restart nginx Step 7: Testing Step 8: Handling false positives",content:"# Enable ModSecurity\n\nThe default rules provided by this project are very easy to bypass and many users have difficulty maintaining a reliable set of rules.\n\nIn this case, you can enable ModSecurity and load the OWSAP (Open Web Application Security Project) core rule set to strengthen the protection.\n\n\n# Step 1: Download the rule set\n\ncd /usr/local/src\ngit clone https://github.com/SpiderLabs/ModSecurity.git\ngit clone https://github.com/coreruleset/coreruleset.git\n\n\n\n# Step 2: Copy the rules file\n\nmkdir -p /etc/nginx/rules/modsecurity\ncp coreruleset/crs-setup.conf.example /etc/nginx/rules/modsecurity/crs-setup.conf\ncp ModSecurity/modsecurity.conf-recommended /etc/nginx/rules/modsecurity/modsecurity.conf\ncp ModSecurity/unicode.mapping /etc/nginx/rules/modsecurity/unicode.mapping\ncp -r coreruleset/rules /etc/nginx/rules/modsecurity/owasp\n\n\n\n# Step 3: Edit rules\n\n 1. Edit /etc/nginx/rules/modsecurity/modsecurity.conf and change SecRuleEngine DetectionOnly to SecRuleEngine on.\n 2. Edit /etc/nginx/rules/modsecurity/modsecurity.conf and append the following at the end of the file.\n    \n    Include /usr/local/src/ngx_waf/assets/rules/crs-setup.conf\n    Include /etc/nginx/rules/modsecurity/owasp/*.conf\n    \n\n\n# Step 4: Load Rules\n\nEdit the nginx configuration file.\n\nwaf_modsecurity on file=/etc/nginx/rules/modsecurity/modsecurity.conf;\n\n\n\n# Step 5: Optimize performance\n\nEnabling rules causes a significant performance degradation due to the complexity of ModSecurity's rules engine, but this also gives it power.\n\nGenerally we do not need to inspect some static files, so we can optimize performance based on this.\n\nEdit the nginx configuration file.\n\nlocation ~* \\.(gif|jpg|png|jpeg|webp|bmp|swf)$ {\n    waf_modsecurity off;\n}\n\nlocation ~* \\.(html|htm|js|css)$ {\n    waf_modsecurity off;\n}\n\n\n\n# Step 6: Restart nginx\n\nnginx -s stop\nnginx\n\n\nWhy not nginx -s reload ?\n\n * ngin reload memory leak · Issue #2552 · SpiderLabs/ModSecurity\n * It often leads memory leak on nginx reload · Issue #2502 · SpiderLabs/ModSecurity\n\n\n# Step 7: Testing\n\nAt this point you should check your website to make sure that no false positives will cause your website to be abnormal.\n\n\n# Step 8: Handling false positives\n\n * Including OWASP ModSecurity Core Rule Set – Welcome to netnea\n * Handling False Positives with the OWASP ModSecurity Core Rule Set – Welcome to netnea\n * Reference Manual (v2.x) · SpiderLabs/ModSecurity Wiki",normalizedContent:"# enable modsecurity\n\nthe default rules provided by this project are very easy to bypass and many users have difficulty maintaining a reliable set of rules.\n\nin this case, you can enable modsecurity and load the owsap (open web application security project) core rule set to strengthen the protection.\n\n\n# step 1: download the rule set\n\ncd /usr/local/src\ngit clone https://github.com/spiderlabs/modsecurity.git\ngit clone https://github.com/coreruleset/coreruleset.git\n\n\n\n# step 2: copy the rules file\n\nmkdir -p /etc/nginx/rules/modsecurity\ncp coreruleset/crs-setup.conf.example /etc/nginx/rules/modsecurity/crs-setup.conf\ncp modsecurity/modsecurity.conf-recommended /etc/nginx/rules/modsecurity/modsecurity.conf\ncp modsecurity/unicode.mapping /etc/nginx/rules/modsecurity/unicode.mapping\ncp -r coreruleset/rules /etc/nginx/rules/modsecurity/owasp\n\n\n\n# step 3: edit rules\n\n 1. edit /etc/nginx/rules/modsecurity/modsecurity.conf and change secruleengine detectiononly to secruleengine on.\n 2. edit /etc/nginx/rules/modsecurity/modsecurity.conf and append the following at the end of the file.\n    \n    include /usr/local/src/ngx_waf/assets/rules/crs-setup.conf\n    include /etc/nginx/rules/modsecurity/owasp/*.conf\n    \n\n\n# step 4: load rules\n\nedit the nginx configuration file.\n\nwaf_modsecurity on file=/etc/nginx/rules/modsecurity/modsecurity.conf;\n\n\n\n# step 5: optimize performance\n\nenabling rules causes a significant performance degradation due to the complexity of modsecurity's rules engine, but this also gives it power.\n\ngenerally we do not need to inspect some static files, so we can optimize performance based on this.\n\nedit the nginx configuration file.\n\nlocation ~* \\.(gif|jpg|png|jpeg|webp|bmp|swf)$ {\n    waf_modsecurity off;\n}\n\nlocation ~* \\.(html|htm|js|css)$ {\n    waf_modsecurity off;\n}\n\n\n\n# step 6: restart nginx\n\nnginx -s stop\nnginx\n\n\nwhy not nginx -s reload ?\n\n * ngin reload memory leak · issue #2552 · spiderlabs/modsecurity\n * it often leads memory leak on nginx reload · issue #2502 · spiderlabs/modsecurity\n\n\n# step 7: testing\n\nat this point you should check your website to make sure that no false positives will cause your website to be abnormal.\n\n\n# step 8: handling false positives\n\n * including owasp modsecurity core rule set – welcome to netnea\n * handling false positives with the owasp modsecurity core rule set – welcome to netnea\n * reference manual (v2.x) · spiderlabs/modsecurity wiki",charsets:{cjk:!0}},{title:"Limit the rate per arbitrary URL",frontmatter:{title:"Limit the rate per arbitrary URL",lang:"en"},regularPath:"/practice/limit-the-rate-per-arbitrary-url.html",relativePath:"practice/limit-the-rate-per-arbitrary-url.md",key:"v-b91d9d08",path:"/practice/limit-the-rate-per-arbitrary-url.html",headers:[{level:2,title:"For LTS version",slug:"for-lts-version",normalizedTitle:"for lts version",charIndex:189},{level:2,title:"For 'Current' version",slug:"for-current-version",normalizedTitle:"for 'current' version",charIndex:496}],headersStr:"For LTS version For 'Current' version",content:"# Limit the rate per arbitrary URL\n\nSometimes you may want to limit the request rate for different paths or files, such as using different rate limits for static and dynamic resources.\n\n\n# For LTS version\n\n# Limit the request rate for static resources to 10,000 requests per minute.\nlocation /static/ {\n    waf_cc_deny rate=10000r/m duration=1h;\n}\n\n# Limit the request rate for dynamic resources to 2,000 requests per minute.\nlocation /dynamic/ {\n    waf_cc_deny rate=2000r/m duration=1h;\n}\n\n\n\n# For 'Current' version\n\nhttp {\n    waf_zone name=waf size=20m;\n    server {\n        # Limit the request rate for static resources to 10,000 requests per minute.\n        location /static/ {\n            waf_cc_deny rate=10000r/m duration=1h zone=waf:cc_static;\n        }\n\n        # Limit the request rate for dynamic resources to 2,000 requests per minute.\n        location /dynamic/ {\n            waf_cc_deny rate=2000r/m duration=1h zone=waf:cc_dynamic;\n        }\n    }\n}\n",normalizedContent:"# limit the rate per arbitrary url\n\nsometimes you may want to limit the request rate for different paths or files, such as using different rate limits for static and dynamic resources.\n\n\n# for lts version\n\n# limit the request rate for static resources to 10,000 requests per minute.\nlocation /static/ {\n    waf_cc_deny rate=10000r/m duration=1h;\n}\n\n# limit the request rate for dynamic resources to 2,000 requests per minute.\nlocation /dynamic/ {\n    waf_cc_deny rate=2000r/m duration=1h;\n}\n\n\n\n# for 'current' version\n\nhttp {\n    waf_zone name=waf size=20m;\n    server {\n        # limit the request rate for static resources to 10,000 requests per minute.\n        location /static/ {\n            waf_cc_deny rate=10000r/m duration=1h zone=waf:cc_static;\n        }\n\n        # limit the request rate for dynamic resources to 2,000 requests per minute.\n        location /dynamic/ {\n            waf_cc_deny rate=2000r/m duration=1h zone=waf:cc_dynamic;\n        }\n    }\n}\n",charsets:{}},{title:"Overview",frontmatter:{title:"Overview",lang:"en"},regularPath:"/practice/overview.html",relativePath:"practice/overview.md",key:"v-52542808",path:"/practice/overview.html",headersStr:null,content:"# Overview\n\nBecause of the complexity of the module's directives, we have listed some common uses here to make it less difficult to use.\n\n * Limit the rate per arbitrary URL\n * Enable CAPTCHA\n * Enable CAPTCHA when blocking requests\n * Reduce bandwidth usage when attacked\n * Protect against distributed CC Attacks (distributed HTTP flooding)\n * Enable ModSecurity",normalizedContent:"# overview\n\nbecause of the complexity of the module's directives, we have listed some common uses here to make it less difficult to use.\n\n * limit the rate per arbitrary url\n * enable captcha\n * enable captcha when blocking requests\n * reduce bandwidth usage when attacked\n * protect against distributed cc attacks (distributed http flooding)\n * enable modsecurity",charsets:{}},{title:"Reduce bandwidth usage when attacked",frontmatter:{title:"Reduce bandwidth usage when attacked",lang:"en"},regularPath:"/practice/reduce-bandwidth-usage-when-attacked.html",relativePath:"practice/reduce-bandwidth-usage-when-attacked.md",key:"v-a2cc2b88",path:"/practice/reduce-bandwidth-usage-when-attacked.html",headers:[{level:2,title:"For LTS version",slug:"for-lts-version",normalizedTitle:"for lts version",charIndex:358},{level:2,title:"For Current version",slug:"for-current-version",normalizedTitle:"for current version",charIndex:409}],headersStr:"For LTS version For Current version",content:"# Reduce bandwidth usage when attacked\n\nWhen you are under CC attack, the attacker's IP has been banned by the CC protection, but your upstream and downstream bandwidth is still high. This is because the CC protection returns a status code of 503 and therefore hogs your bandwidth.\n\nYou can use the following configuration to reduce the bandwidth usage.\n\n\n# For LTS version\n\nwaf_http_status cc_deny=444;\n\n\n\n# For Current version\n\nwaf_action cc_deny=444;\n\n\nStatus code 444 is a non-standard HTTP status code defined by nginx that serves to close the connection and not send any data.\n\nWARNING\n\nIf you use status code 444, then your site will look like it doesn't exist to the user. This is because web site errors usually have HTTP status codes to indicate errors.\n\nIf you visit a website and not only do you not see the page, but also there is no error message, then the website probably does not exist.",normalizedContent:"# reduce bandwidth usage when attacked\n\nwhen you are under cc attack, the attacker's ip has been banned by the cc protection, but your upstream and downstream bandwidth is still high. this is because the cc protection returns a status code of 503 and therefore hogs your bandwidth.\n\nyou can use the following configuration to reduce the bandwidth usage.\n\n\n# for lts version\n\nwaf_http_status cc_deny=444;\n\n\n\n# for current version\n\nwaf_action cc_deny=444;\n\n\nstatus code 444 is a non-standard http status code defined by nginx that serves to close the connection and not send any data.\n\nwarning\n\nif you use status code 444, then your site will look like it doesn't exist to the user. this is because web site errors usually have http status codes to indicate errors.\n\nif you visit a website and not only do you not see the page, but also there is no error message, then the website probably does not exist.",charsets:{}},{title:"Development Plans",frontmatter:{title:"Development Plans",lang:"en"},regularPath:"/roadmap/overview.html",relativePath:"roadmap/overview.md",key:"v-79e8da30",path:"/roadmap/overview.html",headers:[{level:2,title:"List",slug:"list",normalizedTitle:"list",charIndex:179}],headersStr:"List",content:"# Development Plans\n\nThis page will list the development plan of the project, including but not limited to new features.\n\nLook forward to your feedbacks and suggestions soon!\n\n\n# List",normalizedContent:"# development plans\n\nthis page will list the development plan of the project, including but not limited to new features.\n\nlook forward to your feedbacks and suggestions soon!\n\n\n# list",charsets:{}},{title:"Home",frontmatter:{home:!0,heroImage:"https://cdn.jsdelivr.net/gh/ADD-SP/ngx_waf@master/assets/logo.png",heroText:"ngx_waf",tagline:"方便且高性能的 Nginx 防火墙模块。",actionText:"快速上手 →",actionLink:"/zh-cn/guide/overview.html",features:[{title:"基础防护",details:"如 IP 或 IP 网段的黑白名单、URI 黑白名单和请求体黑名单等。"},{title:"使用简单",details:"配置文件和规则文件书写简单，可读性强。"},{title:"高性能",details:"使用高效的 IP 检查算法和缓存机制。"},{title:"高级防护",details:"兼容 ModSecurity 的规则，你可以使用 OWASP 的核心规则库。"},{title:"友好爬虫验证",details:"支持验证 Google、Bing、Baidu 和 Yandex 的爬虫并自动放行，避免错误拦截。"},{title:"验证码",details:"支持三种验证码：hCaptcha、reCAPTCHAv2 和 reCAPTCHAv3。"}],footer:"BSD 3-Clause License | Copyright © 2020, ADD-SP"},regularPath:"/zh-cn/",relativePath:"zh-cn/README.md",key:"v-6cb04d69",path:"/zh-cn/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Protect against distributed CC Attacks (distributed HTTP flooding)",frontmatter:{title:"Protect against distributed CC Attacks (distributed HTTP flooding)",lang:"en"},regularPath:"/practice/protect-against-distributed-http-flood.html",relativePath:"practice/protect-against-distributed-http-flood.md",key:"v-f8976a88",path:"/practice/protect-against-distributed-http-flood.html",headers:[{level:2,title:"Enable CAPTCHA",slug:"enable-captcha",normalizedTitle:"enable captcha",charIndex:624},{level:2,title:"Enable Under-Attack-Mode",slug:"enable-under-attack-mode",normalizedTitle:"enable under-attack-mode",charIndex:664},{level:3,title:"LTS version",slug:"lts-version",normalizedTitle:"lts version",charIndex:1307},{level:3,title:"Current version",slug:"current-version",normalizedTitle:"current version",charIndex:1588},{level:2,title:"Reduce bandwidth usage when attacked",slug:"reduce-bandwidth-usage-when-attacked",normalizedTitle:"reduce bandwidth usage when attacked",charIndex:1809}],headersStr:"Enable CAPTCHA Enable Under-Attack-Mode LTS version Current version Reduce bandwidth usage when attacked",content:"# Protect against distributed CC Attacks (distributed HTTP flooding)\n\nCC is an attack that uses a large number of HTTP requests to exhaust the server's resources. This type of attack is known as HTTP flooding.\n\nIf the attacker uses a small number of IP, the protection is simpler because it is only necessary to limit rate of requests per IP. But if the attacker uses a large number of IP to attack, simply limiting the rate of requests per IP will not help. This type of CC attack using a large number of IP is called a distributed CC attack or distributed HTTP flooding.\n\nThis module provides some mitigation methods.\n\n\n# Enable CAPTCHA\n\nSee enable CAPTCHA.\n\n\n# Enable Under-Attack-Mode\n\nYou may have heard of Cloudflare's Under-Attack-Mode, this module's Under-Attack-Mode is completely different from Cloudflare's. Its role is to detect whether the client can correctly support cookies, such as sending cookies and correctly handle the response header Set-Cookie.\n\nYou can enable Under-Attack-Mode by copying the file under-attack.html from the project's directory assets/ and copying it to a path, then modifying the nginx configuration file.\n\nTo enable Under-Attack-Mode, you need to copy the file /path/to/ngx_waf/assets/under-attack.html to a path, and then modify the nginx configuration file.\n\n\n# LTS version\n\n * Enable Under-Attack-Mode for entire site.\n   \n   server {\n       waf_under_attack on file=/path/to/under_attack.html;\n   }\n   \n\n * Enable Under-Attack-Mode for a path.\n   \n   location /path {\n       waf_under_attack on file=/path/to/under_attack.html;\n   }\n   \n\n\n# Current version\n\n * Enable Under-Attack-Mode for entire site.\n   \n   server {\n       waf_under_attack on;\n   }\n   \n\n * Enable Under-Attack-Mode for a path.\n   \n   location /path {\n       waf_under_attack on;\n   }\n   \n\n\n# Reduce bandwidth usage when attacked\n\nSee reduce bandwidth usage when attacked.",normalizedContent:"# protect against distributed cc attacks (distributed http flooding)\n\ncc is an attack that uses a large number of http requests to exhaust the server's resources. this type of attack is known as http flooding.\n\nif the attacker uses a small number of ip, the protection is simpler because it is only necessary to limit rate of requests per ip. but if the attacker uses a large number of ip to attack, simply limiting the rate of requests per ip will not help. this type of cc attack using a large number of ip is called a distributed cc attack or distributed http flooding.\n\nthis module provides some mitigation methods.\n\n\n# enable captcha\n\nsee enable captcha.\n\n\n# enable under-attack-mode\n\nyou may have heard of cloudflare's under-attack-mode, this module's under-attack-mode is completely different from cloudflare's. its role is to detect whether the client can correctly support cookies, such as sending cookies and correctly handle the response header set-cookie.\n\nyou can enable under-attack-mode by copying the file under-attack.html from the project's directory assets/ and copying it to a path, then modifying the nginx configuration file.\n\nto enable under-attack-mode, you need to copy the file /path/to/ngx_waf/assets/under-attack.html to a path, and then modify the nginx configuration file.\n\n\n# lts version\n\n * enable under-attack-mode for entire site.\n   \n   server {\n       waf_under_attack on file=/path/to/under_attack.html;\n   }\n   \n\n * enable under-attack-mode for a path.\n   \n   location /path {\n       waf_under_attack on file=/path/to/under_attack.html;\n   }\n   \n\n\n# current version\n\n * enable under-attack-mode for entire site.\n   \n   server {\n       waf_under_attack on;\n   }\n   \n\n * enable under-attack-mode for a path.\n   \n   location /path {\n       waf_under_attack on;\n   }\n   \n\n\n# reduce bandwidth usage when attacked\n\nsee reduce bandwidth usage when attacked.",charsets:{}},{title:"配置语法",frontmatter:{title:"配置语法",lang:"zh-CN"},regularPath:"/zh-cn/advance/directive.html",relativePath:"zh-cn/advance/directive.md",key:"v-793f1988",path:"/zh-cn/advance/directive.html",headers:[{level:2,title:"waf",slug:"waf",normalizedTitle:"waf",charIndex:11},{level:2,title:"waf_zone",slug:"waf-zone",normalizedTitle:"waf_zone",charIndex:172},{level:2,title:"waf_rule_path",slug:"waf-rule-path",normalizedTitle:"waf_rule_path",charIndex:558},{level:2,title:"waf_mode",slug:"waf-mode",normalizedTitle:"waf_mode",charIndex:667},{level:2,title:"waf_cc_deny",slug:"waf-cc-deny",normalizedTitle:"waf_cc_deny",charIndex:322},{level:2,title:"waf_cache",slug:"waf-cache",normalizedTitle:"waf_cache",charIndex:1935},{level:2,title:"waf_modsecurity",slug:"waf-modsecurity",normalizedTitle:"waf_modsecurity",charIndex:3986},{level:2,title:"waf_modsecurity_transaction_id",slug:"waf-modsecurity-transaction-id",normalizedTitle:"waf_modsecurity_transaction_id",charIndex:4946},{level:2,title:"waf_captcha",slug:"waf-captcha",normalizedTitle:"waf_captcha",charIndex:5313},{level:2,title:"waf_verify_bot",slug:"waf-verify-bot",normalizedTitle:"waf_verify_bot",charIndex:6690},{level:2,title:"waf_under_attack",slug:"waf-under-attack",normalizedTitle:"waf_under_attack",charIndex:7377},{level:2,title:"waf_priority",slug:"waf-priority",normalizedTitle:"waf_priority",charIndex:8365},{level:2,title:"waf_http_status",slug:"waf-http-status",normalizedTitle:"waf_http_status",charIndex:9153},{level:2,title:"waf_action",slug:"waf-action",normalizedTitle:"waf_action",charIndex:9488},{level:2,title:"waf_block_page",slug:"waf-block-page",normalizedTitle:"waf_block_page",charIndex:10120}],headersStr:"waf waf_zone waf_rule_path waf_mode waf_cc_deny waf_cache waf_modsecurity waf_modsecurity_transaction_id waf_captcha waf_verify_bot waf_under_attack waf_priority waf_http_status waf_action waf_block_page",content:'# 配置语法\n\n\n# waf\n\n * 配置语法: waf <on | off | bypass >\n * 默认配置：waf off\n * 配置段: http, server, location\n\n开启、关闭或仅检测。\n\n * on: 开启防火墙。\n * off: 关闭防火墙。\n * bypass: 仅检测并记录日志，不拦截任何请求。\n\n\n# waf_zone\n\n * 配置语法: waf_zone <name=zone_name> [size=5m]\n * 默认配置：——\n * 配置段: http\n\n创建一段共享内存，用于记录一些需要跨进程共享的信息，因为 nginx 的多进程模型。\n\n在你使用某些配置时可能需要填写参数 zone，比如 waf_cc_deny。 填写格式为 name:tag，即名称和标签。名称和标签是 “多对多” 的关系，但是对于同一个 zone， 标签名不能重复。\n\n同一个 zone 内的全部标签共用该 zone 的全部的共享内存。出于性能考虑，建议为每个 server 段创建一个 zone， 最好不要多个 server 段共用一个 zone，因为访问共享内存需要上锁，要尽量减少上锁的次数。\n\n估算所需的内存大小\n\n经过估计，1M 的内存至少可以记录 4096 个 IP。\n\n\n# waf_rule_path\n\n * 配置语法: waf_rule_path <dir>\n * 默认配置：——\n * 配置段: http, server, location\n\n规则文件所在目录，且必须以/结尾。\n\n\n# waf_mode\n\n * 配置语法: waf_mode <mode_type> ...\n * 默认配置：——\n * 配置段: http, server, location\n\n指定防火墙的工作模式，至少指定一个模式，最多指定八个模式。\n\nmode_type具有下列取值（不区分大小写）:\n\n * GET: 当Http.Method=GET时启动检查。\n * HEAD: 当Http.Method=HEAD时启动检查。\n * POST: 当Http.Method=POST时启动检查。\n * PUT: 当Http.Method=PUT时启动检查。\n * DELETE: 当Http.Method=DELETE时启动检查。\n * MKCOL: 当Http.Method=MKCOL时启动检查。\n * COPY: 当Http.Method=COPY时启动检查。\n * MOVE: 当Http.Method=MOVE时启动检查。\n * OPTIONS: 当Http.Method=OPTIONS时启动检查。\n * PROPFIN: 当Http.Method=PROPFIN时启动检查。\n * PROPPATCH: 当Http.Method=PROPPATCH时启动检查。\n * LOCK: 当Http.Method=LOCK时启动检查。\n * UNLOCK: 当Http.Method=UNLOCK时启动检查。\n * PATCH: 当Http.Method=PATCH时启动检查。\n * TRAC: 当Http.Method=TRAC时启动检查。\n * CMN-METH：等价于 HEAD GET POST。\n * ALL-METH：任意的 HTTP 请求方法都会启动检查。\n * IP: 启用 IP 地址的检查规则。\n * URL: 启用 url 的检查规则。\n * RBODY: 启用 POST 请求体的检查规则。\n * ARGS: 启用 args 的检查规则。\n * UA: 启用 user-agent 的检查规则。\n * COOKIE: 启用 cookie 的检查规则。\n * REFERER: 启用 referer 的检查规则。\n * CC: 启用 CC 防御。当你启用了此模式，你必须设置 waf_cc_deny。\n * ADV：启用高级规则。\n * LIB-INJECTION-SQLI：使用 libinjection 检测 SQL 注入。\n * LIB-INJECTION-XSS：使用 libinjection 检测 XSS 攻击。\n * LIB-INJECTION：等价于 LIB-INJECTION-SQLI LIB-INJECTION-XSS。\n * CACHE：启用缓存。启用此模式后会缓存检查的结果，下次检查相同的目标时就不需要重复检查了。不过不会缓存 POST 体的检查结果。比如一个 URL 经过检查后并没有在黑名单中，那么下次检查相同的 URL 时就无需再次检查 URL 黑名单了。当你启用了此模式，你必须设置 waf_cache。\n * STD：标准工作模式，等价于 HEAD GET POST IP URL RBODY ARGS UA CC CACHE LIB-INJECTION-SQLI。\n * STATIC：适用于静态站点的工作模式，等价于 HEAD GET IP URL UA CC CACHE。\n * DYNAMIC：适用于动态站点的工作模式，等价于 HEAD GET POST IP URL ARGS UA RBODY COOKIE CC CACHE LIB-INJECTION-SQLI。\n * FULL: 启用所有的模式。\n * [数据删除]: 启用此模式会[数据删除]。\n\n您可以通过在某个 mode_type 前增加 ! 前缀来关闭该模式，下面是一个例子。 表示使用标准的工作模式，但是不检查 User-Agent。\n\nwaf_mode STD !UA;\n\n\n注意\n\n如果同时启用两个及以上的存在冲突的模式，则靠右的模式会覆盖它左边的模式。下面的例子表示检查 User-Agent。\n\nwaf_mode !UA STD;\n\n\n注意\n\nCC是独立于其它模式的模式，其生效与否不受到其它模式的影响。典型情况如URL模式会受到GET模式的影响，因为如果不使用GET模式，那么在收到GET请求时就不会启动检查，自然也就不会检查 URL，但是CC模式不会受到类似的影响。\n\n最新的 Current 版本中的变化\n\n参数 CC 和 CACHE 被删除。\n\n * STD：标准工作模式，等价于 HEAD GET POST IP URL RBODY ARGS UA。\n * STATIC：适用于静态站点的工作模式，等价于 HEAD GET IP URL UA。\n * DYNAMIC：适用于动态站点的工作模式，等价于 HEAD GET POST IP URL ARGS UA RBODY COOKIE。\n * LIBINJECTION：已移除。\n * LIBINJECTION-SQLI：已移除。\n * LIBINJECTION-XSS：已移除。\n * ADV：已移除。\n\n\n# waf_cc_deny\n\n * 配置语法: waf_cc_deny <rate=nr/m> [duration=1h] [size=20m]\n * 默认配置：——\n * 配置段: http, server, location\n\n设置 CC 防护相关的参数。\n\n * rate：表示一段时间内的请求次数的上限，如 500r/m。超出限制后会返回 503 状态码，并附带 Retry-After 响应头。\n * duration：表示超出第一个参数 rate 的限制后拉黑 IP 的时间，如 60s、60m、60h 和 60d，如不指定则默认为 1h。\n * size：用于设置记录 IP 访问次数的内存的大小，如 20m、2048k，不得小于 20m，如不指定则默认为 20m。当这段内存耗尽的时候程序会按照 LRU 策略清理一部分访问记录。\n\n最新的 Current 版本中的变化\n\n * 配置语法: waf_cc_deny <off | on> <rate=nr/t> <zone=name:tag> [duration=1h]\n * 默认配置：waf_cc_deny off\n * 配置段: server, location\n\n----------------------------------------\n\n * zone：指定所使用的共享内存和标签，用于记录 IP 的访问次数。当这段内存耗尽的时候程序会按照 LRU 策略清理一部分访问记录。\n * rate：表示一段时间内的请求次数的上限，如 500r/s、500r/60s、500r/m、500r/60m、500r/h、500r/60h 和 500r/d。超出限制后会返回 503 状态码，并附带 Retry-After 响应头。\n\n\n# waf_cache\n\n * 配置语法: waf_cache <capacity=n>\n * 默认配置：—\n * 配置段: http, server, location\n\n设置缓存规则检查结果相关的参数。\n\n * capacity：对于一些启用了缓存机制的检测项目，每个检测项目最多缓存多少个检测目标的检测结果。\n\n启用了缓存机制的检测项目\n\n启用了缓存机制的检测项目指除了 CC 防护、IP 黑白名单检测和 POST 检测之外的所有的检测项。\n\n性能优化建议\n\ncapacity 过小会导致频繁地淘汰缓存，增加内存碎片，降低性能。所以请根据实际应用场景合理地设置。\n\n最新的 Current 版本中的变化\n\n * 配置语法: waf_cache <off | on> [capacity=50]\n * 默认配置：waf_cache off capacity=50\n * 配置段: server, location\n\n\n# waf_modsecurity\n\n * 配置语法: waf_modsecurity <on | off> <file=*/path/to/modsecuriy/rules.conf*> <remote_key=key> <remote_url=url>\n * 默认配置：waf_modsecurity off\n * 配置段: http, server, location\n\n使用 ModSecurity 的规则。\n\n * file：规则文件的绝对路径。\n * remote_key：用于读取远程规则文件的密钥。\n * remote_url：用于读取远程文件的 URL。\n\n你可以参考 开启 ModSecurity | 最佳实践 中的用法。\n\n注意\n\n * 如果你使用了参数 remote_key，你必须同时使用参数 remote_url。\n * 如果你同时使用了参数 file、remote_key 和 remote_url，那么两份规则都会被加载。\n\n内存泄露\n\n内存泄露会导致系统的可用内存越来越少，性能逐渐降低直到程序或系统崩溃。\n\n当前 ModSecurity 的最新版 v3.0.5 存在内存泄露的 bug。\n\n * ngin reload memory leak · Issue #2552 · SpiderLabs/ModSecurity\n * It often leads memory leak on nginx reload · Issue #2502 · SpiderLabs/ModSecurity\n\n如果您开启了 ModSecurity，重载 nginx 时会出现内存泄露，长此以往可能会造成严重的后果。\n\n我们强烈建议您避免使用类似下面的命令。\n\nnginx -s reload\nsystemctl restart nginx\nservice nginx restart\n\n\n当您需要重载 nginx 时，强烈建议先关闭 nginx，然后启动 nginx。\n\nnginx -s stop && nginx\nsystemctl stop nginx && systemctl start nginx\nservice nginx stop && serivce nginx start\n\n\n\n# waf_modsecurity_transaction_id\n\n * 配置语法: waf_modsecurity_transaction_id <string>\n * 默认配置：waf_modsecurity off\n * 配置段: http, server, location\n\n指定 ModSecurity 的事务 ID。你可以在此处使用常量字符串和变量，下面是一个例子。\n\nserver {\n    location /file/ {\n        waf_modsecurity_transaction_id "$host-file";\n    }\n\n    location /api/ {\n        waf_modsecurity_transaction_id "$host-api";\n    }\n}\n\n\n\n# waf_captcha\n\n * 配置语法: waf_captcha <on | off> <prov=hCaptcha | reCAPTCHAv2:checkbox | reCAPTCHAv2:invisible | reCAPTCHAv3> [file=/full/path] [sitekey=your_sitekey] <secret=your_secret> [score=0.5] [expire=30m] [api=uri] [verify=/captcha] [max_fails=times:duration] [zone=name:tag]\n * 默认配置：waf_captcha off\n * 配置段: server, location\n\n使用验证码对客户端进行人机识别。\n\n * prov：验证码平台，包含 hCaptcha、reCAPTCHAv2 和 reCAPTCHAv3。\n * file：用于接入验证码的 HTML 文件的绝对路径，你可以从 assets/ 下找到对应的 HTML 文件并在文件中填写你的 Sitekey。如果你省略此参数，则会根据参数 prov 的值选择并使用一个内置的 HTML 文件（来自目录 assets/），此时你需要设置参数 sitekey。\n * sitekey：你从验证码平台获取的网站密钥，当且仅当参数 file 被省略时需要设置本参数。\n * secret：用于确认验证码的运行结果的密钥，你可以从对应的验证码平台获得。\n * socre：当 prov=reCAPTCHAv3 时，这个表示验证码打分结果的下限，低于这个值会被视为验证失败。默认值为 0.5。\n * expire：验证码的过期时间，过期后需要重新运行验证码。默认为 30 分钟。\n * api：验证码平台的提供给服务端的 API，用于确认验证码的运行结果。\n   * 如果 prov=hCaptcha，则默认值为 https://hcaptcha.com/siteverify。\n   * 如果 prov=reCAPTCHAv2:xxx，则默认值为 https://www.recaptcha.net/recaptcha/api/siteverify。\n   * 如果 prov=reCAPTCHAv3，则默认值为 https://www.recaptcha.net/recaptcha/api/siteverify。\n * verify：验证码向后端提交 token 所用的 url，默认为 /captcha。\n * max_fails：验证码最大刷新/试错次数，超出这个次数拉黑对应的 IP 一段时间。例如 max_fails=20:5m 表示连续刷新/试错二十次后拉黑 5 分钟。当你使用计费的验证码时这很有用。当你设置了此参数，你必须同时设置参数 zone。\n * zone：设置用于记录验证码试错次数的共享内存，当且仅当参数 max_fails 被设置时才需要设置此参数。\n\n你可以参考开启验证码 | 最佳实践中的用例。\n\n自定义验证码页面\n\n你可以以目录 assets/ 下的 HTML 文件为基础，自定义验证码页面，然后通过参数 file加载。\n\n不要忘记在 HTML 文件中填写 sitekey。\n\n\n# waf_verify_bot\n\n * 配置语法: waf_verify_bot <off | on | strict> [who] ...\n * 默认配置：waf_verify_bot off GoogleBot BingBot BaiduSpider YandexBot SogouSpider\n * 配置段: http, server, location\n\n验证友好的爬虫，比如百度蜘蛛。\n\n如果第一个参数是 on 则会停止后续的所有检查并放行本次请求。\n\n如果第一个参数是 strict，则如果某个请求的 User-Agent 正确，但是 IP 地址不正确则会被拦截（有误报）。\n\n * who：爬虫的名称，取值包括 GoogleBot、BingBot、BaiduSpider、 YandexBot 和 SogouSpider。如不指定则默认为全部。\n\n工作原理\n\n * Overview of Google crawlers (user agents) | Search Central\n * Googlebot Verification | Google Search Central | Google Developers\n * Which Crawlers Does Bing Use? - Bing Webmaster Tools\n * How to Verify Bingbot\n * 百度用户服务中心-站长平台\n * How to check that a robot belongs to Yandex\n * 搜狗资源平台_公平开放的交流平台\n\n\n# waf_under_attack\n\n * 配置语法: waf_under_attack <on | off> [uri=str]\n * 默认配置：waf_under_attack off\n * 配置段: http, server, location\n\n如果您的站点正在受到攻击可以尝试使用此配置。 开启后每个用户首次访问会强制延迟五秒，并自动跳转到 uri 所指向的网页。\n\n如果攻击者采用攻击方式不能完美支持 Cookie，本功能可以大幅度缓解此类攻击造成的影响。\n\n * uri: 可以是一个完整的网址，也可以是一个路径。比如 https://example.com/attack.html 或 /attack.html。\n\n你可以参考抵御分布式 CC 攻击（HTTP 洪水） | 最佳实践中的用例。\n\n小技巧\n\nuri 所指向的网页应该在五秒后自动跳转到用户想要访问的页面，页面的网址可以通过查询字符串获得，参数名为 target。\n\nassets/under-attack.html 是一个示例网页，你应该将这个文件拷贝到你的网站目录下，并正确地配置 uri。\n\n你自然也可以自己编写一个 html 文件，然后通过 uri 指向它。\n\n最新的 Current 版本中的变化\n\n在 LTS 版本中我们通过重定向实现了该功能，但是许多原因（如缓存和 CDN）会导致重定向失败，或者不能正常验证 Cookie。 所以我们修改了实现方式，我们通过修改响应体来返回指定的网页，这种方式不会导致 URI 的改变。\n\n * 配置语法: waf_under_attack <on | off> [file=full_path]\n * 默认配置：waf_under_attack off\n * 配置段: http, server, location\n\n同时我们增加了响应头 Cache-Control: no-store 以避免缓存带来的影响。\n\n * 移除了参数 uri。\n * 增加了参数 file，该参数的值应该是一个 HTML 文件的绝对路径，如 file=/path/to/under-attack.html。这个 HTML 只有一个功能，即五秒后自动刷新。当你省略此参数时，默认使用内置的 HTML 文件，它来自 assets/under-attack.html。\n\n\n# waf_priority\n\n * 配置语法: waf_priority "str"\n * 默认配置：waf_priority "W-IP IP CC UNDER-ATTACK W-URL URL ARGS UA W-REFERER REFERER COOKIE ADV"\n * 配置段: http, server, location\n\n设置各个检测项目的优先级，除了 POST 检测，POST 检测的优先级永远最低。\n\n * UNDER-ATTACK: 配置 waf_under_attack。\n * W-IP：IP 白名单检测\n * IP：IP 黑名单检测\n * CC：CC 防护\n * W-URL：URL 白名单检测\n * URL：URL 黑名单检测\n * ARGS：URL 参数（查询字符串）黑名单检测\n * UA：User-Agent 黑名单检测\n * W-REFERER：Referer 白名单检测\n * REFERER：Referer 黑名单检测\n * COOKIE：Cookie 黑名单检测\n * ADV：表示高级规则。\n\n警告\n\nstr 必须使用单引号或者双引号包裹，且 str 必须包含全部的检测项目。\n\n最新的 Current 版本中的变化\n\n * 默认配置：waf_priority "W-IP IP VERIFY-BOT CC CAPTCHA UNDER-ATTACK W-URL URL ARGS UA W-REFERER REFERER COOKIE POST MODSECURITY"\n\n----------------------------------------\n\n * VERIFY-BOT：友好爬虫验证。\n * CAPTCHA：验证码。\n * POST：请求体黑名单。\n * ADV：已经移除。\n * MODSECURITY。\n\n\n# waf_http_status\n\n * 配置语法: waf_http_status [general=http_status_code] [cc_deny=http_status_code]\n * 默认配置: waf_http_status general=403 cc_deny=503\n * 配置段: http, server, location\n\n此指令用于设置请求被拦截时返回的 HTTP 状态码。\n\n * general: 表示所有基于黑名单的检测项目触发后返回的 HTTP 状态码。\n * cc_deny：表示 CC 防护触发后返回的 HTTP 状态码。\n\n最新的 Current 版本中的变化\n\n此配置从 v10.0.0 开始被移除，相关的功能移动到配置 waf_action。\n\n\n# waf_action\n\n * 配置语法: waf_action [blacklist=action] [cc_deny=action] [modsecurity=action] [verify_bot=action] [zone=name:tag]\n * 默认配置: waf_action blacklist=403 cc_deny=503 modsecurity=follow verify_bot=403\n * 配置段: http, server, location\n\n此配置用于设置拦截一个请求时的动作，action 表示具体的动作，可以是以下值。\n\n * 4xx | 5xx：表示返回 HTTP 状态码。\n * CAPTCHA：表示启用验证码进行验证，只有通过验证才解除拉黑。同时，你必须设置 waf_captcha。\n * follow：尊重 ModSecurity 规则的动作，仅可用于参数 modsecurity。\n\n参数说明：\n\n * blacklist：表示所有基于黑名单的规则，比如 IP 黑名单、User-Agent 黑名单、URL 黑名单等。\n * cc_deny: CC 防护。\n * modsecurity：ModSecurity 规则。\n * verify_bot：友好爬虫验证。\n * zone：设置用于记录必要信息的共享内存，当且仅当某个 action 为 CAPTCHA 时才需要设置。\n\n\n# waf_block_page\n\n * 配置语法: waf_block_page < default | path/to/file.html >\n * 默认配置: ——\n * 配置段: http, server, location\n\n用于设置当请求被拦截时返回的页面，default 为一个内置的 HTML 文件，它来自 assets/block.html，[数据删除] 是 [数据删除]。',normalizedContent:'# 配置语法\n\n\n# waf\n\n * 配置语法: waf <on | off | bypass >\n * 默认配置：waf off\n * 配置段: http, server, location\n\n开启、关闭或仅检测。\n\n * on: 开启防火墙。\n * off: 关闭防火墙。\n * bypass: 仅检测并记录日志，不拦截任何请求。\n\n\n# waf_zone\n\n * 配置语法: waf_zone <name=zone_name> [size=5m]\n * 默认配置：——\n * 配置段: http\n\n创建一段共享内存，用于记录一些需要跨进程共享的信息，因为 nginx 的多进程模型。\n\n在你使用某些配置时可能需要填写参数 zone，比如 waf_cc_deny。 填写格式为 name:tag，即名称和标签。名称和标签是 “多对多” 的关系，但是对于同一个 zone， 标签名不能重复。\n\n同一个 zone 内的全部标签共用该 zone 的全部的共享内存。出于性能考虑，建议为每个 server 段创建一个 zone， 最好不要多个 server 段共用一个 zone，因为访问共享内存需要上锁，要尽量减少上锁的次数。\n\n估算所需的内存大小\n\n经过估计，1m 的内存至少可以记录 4096 个 ip。\n\n\n# waf_rule_path\n\n * 配置语法: waf_rule_path <dir>\n * 默认配置：——\n * 配置段: http, server, location\n\n规则文件所在目录，且必须以/结尾。\n\n\n# waf_mode\n\n * 配置语法: waf_mode <mode_type> ...\n * 默认配置：——\n * 配置段: http, server, location\n\n指定防火墙的工作模式，至少指定一个模式，最多指定八个模式。\n\nmode_type具有下列取值（不区分大小写）:\n\n * get: 当http.method=get时启动检查。\n * head: 当http.method=head时启动检查。\n * post: 当http.method=post时启动检查。\n * put: 当http.method=put时启动检查。\n * delete: 当http.method=delete时启动检查。\n * mkcol: 当http.method=mkcol时启动检查。\n * copy: 当http.method=copy时启动检查。\n * move: 当http.method=move时启动检查。\n * options: 当http.method=options时启动检查。\n * propfin: 当http.method=propfin时启动检查。\n * proppatch: 当http.method=proppatch时启动检查。\n * lock: 当http.method=lock时启动检查。\n * unlock: 当http.method=unlock时启动检查。\n * patch: 当http.method=patch时启动检查。\n * trac: 当http.method=trac时启动检查。\n * cmn-meth：等价于 head get post。\n * all-meth：任意的 http 请求方法都会启动检查。\n * ip: 启用 ip 地址的检查规则。\n * url: 启用 url 的检查规则。\n * rbody: 启用 post 请求体的检查规则。\n * args: 启用 args 的检查规则。\n * ua: 启用 user-agent 的检查规则。\n * cookie: 启用 cookie 的检查规则。\n * referer: 启用 referer 的检查规则。\n * cc: 启用 cc 防御。当你启用了此模式，你必须设置 waf_cc_deny。\n * adv：启用高级规则。\n * lib-injection-sqli：使用 libinjection 检测 sql 注入。\n * lib-injection-xss：使用 libinjection 检测 xss 攻击。\n * lib-injection：等价于 lib-injection-sqli lib-injection-xss。\n * cache：启用缓存。启用此模式后会缓存检查的结果，下次检查相同的目标时就不需要重复检查了。不过不会缓存 post 体的检查结果。比如一个 url 经过检查后并没有在黑名单中，那么下次检查相同的 url 时就无需再次检查 url 黑名单了。当你启用了此模式，你必须设置 waf_cache。\n * std：标准工作模式，等价于 head get post ip url rbody args ua cc cache lib-injection-sqli。\n * static：适用于静态站点的工作模式，等价于 head get ip url ua cc cache。\n * dynamic：适用于动态站点的工作模式，等价于 head get post ip url args ua rbody cookie cc cache lib-injection-sqli。\n * full: 启用所有的模式。\n * [数据删除]: 启用此模式会[数据删除]。\n\n您可以通过在某个 mode_type 前增加 ! 前缀来关闭该模式，下面是一个例子。 表示使用标准的工作模式，但是不检查 user-agent。\n\nwaf_mode std !ua;\n\n\n注意\n\n如果同时启用两个及以上的存在冲突的模式，则靠右的模式会覆盖它左边的模式。下面的例子表示检查 user-agent。\n\nwaf_mode !ua std;\n\n\n注意\n\ncc是独立于其它模式的模式，其生效与否不受到其它模式的影响。典型情况如url模式会受到get模式的影响，因为如果不使用get模式，那么在收到get请求时就不会启动检查，自然也就不会检查 url，但是cc模式不会受到类似的影响。\n\n最新的 current 版本中的变化\n\n参数 cc 和 cache 被删除。\n\n * std：标准工作模式，等价于 head get post ip url rbody args ua。\n * static：适用于静态站点的工作模式，等价于 head get ip url ua。\n * dynamic：适用于动态站点的工作模式，等价于 head get post ip url args ua rbody cookie。\n * libinjection：已移除。\n * libinjection-sqli：已移除。\n * libinjection-xss：已移除。\n * adv：已移除。\n\n\n# waf_cc_deny\n\n * 配置语法: waf_cc_deny <rate=nr/m> [duration=1h] [size=20m]\n * 默认配置：——\n * 配置段: http, server, location\n\n设置 cc 防护相关的参数。\n\n * rate：表示一段时间内的请求次数的上限，如 500r/m。超出限制后会返回 503 状态码，并附带 retry-after 响应头。\n * duration：表示超出第一个参数 rate 的限制后拉黑 ip 的时间，如 60s、60m、60h 和 60d，如不指定则默认为 1h。\n * size：用于设置记录 ip 访问次数的内存的大小，如 20m、2048k，不得小于 20m，如不指定则默认为 20m。当这段内存耗尽的时候程序会按照 lru 策略清理一部分访问记录。\n\n最新的 current 版本中的变化\n\n * 配置语法: waf_cc_deny <off | on> <rate=nr/t> <zone=name:tag> [duration=1h]\n * 默认配置：waf_cc_deny off\n * 配置段: server, location\n\n----------------------------------------\n\n * zone：指定所使用的共享内存和标签，用于记录 ip 的访问次数。当这段内存耗尽的时候程序会按照 lru 策略清理一部分访问记录。\n * rate：表示一段时间内的请求次数的上限，如 500r/s、500r/60s、500r/m、500r/60m、500r/h、500r/60h 和 500r/d。超出限制后会返回 503 状态码，并附带 retry-after 响应头。\n\n\n# waf_cache\n\n * 配置语法: waf_cache <capacity=n>\n * 默认配置：—\n * 配置段: http, server, location\n\n设置缓存规则检查结果相关的参数。\n\n * capacity：对于一些启用了缓存机制的检测项目，每个检测项目最多缓存多少个检测目标的检测结果。\n\n启用了缓存机制的检测项目\n\n启用了缓存机制的检测项目指除了 cc 防护、ip 黑白名单检测和 post 检测之外的所有的检测项。\n\n性能优化建议\n\ncapacity 过小会导致频繁地淘汰缓存，增加内存碎片，降低性能。所以请根据实际应用场景合理地设置。\n\n最新的 current 版本中的变化\n\n * 配置语法: waf_cache <off | on> [capacity=50]\n * 默认配置：waf_cache off capacity=50\n * 配置段: server, location\n\n\n# waf_modsecurity\n\n * 配置语法: waf_modsecurity <on | off> <file=*/path/to/modsecuriy/rules.conf*> <remote_key=key> <remote_url=url>\n * 默认配置：waf_modsecurity off\n * 配置段: http, server, location\n\n使用 modsecurity 的规则。\n\n * file：规则文件的绝对路径。\n * remote_key：用于读取远程规则文件的密钥。\n * remote_url：用于读取远程文件的 url。\n\n你可以参考 开启 modsecurity | 最佳实践 中的用法。\n\n注意\n\n * 如果你使用了参数 remote_key，你必须同时使用参数 remote_url。\n * 如果你同时使用了参数 file、remote_key 和 remote_url，那么两份规则都会被加载。\n\n内存泄露\n\n内存泄露会导致系统的可用内存越来越少，性能逐渐降低直到程序或系统崩溃。\n\n当前 modsecurity 的最新版 v3.0.5 存在内存泄露的 bug。\n\n * ngin reload memory leak · issue #2552 · spiderlabs/modsecurity\n * it often leads memory leak on nginx reload · issue #2502 · spiderlabs/modsecurity\n\n如果您开启了 modsecurity，重载 nginx 时会出现内存泄露，长此以往可能会造成严重的后果。\n\n我们强烈建议您避免使用类似下面的命令。\n\nnginx -s reload\nsystemctl restart nginx\nservice nginx restart\n\n\n当您需要重载 nginx 时，强烈建议先关闭 nginx，然后启动 nginx。\n\nnginx -s stop && nginx\nsystemctl stop nginx && systemctl start nginx\nservice nginx stop && serivce nginx start\n\n\n\n# waf_modsecurity_transaction_id\n\n * 配置语法: waf_modsecurity_transaction_id <string>\n * 默认配置：waf_modsecurity off\n * 配置段: http, server, location\n\n指定 modsecurity 的事务 id。你可以在此处使用常量字符串和变量，下面是一个例子。\n\nserver {\n    location /file/ {\n        waf_modsecurity_transaction_id "$host-file";\n    }\n\n    location /api/ {\n        waf_modsecurity_transaction_id "$host-api";\n    }\n}\n\n\n\n# waf_captcha\n\n * 配置语法: waf_captcha <on | off> <prov=hcaptcha | recaptchav2:checkbox | recaptchav2:invisible | recaptchav3> [file=/full/path] [sitekey=your_sitekey] <secret=your_secret> [score=0.5] [expire=30m] [api=uri] [verify=/captcha] [max_fails=times:duration] [zone=name:tag]\n * 默认配置：waf_captcha off\n * 配置段: server, location\n\n使用验证码对客户端进行人机识别。\n\n * prov：验证码平台，包含 hcaptcha、recaptchav2 和 recaptchav3。\n * file：用于接入验证码的 html 文件的绝对路径，你可以从 assets/ 下找到对应的 html 文件并在文件中填写你的 sitekey。如果你省略此参数，则会根据参数 prov 的值选择并使用一个内置的 html 文件（来自目录 assets/），此时你需要设置参数 sitekey。\n * sitekey：你从验证码平台获取的网站密钥，当且仅当参数 file 被省略时需要设置本参数。\n * secret：用于确认验证码的运行结果的密钥，你可以从对应的验证码平台获得。\n * socre：当 prov=recaptchav3 时，这个表示验证码打分结果的下限，低于这个值会被视为验证失败。默认值为 0.5。\n * expire：验证码的过期时间，过期后需要重新运行验证码。默认为 30 分钟。\n * api：验证码平台的提供给服务端的 api，用于确认验证码的运行结果。\n   * 如果 prov=hcaptcha，则默认值为 https://hcaptcha.com/siteverify。\n   * 如果 prov=recaptchav2:xxx，则默认值为 https://www.recaptcha.net/recaptcha/api/siteverify。\n   * 如果 prov=recaptchav3，则默认值为 https://www.recaptcha.net/recaptcha/api/siteverify。\n * verify：验证码向后端提交 token 所用的 url，默认为 /captcha。\n * max_fails：验证码最大刷新/试错次数，超出这个次数拉黑对应的 ip 一段时间。例如 max_fails=20:5m 表示连续刷新/试错二十次后拉黑 5 分钟。当你使用计费的验证码时这很有用。当你设置了此参数，你必须同时设置参数 zone。\n * zone：设置用于记录验证码试错次数的共享内存，当且仅当参数 max_fails 被设置时才需要设置此参数。\n\n你可以参考开启验证码 | 最佳实践中的用例。\n\n自定义验证码页面\n\n你可以以目录 assets/ 下的 html 文件为基础，自定义验证码页面，然后通过参数 file加载。\n\n不要忘记在 html 文件中填写 sitekey。\n\n\n# waf_verify_bot\n\n * 配置语法: waf_verify_bot <off | on | strict> [who] ...\n * 默认配置：waf_verify_bot off googlebot bingbot baiduspider yandexbot sogouspider\n * 配置段: http, server, location\n\n验证友好的爬虫，比如百度蜘蛛。\n\n如果第一个参数是 on 则会停止后续的所有检查并放行本次请求。\n\n如果第一个参数是 strict，则如果某个请求的 user-agent 正确，但是 ip 地址不正确则会被拦截（有误报）。\n\n * who：爬虫的名称，取值包括 googlebot、bingbot、baiduspider、 yandexbot 和 sogouspider。如不指定则默认为全部。\n\n工作原理\n\n * overview of google crawlers (user agents) | search central\n * googlebot verification | google search central | google developers\n * which crawlers does bing use? - bing webmaster tools\n * how to verify bingbot\n * 百度用户服务中心-站长平台\n * how to check that a robot belongs to yandex\n * 搜狗资源平台_公平开放的交流平台\n\n\n# waf_under_attack\n\n * 配置语法: waf_under_attack <on | off> [uri=str]\n * 默认配置：waf_under_attack off\n * 配置段: http, server, location\n\n如果您的站点正在受到攻击可以尝试使用此配置。 开启后每个用户首次访问会强制延迟五秒，并自动跳转到 uri 所指向的网页。\n\n如果攻击者采用攻击方式不能完美支持 cookie，本功能可以大幅度缓解此类攻击造成的影响。\n\n * uri: 可以是一个完整的网址，也可以是一个路径。比如 https://example.com/attack.html 或 /attack.html。\n\n你可以参考抵御分布式 cc 攻击（http 洪水） | 最佳实践中的用例。\n\n小技巧\n\nuri 所指向的网页应该在五秒后自动跳转到用户想要访问的页面，页面的网址可以通过查询字符串获得，参数名为 target。\n\nassets/under-attack.html 是一个示例网页，你应该将这个文件拷贝到你的网站目录下，并正确地配置 uri。\n\n你自然也可以自己编写一个 html 文件，然后通过 uri 指向它。\n\n最新的 current 版本中的变化\n\n在 lts 版本中我们通过重定向实现了该功能，但是许多原因（如缓存和 cdn）会导致重定向失败，或者不能正常验证 cookie。 所以我们修改了实现方式，我们通过修改响应体来返回指定的网页，这种方式不会导致 uri 的改变。\n\n * 配置语法: waf_under_attack <on | off> [file=full_path]\n * 默认配置：waf_under_attack off\n * 配置段: http, server, location\n\n同时我们增加了响应头 cache-control: no-store 以避免缓存带来的影响。\n\n * 移除了参数 uri。\n * 增加了参数 file，该参数的值应该是一个 html 文件的绝对路径，如 file=/path/to/under-attack.html。这个 html 只有一个功能，即五秒后自动刷新。当你省略此参数时，默认使用内置的 html 文件，它来自 assets/under-attack.html。\n\n\n# waf_priority\n\n * 配置语法: waf_priority "str"\n * 默认配置：waf_priority "w-ip ip cc under-attack w-url url args ua w-referer referer cookie adv"\n * 配置段: http, server, location\n\n设置各个检测项目的优先级，除了 post 检测，post 检测的优先级永远最低。\n\n * under-attack: 配置 waf_under_attack。\n * w-ip：ip 白名单检测\n * ip：ip 黑名单检测\n * cc：cc 防护\n * w-url：url 白名单检测\n * url：url 黑名单检测\n * args：url 参数（查询字符串）黑名单检测\n * ua：user-agent 黑名单检测\n * w-referer：referer 白名单检测\n * referer：referer 黑名单检测\n * cookie：cookie 黑名单检测\n * adv：表示高级规则。\n\n警告\n\nstr 必须使用单引号或者双引号包裹，且 str 必须包含全部的检测项目。\n\n最新的 current 版本中的变化\n\n * 默认配置：waf_priority "w-ip ip verify-bot cc captcha under-attack w-url url args ua w-referer referer cookie post modsecurity"\n\n----------------------------------------\n\n * verify-bot：友好爬虫验证。\n * captcha：验证码。\n * post：请求体黑名单。\n * adv：已经移除。\n * modsecurity。\n\n\n# waf_http_status\n\n * 配置语法: waf_http_status [general=http_status_code] [cc_deny=http_status_code]\n * 默认配置: waf_http_status general=403 cc_deny=503\n * 配置段: http, server, location\n\n此指令用于设置请求被拦截时返回的 http 状态码。\n\n * general: 表示所有基于黑名单的检测项目触发后返回的 http 状态码。\n * cc_deny：表示 cc 防护触发后返回的 http 状态码。\n\n最新的 current 版本中的变化\n\n此配置从 v10.0.0 开始被移除，相关的功能移动到配置 waf_action。\n\n\n# waf_action\n\n * 配置语法: waf_action [blacklist=action] [cc_deny=action] [modsecurity=action] [verify_bot=action] [zone=name:tag]\n * 默认配置: waf_action blacklist=403 cc_deny=503 modsecurity=follow verify_bot=403\n * 配置段: http, server, location\n\n此配置用于设置拦截一个请求时的动作，action 表示具体的动作，可以是以下值。\n\n * 4xx | 5xx：表示返回 http 状态码。\n * captcha：表示启用验证码进行验证，只有通过验证才解除拉黑。同时，你必须设置 waf_captcha。\n * follow：尊重 modsecurity 规则的动作，仅可用于参数 modsecurity。\n\n参数说明：\n\n * blacklist：表示所有基于黑名单的规则，比如 ip 黑名单、user-agent 黑名单、url 黑名单等。\n * cc_deny: cc 防护。\n * modsecurity：modsecurity 规则。\n * verify_bot：友好爬虫验证。\n * zone：设置用于记录必要信息的共享内存，当且仅当某个 action 为 captcha 时才需要设置。\n\n\n# waf_block_page\n\n * 配置语法: waf_block_page < default | path/to/file.html >\n * 默认配置: ——\n * 配置段: http, server, location\n\n用于设置当请求被拦截时返回的页面，default 为一个内置的 html 文件，它来自 assets/block.html，[数据删除] 是 [数据删除]。',charsets:{cjk:!0}},{title:"已知问题",frontmatter:{title:"已知问题",lang:"zh-CN"},regularPath:"/zh-cn/advance/issue.html",relativePath:"zh-cn/advance/issue.md",key:"v-0e4e8a08",path:"/zh-cn/advance/issue.html",headersStr:null,content:"# 已知问题\n\n这里只会列出存在于最新的稳定版的问题，已经在最新的稳定版中修复的问题不会列出。",normalizedContent:"# 已知问题\n\n这里只会列出存在于最新的稳定版的问题，已经在最新的稳定版中修复的问题不会列出。",charsets:{cjk:!0}},{title:"日志",frontmatter:{title:"日志",lang:"zh-CN"},regularPath:"/zh-cn/advance/log.html",relativePath:"zh-cn/advance/log.md",key:"v-614ab2dc",path:"/zh-cn/advance/log.html",headers:[{level:2,title:"拦截日志",slug:"拦截日志",normalizedTitle:"拦截日志",charIndex:9},{level:2,title:"调试日志",slug:"调试日志",normalizedTitle:"调试日志",charIndex:606},{level:2,title:"自定义日志格式",slug:"自定义日志格式",normalizedTitle:"自定义日志格式",charIndex:1595}],headersStr:"拦截日志 调试日志 自定义日志格式",content:'# 日志\n\n\n# 拦截日志\n\n拦截日志日志存储在 error.log 中。拦截记录的日志等级为 ALERT。 格式为 ngx_waf: [规则类型][触发的具体规则]。\n\n您可以使用下列命令快速查看拦截日志。\n\ncat /path/to/error.log | grep ngx_waf:\n\n\n下面是两个例子。\n\n2020/01/20 22:56:30 [alert] 6666#0: *30 ngx_waf: [BLACK-URL][(?i)(?:/\\.env$)], client: 192.168.1.1, server: example.com, request: "GET /v1/.env HTTP/1.1", host: "example.com", referrer: "http:/example.com/v1/.env"\n\n2020/01/20 22:58:40 [alert] 6667#0: *11 ngx_waf: [BLACK-POST][(?i)(?:select.+(?:from|limit))], client: 192.168.1.1, server: example.com, request: "POST /xmlrpc.php HTTP/1.1", host: "example.com", referrer: "https://example.com/"\n\n\n\n# 调试日志\n\n当您在 nginx 的配置文件中将错误日志的等级调整为 debug 时，会在 error.log 中输出调试日志， 用以排障。格式为 ngx_waf_debug: 调试信息。\n\n您可以使用下列命令快速查看调试日志。\n\ncat /path/to/error.log | grep ngx_waf_debug:\n\n\n下面是一段典型的调式日志，表示了一次 CC 防御检测的流程。\n\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Start the CC inspection process.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: The module context has been obtained.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: The configuration of the module has been obtained.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Detection has begun.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Shared memory is locked.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Shared memory is unlocked.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Detection is over.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: The CC detection process is fully completed.\n\n\n敏感信息泄露\n\n在最新的 Current 版本中，调试日志可能会包含一些敏感信息，比如服务器接收和发送的数据，验证码的密钥等。 提供调试日志时建议通过邮箱发送给我们。你可以在这里找到我们的邮箱。\n\n\n# 自定义日志格式\n\nnginx 允许自定义日志格式，并且一个 server 块可以同时写入多个日志文件， 这就给我我们自定义日志格式的机会。本模块提供了几个内置变量，稍加利用即可实现。 下面是一个例子。\n\n...\n\nhttp {\n    ...\n\n    log_format  main    \'$remote_addr - $remote_user [$time_local] "$request" \'\n                        \'$status $body_bytes_sent "$http_referer" \'\n                        \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    log_format yaml     \'- remote_addr: "$remote_addr"\\n\'\n                        \'  remote_user: "$remote_user"\\n\'\n                        \'  time_local: "$time_local"\\n\'\n                        \'  request: "$request"\\n\'\n                        \'  status: "$status"\\n\'\n                        \'  body_bytes_sent: "$body_bytes_sent"\\n\'\n                        \'  http_referer: "$http_referer"\\n\'\n                        \'  http_user_agent: "$http_user_agent"\\n\'\n                        \'  http_x_forwarded_for: "$http_x_forwarded_for"\\n\'\n                        \'  waf_blocked: $waf_blocked\\n\'\n                        \'  waf_spend: $waf_spend\\n\'\n                        \'  waf_rule_type: "$waf_rule_type"\\n\'\n                        \'  waf_rule_details: "$waf_rule_details"\\n\';\n\n\n    server {\n        ...\n\n        access_log  logs/access.log  main;\n        access_log  logs/access.yml  yaml   if=$waf_log;\n        access_log  logs/waf.yml     yaml   if=$waf_blocking_log;\n\n        ...\n    }\n\n    ...\n}\n\n...\n\n\n上述配置会有如下效果：\n\n * 常规的访问日志写入 logs/access.log 中。\n * YAML 格式的访问日志写入 logs/access.yml 中。\n * YAML 格式的拦截日志写入 logs/waf.yml 中。\n\n日志分析\n\n你可以自定义日志格式，然后通过程序分析并制作统计图表。\n\n关于 YAML 格式\n\nYAML 是一种可读性高的数据序列化格式，学习十分简单，只要能看懂 JSON，学习 YAML 也就一会儿的事情。 可以自行搜索 YAML 的格式说明。',normalizedContent:'# 日志\n\n\n# 拦截日志\n\n拦截日志日志存储在 error.log 中。拦截记录的日志等级为 alert。 格式为 ngx_waf: [规则类型][触发的具体规则]。\n\n您可以使用下列命令快速查看拦截日志。\n\ncat /path/to/error.log | grep ngx_waf:\n\n\n下面是两个例子。\n\n2020/01/20 22:56:30 [alert] 6666#0: *30 ngx_waf: [black-url][(?i)(?:/\\.env$)], client: 192.168.1.1, server: example.com, request: "get /v1/.env http/1.1", host: "example.com", referrer: "http:/example.com/v1/.env"\n\n2020/01/20 22:58:40 [alert] 6667#0: *11 ngx_waf: [black-post][(?i)(?:select.+(?:from|limit))], client: 192.168.1.1, server: example.com, request: "post /xmlrpc.php http/1.1", host: "example.com", referrer: "https://example.com/"\n\n\n\n# 调试日志\n\n当您在 nginx 的配置文件中将错误日志的等级调整为 debug 时，会在 error.log 中输出调试日志， 用以排障。格式为 ngx_waf_debug: 调试信息。\n\n您可以使用下列命令快速查看调试日志。\n\ncat /path/to/error.log | grep ngx_waf_debug:\n\n\n下面是一段典型的调式日志，表示了一次 cc 防御检测的流程。\n\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: start the cc inspection process.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: the module context has been obtained.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: the configuration of the module has been obtained.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: detection has begun.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: shared memory is locked.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: shared memory is unlocked.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: detection is over.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: the cc detection process is fully completed.\n\n\n敏感信息泄露\n\n在最新的 current 版本中，调试日志可能会包含一些敏感信息，比如服务器接收和发送的数据，验证码的密钥等。 提供调试日志时建议通过邮箱发送给我们。你可以在这里找到我们的邮箱。\n\n\n# 自定义日志格式\n\nnginx 允许自定义日志格式，并且一个 server 块可以同时写入多个日志文件， 这就给我我们自定义日志格式的机会。本模块提供了几个内置变量，稍加利用即可实现。 下面是一个例子。\n\n...\n\nhttp {\n    ...\n\n    log_format  main    \'$remote_addr - $remote_user [$time_local] "$request" \'\n                        \'$status $body_bytes_sent "$http_referer" \'\n                        \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    log_format yaml     \'- remote_addr: "$remote_addr"\\n\'\n                        \'  remote_user: "$remote_user"\\n\'\n                        \'  time_local: "$time_local"\\n\'\n                        \'  request: "$request"\\n\'\n                        \'  status: "$status"\\n\'\n                        \'  body_bytes_sent: "$body_bytes_sent"\\n\'\n                        \'  http_referer: "$http_referer"\\n\'\n                        \'  http_user_agent: "$http_user_agent"\\n\'\n                        \'  http_x_forwarded_for: "$http_x_forwarded_for"\\n\'\n                        \'  waf_blocked: $waf_blocked\\n\'\n                        \'  waf_spend: $waf_spend\\n\'\n                        \'  waf_rule_type: "$waf_rule_type"\\n\'\n                        \'  waf_rule_details: "$waf_rule_details"\\n\';\n\n\n    server {\n        ...\n\n        access_log  logs/access.log  main;\n        access_log  logs/access.yml  yaml   if=$waf_log;\n        access_log  logs/waf.yml     yaml   if=$waf_blocking_log;\n\n        ...\n    }\n\n    ...\n}\n\n...\n\n\n上述配置会有如下效果：\n\n * 常规的访问日志写入 logs/access.log 中。\n * yaml 格式的访问日志写入 logs/access.yml 中。\n * yaml 格式的拦截日志写入 logs/waf.yml 中。\n\n日志分析\n\n你可以自定义日志格式，然后通过程序分析并制作统计图表。\n\n关于 yaml 格式\n\nyaml 是一种可读性高的数据序列化格式，学习十分简单，只要能看懂 json，学习 yaml 也就一会儿的事情。 可以自行搜索 yaml 的格式说明。',charsets:{cjk:!0}},{title:"跨版本升级",frontmatter:{title:"跨版本升级",lang:"zh-CN"},regularPath:"/zh-cn/advance/upgrade.html",relativePath:"zh-cn/advance/upgrade.md",key:"v-f2d7ce48",path:"/zh-cn/advance/upgrade.html",headers:[{level:2,title:"从 9.x.x 升级到 10.x.x",slug:"从-9-x-x-升级到-10-x-x",normalizedTitle:"从 9.x.x 升级到 10.x.x",charIndex:36},{level:2,title:"从 8.x.x 升级到 9.x.x",slug:"从-8-x-x-升级到-9-x-x",normalizedTitle:"从 8.x.x 升级到 9.x.x",charIndex:235},{level:2,title:"从 7.x.x 升级到 8.x.x",slug:"从-7-x-x-升级到-8-x-x",normalizedTitle:"从 7.x.x 升级到 8.x.x",charIndex:633},{level:2,title:"从 6.x.x 升级到 7.x.x",slug:"从-6-x-x-升级到-7-x-x",normalizedTitle:"从 6.x.x 升级到 7.x.x",charIndex:1355},{level:2,title:"从 5.x.x 升级到 6.x.x",slug:"从-5-x-x-升级到-6-x-x",normalizedTitle:"从 5.x.x 升级到 6.x.x",charIndex:1426}],headersStr:"从 9.x.x 升级到 10.x.x 从 8.x.x 升级到 9.x.x 从 7.x.x 升级到 8.x.x 从 6.x.x 升级到 7.x.x 从 5.x.x 升级到 6.x.x",content:"# 跨版本升级\n\n升级模块均需要按照安装指南中的说明重新安装。\n\n\n# 从 9.x.x 升级到 10.x.x\n\n 1. 如果你使用了指令 waf_http_status，请根据文档将其替换为指令 waf_action。\n 2. 如果你设置了指令 waf_cc_deny 的参数 size，你应该根据文档使用参数 zone 来替代。\n 3. 如果你使用了指令 waf_cc_deny 的参数 CAPTCHA，你应该根据文档使用指令 waf_action 来替代。\n\n\n# 从 8.x.x 升级到 9.x.x\n\n 1. 安装 libmodsecurity 的动态链接库和头文件。\n 2. 在项目根目录下运行命令 git clone -b v2.3.0 https://github.com/troydhanson/uthash.git lib/uthash。\n 3. 指令 waf_mode 的一些参数被删除，如果你使用了这些参数请删除。\n    * LIBINJECTION\n    * LIBINJECTION-SQLI\n    * LIBINJECTION-XSS\n    * ADV\n 4. 删除高级规则的文件 advanced。\n 5. 指令 waf_priority 的参数 ADV 被删除，如果你使用了此参数请删除。\n 6. 为指令 waf_priority 新增了一个参数 MODSECURITY，如果你使用了此指令请将改参数填写到合适的位置。\n\n\n# 从 7.x.x 升级到 8.x.x\n\n 1. 安装 libcurl 的动态链接库和头文件。\n 2. 在项目根目录下运行命令 git clone https://github.com/DaveGamble/cJSON.git lib/cjson。\n 3. 在项目根目录下运行命令 git clone https://github.com/libinjection/libinjection.git lib/libinjection。\n 4. 如果你使用了指令 waf_mode 并且使用了该指令的参数 CC 或 CACHE，请删除这两个参数。这两个参数的功能已经分别移动进了指令 waf_cc_deny 和 waf_cache。\n 5. 如果你想开启 CC 防护，请修改指令 waf_cc_deny 的参数，例如将 waf_cc_deny rate=2000r/m duration=1h 改为 waf_cc_deny on rate=2000r/m duration=1h。\n 6. 如果你想开启缓存，请修改指令 waf_cache 的参数，例如将 waf_cache capacity=50 改为 waf_cache on capacity=50。\n 7. 如果你在 http 块中使用了指令 waf_cc_deny 或 waf_cache，请将这两个指令移动到更内层。\n 8. 如果你使用了指令 waf_cache 并且使用了该指令的参数 interval 或 percent，请删除这两个参数，这两个参数已经被移除。\n 9. 如果你使用了指令 waf_priority，请将 VERIFY-BOT 和 CAPTCHA 添加进去。\n\n\n# 从 6.x.x 升级到 7.x.x\n\n 1. 如果你在 http 块中使用了指令 waf_cc_deny，请将这个指令移动到更内层。\n\n\n# 从 5.x.x 升级到 6.x.x\n\n 1. 在规则目录下新建一个名为 advanced 的空文件。\n 2. 如果使用了配置项 waf_priority，可以将其删除或者按照文档中对该配置项的说明进行修改。",normalizedContent:"# 跨版本升级\n\n升级模块均需要按照安装指南中的说明重新安装。\n\n\n# 从 9.x.x 升级到 10.x.x\n\n 1. 如果你使用了指令 waf_http_status，请根据文档将其替换为指令 waf_action。\n 2. 如果你设置了指令 waf_cc_deny 的参数 size，你应该根据文档使用参数 zone 来替代。\n 3. 如果你使用了指令 waf_cc_deny 的参数 captcha，你应该根据文档使用指令 waf_action 来替代。\n\n\n# 从 8.x.x 升级到 9.x.x\n\n 1. 安装 libmodsecurity 的动态链接库和头文件。\n 2. 在项目根目录下运行命令 git clone -b v2.3.0 https://github.com/troydhanson/uthash.git lib/uthash。\n 3. 指令 waf_mode 的一些参数被删除，如果你使用了这些参数请删除。\n    * libinjection\n    * libinjection-sqli\n    * libinjection-xss\n    * adv\n 4. 删除高级规则的文件 advanced。\n 5. 指令 waf_priority 的参数 adv 被删除，如果你使用了此参数请删除。\n 6. 为指令 waf_priority 新增了一个参数 modsecurity，如果你使用了此指令请将改参数填写到合适的位置。\n\n\n# 从 7.x.x 升级到 8.x.x\n\n 1. 安装 libcurl 的动态链接库和头文件。\n 2. 在项目根目录下运行命令 git clone https://github.com/davegamble/cjson.git lib/cjson。\n 3. 在项目根目录下运行命令 git clone https://github.com/libinjection/libinjection.git lib/libinjection。\n 4. 如果你使用了指令 waf_mode 并且使用了该指令的参数 cc 或 cache，请删除这两个参数。这两个参数的功能已经分别移动进了指令 waf_cc_deny 和 waf_cache。\n 5. 如果你想开启 cc 防护，请修改指令 waf_cc_deny 的参数，例如将 waf_cc_deny rate=2000r/m duration=1h 改为 waf_cc_deny on rate=2000r/m duration=1h。\n 6. 如果你想开启缓存，请修改指令 waf_cache 的参数，例如将 waf_cache capacity=50 改为 waf_cache on capacity=50。\n 7. 如果你在 http 块中使用了指令 waf_cc_deny 或 waf_cache，请将这两个指令移动到更内层。\n 8. 如果你使用了指令 waf_cache 并且使用了该指令的参数 interval 或 percent，请删除这两个参数，这两个参数已经被移除。\n 9. 如果你使用了指令 waf_priority，请将 verify-bot 和 captcha 添加进去。\n\n\n# 从 6.x.x 升级到 7.x.x\n\n 1. 如果你在 http 块中使用了指令 waf_cc_deny，请将这个指令移动到更内层。\n\n\n# 从 5.x.x 升级到 6.x.x\n\n 1. 在规则目录下新建一个名为 advanced 的空文件。\n 2. 如果使用了配置项 waf_priority，可以将其删除或者按照文档中对该配置项的说明进行修改。",charsets:{cjk:!0}},{title:"规则优先级",frontmatter:{title:"规则优先级",lang:"zh-CN"},regularPath:"/zh-cn/advance/priority.html",relativePath:"zh-cn/advance/priority.md",key:"v-5866be48",path:"/zh-cn/advance/priority.html",headersStr:null,content:"# 规则优先级\n\n本模块着诸多检测项目，那么一定要规定各个检测项目的检测优先级，避免出现不合逻辑的检测结果。\n\n下面将按照优先级从高到底地列出所有的检测项目。\n\n 1.  IP 白名单检测\n 2.  IP 黑名单检测\n 3.  友好爬虫验证\n 4.  CC 防御检测\n 5.  验证码（CAPTCHA）\n 6.  Under-Attack 模式\n 7.  Url 白名单检测\n 8.  Url 黑名单检测\n 9.  Get 参数黑名单检测\n 10. User-Agent 黑名单检测\n 11. Referer 白名单检测\n 12. Referer 黑名单检测\n 13. Cookie 黑名单检测\n 14. Post 请求体黑名单\n 15. ModSecurity 的规则\n\n修改优先级\n\n您可以通过配置文件修改优先级，但是 POST 请求体检测的优先级不允许修改，它的优先级永远是最低的。详见 waf_priority。\n\n最新的 Current 版本中的变化\n\n允许通过指令 waf_priority 修改 POST 检查优先级。",normalizedContent:"# 规则优先级\n\n本模块着诸多检测项目，那么一定要规定各个检测项目的检测优先级，避免出现不合逻辑的检测结果。\n\n下面将按照优先级从高到底地列出所有的检测项目。\n\n 1.  ip 白名单检测\n 2.  ip 黑名单检测\n 3.  友好爬虫验证\n 4.  cc 防御检测\n 5.  验证码（captcha）\n 6.  under-attack 模式\n 7.  url 白名单检测\n 8.  url 黑名单检测\n 9.  get 参数黑名单检测\n 10. user-agent 黑名单检测\n 11. referer 白名单检测\n 12. referer 黑名单检测\n 13. cookie 黑名单检测\n 14. post 请求体黑名单\n 15. modsecurity 的规则\n\n修改优先级\n\n您可以通过配置文件修改优先级，但是 post 请求体检测的优先级不允许修改，它的优先级永远是最低的。详见 waf_priority。\n\n最新的 current 版本中的变化\n\n允许通过指令 waf_priority 修改 post 检查优先级。",charsets:{cjk:!0}},{title:"规则说明",frontmatter:{title:"规则说明",lang:"zh-CN"},regularPath:"/zh-cn/advance/rule.html",relativePath:"zh-cn/advance/rule.md",key:"v-4782cd2c",path:"/zh-cn/advance/rule.html",headers:[{level:2,title:"ip白名单",slug:"ip白名单",normalizedTitle:"ip白名单",charIndex:423},{level:2,title:"IP黑名单",slug:"ip黑名单",normalizedTitle:"ip黑名单",charIndex:709},{level:2,title:"url白名单",slug:"url白名单",normalizedTitle:"url白名单",charIndex:796},{level:2,title:"url黑名单",slug:"url黑名单",normalizedTitle:"url黑名单",charIndex:883},{level:2,title:"get参数黑名单",slug:"get参数黑名单",normalizedTitle:"get参数黑名单",charIndex:965},{level:2,title:"post请求体黑名单",slug:"post请求体黑名单",normalizedTitle:"post请求体黑名单",charIndex:1054},{level:2,title:"user-agent黑名单",slug:"user-agent黑名单",normalizedTitle:"user-agent黑名单",charIndex:1190},{level:2,title:"cookie黑名单",slug:"cookie黑名单",normalizedTitle:"cookie黑名单",charIndex:1298},{level:2,title:"referer白名单",slug:"referer白名单",normalizedTitle:"referer白名单",charIndex:1392},{level:2,title:"referer黑名单",slug:"referer黑名单",normalizedTitle:"referer黑名单",charIndex:1495}],headersStr:"ip白名单 IP黑名单 url白名单 url黑名单 get参数黑名单 post请求体黑名单 user-agent黑名单 cookie黑名单 referer白名单 referer黑名单",content:"# 规则说明\n\n本模块使用下列几种配置文件，所有的配置文件必须在同一目录下并保证 nginx 对其有读取权限。\n\n * IP 白名单，文件名为 white-ipv4 和 white-ipv6。\n * IP 黑名单，文件名为 ipv4 和 ipv6。\n * Url 白名单，文件名为 white-url。\n * Url 黑名单，文件名为 url。\n * Get 参数黑名单，文件名为 args。\n * Post 请求体黑名单，文件名为 post。\n * UserAgent 黑名单，文件名为 user-agent。\n * Cookie 黑名单，文件名为 cookie。\n * Referer 白名单，文件名为 white-referer。\n * Referer 黑名单，文件名为 referer。\n\n注意\n\n有些规则文件需要书写正则表达式，书写时每行一个正则表达式， 正则表达式遵循 PCRE 标准。\n\n注意\n\n高级规则仅在开发版中可用。\n\n\n# ip白名单\n\nip 白名单包括下面两个文件。\n\n * ipv4 白名单，文件名为 white-ipv4。\n * ipv6 白名单，文件名为 white-ipv6。\n\n书写时一行指定一个 IP 地址或者 IP 地址块。ipv4 地址必须使用「点分十进制表示法」， ipv6 地址必须使用 「冒号十六进制表示法」。下面举一些例子。\n\n指定单个 ipv4 地址。\n\n192.168.2.1\n\n\n指定一个 ipv4 地址块。\n\n192.168.2.0/24\n\n\n指定单个 ipv6 地址。\n\nFE80::1000\n\n\n指定一个 ipv6 地址块。\n\nFE80::/10\n\n\n\n# IP黑名单\n\nIP 黑名单包括下面两个文件。\n\n * ipv4 黑名单，文件名为 ipv4。\n * ipv6 黑名单，文件名为 ipv6。\n\n写法同 ip 白名单。\n\n\n# url白名单\n\nUrl 白名单的文件名为 white-url，书写规则时每行指定一个正则表达式， Url 被任何一个正则表达式匹配到就会直接放行，不进行后续的检查。\n\n\n# url黑名单\n\nUrl 黑名单的文件名为 url，书写规则时每行指定一个正则表达式， Url 被任何一个正则表达式匹配到就会被拦截，返回 403 状态码。\n\n\n# get参数黑名单\n\nGet 参数黑名单的文件名为 args，书写规则时每行指定一个正则表达式， Get 参数被任何一个正则表达式匹配到就会被拦截，返回 403 状态码。\n\n\n# post请求体黑名单\n\nPost 请求体黑名单的文件名为 post，书写规则时每行指定一个正则表达式， Post 请求体内的内容被任何一个正则表达式匹配到就会被拦截，返回 403 状态码。\n\n警告\n\n有时本模块不会执行 Post 请求体检查，详见常见问题与解答。\n\n\n# user-agent黑名单\n\nUserAgent 黑名单的文件名为 user-agent，书写规则时每行指定一个正则表达式， UserAgent 被任何一个正则表达式匹配到就会被拦截，返回 403 状态码。\n\n\n# cookie黑名单\n\nCookie 黑名单的文件名为 cookie，书写规则时每行指定一个正则表达式， Cookie 被任何一个正则表达式匹配到就会被拦截，返回 403 状态码。\n\n\n# referer白名单\n\nReferer 白名单的文件名为 white-referer，书写规则时每行指定一个正则表达式， Referer 被任何一个正则表达式匹配到就会直接放行，不进行后续的检查。\n\n\n# referer黑名单\n\nReferer 黑名单的文件名为 referer，书写规则时每行指定一个正则表达式， Referer 被任何一个正则表达式匹配到就会被拦截，返回 403 状态码。",normalizedContent:"# 规则说明\n\n本模块使用下列几种配置文件，所有的配置文件必须在同一目录下并保证 nginx 对其有读取权限。\n\n * ip 白名单，文件名为 white-ipv4 和 white-ipv6。\n * ip 黑名单，文件名为 ipv4 和 ipv6。\n * url 白名单，文件名为 white-url。\n * url 黑名单，文件名为 url。\n * get 参数黑名单，文件名为 args。\n * post 请求体黑名单，文件名为 post。\n * useragent 黑名单，文件名为 user-agent。\n * cookie 黑名单，文件名为 cookie。\n * referer 白名单，文件名为 white-referer。\n * referer 黑名单，文件名为 referer。\n\n注意\n\n有些规则文件需要书写正则表达式，书写时每行一个正则表达式， 正则表达式遵循 pcre 标准。\n\n注意\n\n高级规则仅在开发版中可用。\n\n\n# ip白名单\n\nip 白名单包括下面两个文件。\n\n * ipv4 白名单，文件名为 white-ipv4。\n * ipv6 白名单，文件名为 white-ipv6。\n\n书写时一行指定一个 ip 地址或者 ip 地址块。ipv4 地址必须使用「点分十进制表示法」， ipv6 地址必须使用 「冒号十六进制表示法」。下面举一些例子。\n\n指定单个 ipv4 地址。\n\n192.168.2.1\n\n\n指定一个 ipv4 地址块。\n\n192.168.2.0/24\n\n\n指定单个 ipv6 地址。\n\nfe80::1000\n\n\n指定一个 ipv6 地址块。\n\nfe80::/10\n\n\n\n# ip黑名单\n\nip 黑名单包括下面两个文件。\n\n * ipv4 黑名单，文件名为 ipv4。\n * ipv6 黑名单，文件名为 ipv6。\n\n写法同 ip 白名单。\n\n\n# url白名单\n\nurl 白名单的文件名为 white-url，书写规则时每行指定一个正则表达式， url 被任何一个正则表达式匹配到就会直接放行，不进行后续的检查。\n\n\n# url黑名单\n\nurl 黑名单的文件名为 url，书写规则时每行指定一个正则表达式， url 被任何一个正则表达式匹配到就会被拦截，返回 403 状态码。\n\n\n# get参数黑名单\n\nget 参数黑名单的文件名为 args，书写规则时每行指定一个正则表达式， get 参数被任何一个正则表达式匹配到就会被拦截，返回 403 状态码。\n\n\n# post请求体黑名单\n\npost 请求体黑名单的文件名为 post，书写规则时每行指定一个正则表达式， post 请求体内的内容被任何一个正则表达式匹配到就会被拦截，返回 403 状态码。\n\n警告\n\n有时本模块不会执行 post 请求体检查，详见常见问题与解答。\n\n\n# user-agent黑名单\n\nuseragent 黑名单的文件名为 user-agent，书写规则时每行指定一个正则表达式， useragent 被任何一个正则表达式匹配到就会被拦截，返回 403 状态码。\n\n\n# cookie黑名单\n\ncookie 黑名单的文件名为 cookie，书写规则时每行指定一个正则表达式， cookie 被任何一个正则表达式匹配到就会被拦截，返回 403 状态码。\n\n\n# referer白名单\n\nreferer 白名单的文件名为 white-referer，书写规则时每行指定一个正则表达式， referer 被任何一个正则表达式匹配到就会直接放行，不进行后续的检查。\n\n\n# referer黑名单\n\nreferer 黑名单的文件名为 referer，书写规则时每行指定一个正则表达式， referer 被任何一个正则表达式匹配到就会被拦截，返回 403 状态码。",charsets:{cjk:!0}},{title:"2.x.x",frontmatter:{title:"2.x.x",lang:"zh-CN"},regularPath:"/zh-cn/changes/2_x_x.html",relativePath:"zh-cn/changes/2_x_x.md",key:"v-2083487c",path:"/zh-cn/changes/2_x_x.html",headers:[{level:2,title:"[2.1.1] - 2020-12-10",slug:"_2-1-1-2020-12-10",normalizedTitle:"[2.1.1] - 2020-12-10",charIndex:123},{level:3,title:"新增",slug:"新增",normalizedTitle:"新增",charIndex:148},{level:3,title:"改动",slug:"改动",normalizedTitle:"改动",charIndex:155},{level:3,title:"修复",slug:"修复",normalizedTitle:"修复",charIndex:162},{level:2,title:"[2.1.0] - 2020-12-09",slug:"_2-1-0-2020-12-09",normalizedTitle:"[2.1.0] - 2020-12-09",charIndex:371},{level:3,title:"新增",slug:"新增-2",normalizedTitle:"新增",charIndex:148},{level:3,title:"改动",slug:"改动-2",normalizedTitle:"改动",charIndex:155},{level:3,title:"修复",slug:"修复-2",normalizedTitle:"修复",charIndex:162},{level:2,title:"[2.0.2] - 2020-12-07",slug:"_2-0-2-2020-12-07",normalizedTitle:"[2.0.2] - 2020-12-07",charIndex:464},{level:3,title:"新增",slug:"新增-3",normalizedTitle:"新增",charIndex:148},{level:3,title:"改动",slug:"改动-3",normalizedTitle:"改动",charIndex:155},{level:3,title:"修复",slug:"修复-3",normalizedTitle:"修复",charIndex:162},{level:2,title:"[2.0.1] - 2020-12-03",slug:"_2-0-1-2020-12-03",normalizedTitle:"[2.0.1] - 2020-12-03",charIndex:673},{level:3,title:"新增",slug:"新增-4",normalizedTitle:"新增",charIndex:148},{level:3,title:"改动",slug:"改动-4",normalizedTitle:"改动",charIndex:155},{level:3,title:"修复",slug:"修复-4",normalizedTitle:"修复",charIndex:162},{level:2,title:"[2.0.0] - 2020-09-29",slug:"_2-0-0-2020-09-29",normalizedTitle:"[2.0.0] - 2020-09-29",charIndex:954},{level:3,title:"新增",slug:"新增-5",normalizedTitle:"新增",charIndex:148},{level:3,title:"改动",slug:"改动-5",normalizedTitle:"改动",charIndex:155},{level:3,title:"修复",slug:"修复-5",normalizedTitle:"修复",charIndex:162},{level:2,title:"[1.0.1] - 2020-08-22",slug:"_1-0-1-2020-08-22",normalizedTitle:"[1.0.1] - 2020-08-22",charIndex:1434},{level:3,title:"新增",slug:"新增-6",normalizedTitle:"新增",charIndex:148},{level:3,title:"改动",slug:"改动-6",normalizedTitle:"改动",charIndex:155},{level:3,title:"修复",slug:"修复-6",normalizedTitle:"修复",charIndex:162},{level:2,title:"[1.0.0] - 2020-08-18",slug:"_1-0-0-2020-08-18",normalizedTitle:"[1.0.0] - 2020-08-18",charIndex:3348},{level:3,title:"新增",slug:"新增-7",normalizedTitle:"新增",charIndex:148},{level:3,title:"改动",slug:"改动-7",normalizedTitle:"改动",charIndex:155},{level:3,title:"修复",slug:"修复-7",normalizedTitle:"修复",charIndex:162}],headersStr:"[2.1.1] - 2020-12-10 新增 改动 修复 [2.1.0] - 2020-12-09 新增 改动 修复 [2.0.2] - 2020-12-07 新增 改动 修复 [2.0.1] - 2020-12-03 新增 改动 修复 [2.0.0] - 2020-09-29 新增 改动 修复 [1.0.1] - 2020-08-22 新增 改动 修复 [1.0.0] - 2020-08-18 新增 改动 修复",content:"# 更新日志（2.x.x）\n\n本文件的格式基于如何维护更新日志， 并且本项目遵守语义化版本。\n\n何为「不兼容的修改」？\n\n * 原有的配置文件可能无法使用，比如删除或者重命名了某个配置项。\n * 可能需要更新编译环境，比如安装新的依赖。\n\n\n# [2.1.1] - 2020-12-10\n\n\n# 新增\n\n\n# 改动\n\n\n# 修复\n\n * 修复了模块启动失败的 bug。此 bug 的报错信息为 nginx: [alert] could not open error log file: open() \"ngx_waf: /logs/error.log\" failed (2: No such file or directory)（0dfc46f）。\n\n----------------------------------------\n\n\n# [2.1.0] - 2020-12-09\n\n\n# 新增\n\n * 兼容了 Mainline 版本的 nginx（f31f906 & 65277d1）。\n\n\n# 改动\n\n\n# 修复\n\n\n# [2.0.2] - 2020-12-07\n\n\n# 新增\n\n\n# 改动\n\n\n# 修复\n\n * 修复了一个 CC 防御失效的 bug。此 bug 会导致当 waf_mult_mount 未启用时，CC 防御会失效（048fe5c）。\n\n * 修复了一个因错误的 #include 指令而导致编译失败的 bug（3fa298c）。\n\n----------------------------------------\n\n\n# [2.0.1] - 2020-12-03\n\n\n# 新增\n\n\n# 改动\n\n * 不再手动下载 uthash 依赖，改用 system library。可以使用 yum install uthash-devel 或 apt-get install uthash-dev 安装 system library（7cfc94b）。\n\n\n# 修复\n\n * 修复了因为宏的重定义导致的在 CentOS/RHEL 6 or 7 下编译失败的错误（28e1c8a & 566ae4a）。\n\n----------------------------------------\n\n\n# [2.0.0] - 2020-09-29\n\n\n# 新增\n\n * 支持以动态模块安装到 nginx 上，感谢 dvershinin的 PR（https://github.com/ADD-SP/ngx_waf/pull/4）。\n\n\n# 改动\n\n * 配置指令合并 (ba92cfd)。这些配置指令将被合并：waf_check_ipv4，waf_check_url，waf_check_args，waf_check_ua，waf_check_referer，waf_check_cookie，waf_check_post，waf_check_cookie，waf_cc_deny。合并后的新指令为waf_mode，详情见README。\n\n\n# 修复\n\n * 删除一个默认的 User-Agent 规则，规则内容为(?i)(?:Sogou web spider)，原因是会拦截非恶意的网络爬虫（827d4e5）。\n * 现在可以正确处理规则文件中的空行了（955cf2d）。\n\n----------------------------------------\n\n\n# [1.0.1] - 2020-08-22\n\n\n# 新增\n\n * 增加了新的配置项（3214fc8）\n   * waf_check_ipv4:\n     * 配置语法: waf_check_ipv4 [ on | off ];\n     * 默认值：on\n     * 配置段: server\n     * 作用：是否启用 IPV4 检查。\n   * waf_check_url:\n     * 配置语法: waf_check_url [ on | off ];\n     * 默认值：on\n     * 配置段: server\n     * 作用：是否启用 URL 检查。\n   * waf_check_args:\n     * 配置语法: waf_check_args [ on | off ];\n     * 默认值：on\n     * 配置段: server\n     * 作用：是否启用 Args 检查。\n   * waf_check_ua:\n     * 配置语法: waf_check_ua [ on | off ];\n     * 默认值：on\n     * 配置段: server\n     * 作用：是否启用 User-Agent 检查。\n   * waf_check_referer:\n     * 配置语法: waf_check_referer [ on | off ];\n     * 默认值：on\n     * 配置段: server\n     * 作用：是否启用 Referer 检查。\n   * waf_check_cookie:\n     * 配置语法: waf_check_cookie [ on | off ];\n     * 默认值：on\n     * 配置段: server\n     * 作用：是否启用 Cookie 检查。\n   * waf_check_post:\n     * 配置语法: waf_check_post [ on | off ];\n     * 默认值：off\n     * 配置段: server\n     * 作用：是否启用 POST 检查。\n   * waf_cc_deny:\n     * 配置语法: waf_cc_deny [ on | off ];\n     * 默认值：off\n     * 配置段: server\n     * 作用：是否启用 CC 防御。\n\n\n# 改动\n\n * waf_mult_mount现在只允许写在server段中（3214fc8）。\n   * waf_mult_mount:\n     * 配置语法: waf_mult_mount [ on | off ];\n     * 默认值：off\n     * 配置段: server\n     * 作用：进行多阶段检查，当nginx.conf存在地址重写的情况下（如rewrite配置）建议启用，反之建议关闭。\n * 更改现有的配置项关键字，删除了ngx_前缀（8b3e416）。\n   * waf:\n     * 配置语法: waf [ on | off ];\n     * 默认值：off\n     * 配置段: server\n     * 作用：是否启用本模块。\n   * waf_rule_path:\n     * 配置语法: waf_rule_path dir;\n     * 默认值：无\n     * 配置段: server\n     * 作用：规则文件所在目录，且必须以/结尾。\n   * waf_mult_mount:\n     * 配置语法: waf_mult_mount [ on | off ];\n     * 默认值：off\n     * 配置段: http\n     * 作用：进行多阶段检查，当nginx.conf存在地址重写的情况下（如rewrite配置）建议启用，反之建议关闭。\n * 更新 referer 的默认规则，具体一点就是拷贝rules/url的内容到rules/referer中（55f5e26）。\n\n\n# 修复\n\n * 修复 CC 防御功能检测逻辑的错误，该错误会导致实际的频率限制要远小于用户指定的限制，容易将正常访问识别为 CC 攻击（9cb51bb）（171721c）。\n * 现在会检查 rules/ipv4 和 rules/white-ipv4 这两个文件中的 IPV4 地址或地址块是否合法（fc09f04）（2e7f624）。\n\n----------------------------------------\n\n\n# [1.0.0] - 2020-08-18\n\n\n# 新增\n\n * 改进日志格式（bd112ec）。基本格式为xxxxx, ngx_waf: [拦截类型][对应规则], xxxxx，具体可看下面的例子。\n   \n   2020/01/20 22:56:30 [alert] 24289#0: *30 ngx_waf: [BLACK-URL][(?i)(?:/\\.env$)], client: 192.168.1.1, server: example.com, request: \"GET /v1/.env HTTP/1.1\", host: \"example.com\", referrer: \"http:/example.com/v1/.env\"\n   \n   2020/01/20 22:58:40 [alert] 24678#0: *11 ngx_waf: [BLACK-POST][(?i)(?:select.*(?:from|limit))], client: 192.168.1.1, server: example.com, request: \"POST /xmlrpc.php HTTP/1.1\", host: \"example.com\", referrer: \"https://example.com/\"\n   \n\n * 新增三个内置变量（92d6d84）\n   * $waf_blocked: 本次请求是否被本模块拦截，如果拦截了则其的值为'true',反之则为'false'。\n   * $waf_rule_type：如果本次请求被本模块拦截，则其值为触发的规则类型。下面是可能的取值。若没有生效则其值为'null'。\n     * 'BLACK-IPV4'\n     * 'BLACK-URL'\n     * 'BLACK-ARGS'\n     * 'BLACK-USER-AGENT'\n     * 'BLACK-REFERER'\n     * 'BLACK-COOKIE'\n     * 'BLACK-POST'\n   * '$waf_rule_details'：如果本次请求被本模块拦截，则其值为触发的具体的规则的内容。若没有生效则其值为'null'。\n * 支持过滤 POST 请求（b46641e）。\n * 新配置项ngx_waf_mult_mount用于增加拦截面（e1b500d），典型的应用场景是存在rewrite的情况下重写前后均会对 URL 进行一次检测。\n * 支持 CC 防御功能（3a93e19）。\n\n\n# 改动\n\n * 增加默认的 POST 过滤规则（68dd102）\n * 更新默认规则（55f0a48）。\n * 修改规则优先级（3c388c8）（248958d）（b46641e）（(92447a3)[https://github.com/ADD-SP/ngx_waf/commit/92447a39d6a36ab027b0ead0daa0fe2b3b74ff29]），现在的优先级为（靠上的优先生效）：\n   1.  IP 白名单\n   2.  IP 黑名单\n   3.  CC 防御\n   4.  URL 白名单\n   5.  URL 黑名单\n   6.  Args 黑名单\n   7.  UserAgent 黑名单\n   8.  Referer 白名单\n   9.  Referer 黑名单\n   10. Cookie 黑名单\n   11. POST 黑名单\n\n\n# 修复\n\n * IPV4 黑白名单功能失效（231f94a）。\n * 当 User-agent 为空时会触发 segmentation fault（bf33b36）。\n * 启用 CC 防御后会有内存泄漏（be58d18）。",normalizedContent:"# 更新日志（2.x.x）\n\n本文件的格式基于如何维护更新日志， 并且本项目遵守语义化版本。\n\n何为「不兼容的修改」？\n\n * 原有的配置文件可能无法使用，比如删除或者重命名了某个配置项。\n * 可能需要更新编译环境，比如安装新的依赖。\n\n\n# [2.1.1] - 2020-12-10\n\n\n# 新增\n\n\n# 改动\n\n\n# 修复\n\n * 修复了模块启动失败的 bug。此 bug 的报错信息为 nginx: [alert] could not open error log file: open() \"ngx_waf: /logs/error.log\" failed (2: no such file or directory)（0dfc46f）。\n\n----------------------------------------\n\n\n# [2.1.0] - 2020-12-09\n\n\n# 新增\n\n * 兼容了 mainline 版本的 nginx（f31f906 & 65277d1）。\n\n\n# 改动\n\n\n# 修复\n\n\n# [2.0.2] - 2020-12-07\n\n\n# 新增\n\n\n# 改动\n\n\n# 修复\n\n * 修复了一个 cc 防御失效的 bug。此 bug 会导致当 waf_mult_mount 未启用时，cc 防御会失效（048fe5c）。\n\n * 修复了一个因错误的 #include 指令而导致编译失败的 bug（3fa298c）。\n\n----------------------------------------\n\n\n# [2.0.1] - 2020-12-03\n\n\n# 新增\n\n\n# 改动\n\n * 不再手动下载 uthash 依赖，改用 system library。可以使用 yum install uthash-devel 或 apt-get install uthash-dev 安装 system library（7cfc94b）。\n\n\n# 修复\n\n * 修复了因为宏的重定义导致的在 centos/rhel 6 or 7 下编译失败的错误（28e1c8a & 566ae4a）。\n\n----------------------------------------\n\n\n# [2.0.0] - 2020-09-29\n\n\n# 新增\n\n * 支持以动态模块安装到 nginx 上，感谢 dvershinin的 pr（https://github.com/add-sp/ngx_waf/pull/4）。\n\n\n# 改动\n\n * 配置指令合并 (ba92cfd)。这些配置指令将被合并：waf_check_ipv4，waf_check_url，waf_check_args，waf_check_ua，waf_check_referer，waf_check_cookie，waf_check_post，waf_check_cookie，waf_cc_deny。合并后的新指令为waf_mode，详情见readme。\n\n\n# 修复\n\n * 删除一个默认的 user-agent 规则，规则内容为(?i)(?:sogou web spider)，原因是会拦截非恶意的网络爬虫（827d4e5）。\n * 现在可以正确处理规则文件中的空行了（955cf2d）。\n\n----------------------------------------\n\n\n# [1.0.1] - 2020-08-22\n\n\n# 新增\n\n * 增加了新的配置项（3214fc8）\n   * waf_check_ipv4:\n     * 配置语法: waf_check_ipv4 [ on | off ];\n     * 默认值：on\n     * 配置段: server\n     * 作用：是否启用 ipv4 检查。\n   * waf_check_url:\n     * 配置语法: waf_check_url [ on | off ];\n     * 默认值：on\n     * 配置段: server\n     * 作用：是否启用 url 检查。\n   * waf_check_args:\n     * 配置语法: waf_check_args [ on | off ];\n     * 默认值：on\n     * 配置段: server\n     * 作用：是否启用 args 检查。\n   * waf_check_ua:\n     * 配置语法: waf_check_ua [ on | off ];\n     * 默认值：on\n     * 配置段: server\n     * 作用：是否启用 user-agent 检查。\n   * waf_check_referer:\n     * 配置语法: waf_check_referer [ on | off ];\n     * 默认值：on\n     * 配置段: server\n     * 作用：是否启用 referer 检查。\n   * waf_check_cookie:\n     * 配置语法: waf_check_cookie [ on | off ];\n     * 默认值：on\n     * 配置段: server\n     * 作用：是否启用 cookie 检查。\n   * waf_check_post:\n     * 配置语法: waf_check_post [ on | off ];\n     * 默认值：off\n     * 配置段: server\n     * 作用：是否启用 post 检查。\n   * waf_cc_deny:\n     * 配置语法: waf_cc_deny [ on | off ];\n     * 默认值：off\n     * 配置段: server\n     * 作用：是否启用 cc 防御。\n\n\n# 改动\n\n * waf_mult_mount现在只允许写在server段中（3214fc8）。\n   * waf_mult_mount:\n     * 配置语法: waf_mult_mount [ on | off ];\n     * 默认值：off\n     * 配置段: server\n     * 作用：进行多阶段检查，当nginx.conf存在地址重写的情况下（如rewrite配置）建议启用，反之建议关闭。\n * 更改现有的配置项关键字，删除了ngx_前缀（8b3e416）。\n   * waf:\n     * 配置语法: waf [ on | off ];\n     * 默认值：off\n     * 配置段: server\n     * 作用：是否启用本模块。\n   * waf_rule_path:\n     * 配置语法: waf_rule_path dir;\n     * 默认值：无\n     * 配置段: server\n     * 作用：规则文件所在目录，且必须以/结尾。\n   * waf_mult_mount:\n     * 配置语法: waf_mult_mount [ on | off ];\n     * 默认值：off\n     * 配置段: http\n     * 作用：进行多阶段检查，当nginx.conf存在地址重写的情况下（如rewrite配置）建议启用，反之建议关闭。\n * 更新 referer 的默认规则，具体一点就是拷贝rules/url的内容到rules/referer中（55f5e26）。\n\n\n# 修复\n\n * 修复 cc 防御功能检测逻辑的错误，该错误会导致实际的频率限制要远小于用户指定的限制，容易将正常访问识别为 cc 攻击（9cb51bb）（171721c）。\n * 现在会检查 rules/ipv4 和 rules/white-ipv4 这两个文件中的 ipv4 地址或地址块是否合法（fc09f04）（2e7f624）。\n\n----------------------------------------\n\n\n# [1.0.0] - 2020-08-18\n\n\n# 新增\n\n * 改进日志格式（bd112ec）。基本格式为xxxxx, ngx_waf: [拦截类型][对应规则], xxxxx，具体可看下面的例子。\n   \n   2020/01/20 22:56:30 [alert] 24289#0: *30 ngx_waf: [black-url][(?i)(?:/\\.env$)], client: 192.168.1.1, server: example.com, request: \"get /v1/.env http/1.1\", host: \"example.com\", referrer: \"http:/example.com/v1/.env\"\n   \n   2020/01/20 22:58:40 [alert] 24678#0: *11 ngx_waf: [black-post][(?i)(?:select.*(?:from|limit))], client: 192.168.1.1, server: example.com, request: \"post /xmlrpc.php http/1.1\", host: \"example.com\", referrer: \"https://example.com/\"\n   \n\n * 新增三个内置变量（92d6d84）\n   * $waf_blocked: 本次请求是否被本模块拦截，如果拦截了则其的值为'true',反之则为'false'。\n   * $waf_rule_type：如果本次请求被本模块拦截，则其值为触发的规则类型。下面是可能的取值。若没有生效则其值为'null'。\n     * 'black-ipv4'\n     * 'black-url'\n     * 'black-args'\n     * 'black-user-agent'\n     * 'black-referer'\n     * 'black-cookie'\n     * 'black-post'\n   * '$waf_rule_details'：如果本次请求被本模块拦截，则其值为触发的具体的规则的内容。若没有生效则其值为'null'。\n * 支持过滤 post 请求（b46641e）。\n * 新配置项ngx_waf_mult_mount用于增加拦截面（e1b500d），典型的应用场景是存在rewrite的情况下重写前后均会对 url 进行一次检测。\n * 支持 cc 防御功能（3a93e19）。\n\n\n# 改动\n\n * 增加默认的 post 过滤规则（68dd102）\n * 更新默认规则（55f0a48）。\n * 修改规则优先级（3c388c8）（248958d）（b46641e）（(92447a3)[https://github.com/add-sp/ngx_waf/commit/92447a39d6a36ab027b0ead0daa0fe2b3b74ff29]），现在的优先级为（靠上的优先生效）：\n   1.  ip 白名单\n   2.  ip 黑名单\n   3.  cc 防御\n   4.  url 白名单\n   5.  url 黑名单\n   6.  args 黑名单\n   7.  useragent 黑名单\n   8.  referer 白名单\n   9.  referer 黑名单\n   10. cookie 黑名单\n   11. post 黑名单\n\n\n# 修复\n\n * ipv4 黑白名单功能失效（231f94a）。\n * 当 user-agent 为空时会触发 segmentation fault（bf33b36）。\n * 启用 cc 防御后会有内存泄漏（be58d18）。",charsets:{cjk:!0}},{title:"内置变量",frontmatter:{title:"内置变量",lang:"zh-CN"},regularPath:"/zh-cn/advance/variable.html",relativePath:"zh-cn/advance/variable.md",key:"v-158c9b2c",path:"/zh-cn/advance/variable.html",headers:[{level:2,title:"$waf_log",slug:"waf-log",normalizedTitle:"$waf_log",charIndex:119},{level:2,title:"$waf_blocking_log",slug:"waf-blocking-log",normalizedTitle:"$waf_blocking_log",charIndex:198},{level:2,title:"$waf_blocked",slug:"waf-blocked",normalizedTitle:"$waf_blocked",charIndex:284},{level:2,title:"$waf_spend",slug:"waf-spend",normalizedTitle:"$waf_spend",charIndex:347},{level:2,title:"$waf_rule_type",slug:"waf-rule-type",normalizedTitle:"$waf_rule_type",charIndex:410},{level:2,title:"$waf_rule_details",slug:"waf-rule-details",normalizedTitle:"$waf_rule_details",charIndex:748},{level:2,title:"$waf_rate",slug:"waf-rate",normalizedTitle:"$waf_rate",charIndex:813}],headersStr:"$waf_log $waf_blocking_log $waf_blocked $waf_spend $waf_rule_type $waf_rule_details $waf_rate",content:"# 内置变量\n\n在书写 nginx.conf 文件的时候不可避免地需要用到一些变量，如$remote_addr可以用来获取客户端 IP 地址。\n\n本模块增加了多个可用的变量。\n\n不能和指令 `if` 共用\n\n详见常见问题与解答。\n\n\n# $waf_log\n\n如果本次请求中防火墙进行了检查则不为空字符串，反之为空字符串。本变量主要用于 access_log 指令，详见 自定义日志格式。\n\n\n# $waf_blocking_log\n\n如果本次请求本被模块拦截则不为空字符串，反之则为空字符串。本变量主要用于 access_log 指令，详见 自定义日志格式。\n\n\n# $waf_blocked\n\n表示本次请求是否被本模块拦截，如果拦截了则其的值为'true',反之则为'false'。\n\n\n# $waf_spend\n\n表示本次检查花费了多少时间（毫秒），保留 5 位小数，舍入规则取决于具体 C 标准库的实现。\n\n\n# $waf_rule_type\n\n如果本次请求命中黑白名单规则，则其值为触发的规则类型。下面是可能的取值。若没有命中黑白名单规则则其值为''。\n\n * 'CC-DENY'\n * 'WHITE-IPV4'\n * 'WHITE-IPV6'\n * 'BLACK-IPV4'\n * 'BLACK-IPV6'\n * 'WHITE-URL'\n * 'BLACK-URL'\n * 'BLACK-ARGS'\n * 'BLACK-USER-AGENT'\n * 'WHITE-REFERER'\n * 'BLACK-REFERER'\n * 'BLACK-COOKIE'\n * 'BLACK-POST'\n * 'UNDER-ATTACK'\n * 'FAKE-BOT'\n * 'CAPTCHA'\n\n\n# $waf_rule_details\n\n如果本次请求被本模块拦截，则其值为触发的具体的规则的内容。若没有生效则其值为''。\n\n\n# $waf_rate\n\n一个整数，表示一个统计周期内当前 IP 的访问次数。",normalizedContent:"# 内置变量\n\n在书写 nginx.conf 文件的时候不可避免地需要用到一些变量，如$remote_addr可以用来获取客户端 ip 地址。\n\n本模块增加了多个可用的变量。\n\n不能和指令 `if` 共用\n\n详见常见问题与解答。\n\n\n# $waf_log\n\n如果本次请求中防火墙进行了检查则不为空字符串，反之为空字符串。本变量主要用于 access_log 指令，详见 自定义日志格式。\n\n\n# $waf_blocking_log\n\n如果本次请求本被模块拦截则不为空字符串，反之则为空字符串。本变量主要用于 access_log 指令，详见 自定义日志格式。\n\n\n# $waf_blocked\n\n表示本次请求是否被本模块拦截，如果拦截了则其的值为'true',反之则为'false'。\n\n\n# $waf_spend\n\n表示本次检查花费了多少时间（毫秒），保留 5 位小数，舍入规则取决于具体 c 标准库的实现。\n\n\n# $waf_rule_type\n\n如果本次请求命中黑白名单规则，则其值为触发的规则类型。下面是可能的取值。若没有命中黑白名单规则则其值为''。\n\n * 'cc-deny'\n * 'white-ipv4'\n * 'white-ipv6'\n * 'black-ipv4'\n * 'black-ipv6'\n * 'white-url'\n * 'black-url'\n * 'black-args'\n * 'black-user-agent'\n * 'white-referer'\n * 'black-referer'\n * 'black-cookie'\n * 'black-post'\n * 'under-attack'\n * 'fake-bot'\n * 'captcha'\n\n\n# $waf_rule_details\n\n如果本次请求被本模块拦截，则其值为触发的具体的规则的内容。若没有生效则其值为''。\n\n\n# $waf_rate\n\n一个整数，表示一个统计周期内当前 ip 的访问次数。",charsets:{cjk:!0}},{title:"3.x.x",frontmatter:{title:"3.x.x",lang:"zh-CN"},regularPath:"/zh-cn/changes/3_x_x.html",relativePath:"zh-cn/changes/3_x_x.md",key:"v-dab714c8",path:"/zh-cn/changes/3_x_x.html",headers:[{level:2,title:"[3.1.6] - 2021-03-07",slug:"_3-1-6-2021-03-07",normalizedTitle:"[3.1.6] - 2021-03-07",charIndex:123},{level:3,title:"修复",slug:"修复",normalizedTitle:"修复",charIndex:148},{level:2,title:"[3.1.5] - 2021-03-03",slug:"_3-1-5-2021-03-03",normalizedTitle:"[3.1.5] - 2021-03-03",charIndex:221},{level:3,title:"修复",slug:"修复-2",normalizedTitle:"修复",charIndex:148},{level:2,title:"[3.1.4] - 2021-03-02",slug:"_3-1-4-2021-03-02",normalizedTitle:"[3.1.4] - 2021-03-02",charIndex:346},{level:3,title:"改动",slug:"改动",normalizedTitle:"改动",charIndex:371},{level:2,title:"[3.1.3] - 2021-02-23",slug:"_3-1-3-2021-02-23",normalizedTitle:"[3.1.3] - 2021-02-23",charIndex:464},{level:3,title:"修复",slug:"修复-3",normalizedTitle:"修复",charIndex:148},{level:2,title:"[3.1.2] - 2021-02-17",slug:"_3-1-2-2021-02-17",normalizedTitle:"[3.1.2] - 2021-02-17",charIndex:562},{level:3,title:"修复",slug:"修复-4",normalizedTitle:"修复",charIndex:148},{level:2,title:"[3.1.1] - 2021-01-18",slug:"_3-1-1-2021-01-18",normalizedTitle:"[3.1.1] - 2021-01-18",charIndex:689},{level:3,title:"修复",slug:"修复-5",normalizedTitle:"修复",charIndex:148},{level:2,title:"[3.1.0] - 2021-01-17",slug:"_3-1-0-2021-01-17",normalizedTitle:"[3.1.0] - 2021-01-17",charIndex:789},{level:3,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:814},{level:3,title:"新增",slug:"新增",normalizedTitle:"新增",charIndex:837},{level:3,title:"修复",slug:"修复-6",normalizedTitle:"修复",charIndex:148},{level:2,title:"[3.0.2] - 2021-01-10",slug:"_3-0-2-2021-01-10",normalizedTitle:"[3.0.2] - 2021-01-10",charIndex:996},{level:3,title:"注意",slug:"注意-2",normalizedTitle:"注意",charIndex:814},{level:3,title:"修复",slug:"修复-7",normalizedTitle:"修复",charIndex:148},{level:2,title:"[3.0.1] - 2020-12-28",slug:"_3-0-1-2020-12-28",normalizedTitle:"[3.0.1] - 2020-12-28",charIndex:1170},{level:3,title:"修复",slug:"修复-8",normalizedTitle:"修复",charIndex:148},{level:2,title:"[3.0.0] - 2020-12-25",slug:"_3-0-0-2020-12-25",normalizedTitle:"[3.0.0] - 2020-12-25",charIndex:1280},{level:3,title:"新增",slug:"新增-2",normalizedTitle:"新增",charIndex:837},{level:3,title:"改动",slug:"改动-2",normalizedTitle:"改动",charIndex:371},{level:3,title:"修复",slug:"修复-9",normalizedTitle:"修复",charIndex:148}],headersStr:"[3.1.6] - 2021-03-07 修复 [3.1.5] - 2021-03-03 修复 [3.1.4] - 2021-03-02 改动 [3.1.3] - 2021-02-23 修复 [3.1.2] - 2021-02-17 修复 [3.1.1] - 2021-01-18 修复 [3.1.0] - 2021-01-17 注意 新增 修复 [3.0.2] - 2021-01-10 注意 修复 [3.0.1] - 2020-12-28 修复 [3.0.0] - 2020-12-25 新增 改动 修复",content:"# 更新日志（3.x.x）\n\n本文件的格式基于如何维护更新日志， 并且本项目遵守语义化版本。\n\n何为「不兼容的修改」？\n\n * 原有的配置文件可能无法使用，比如删除或者重命名了某个配置项。\n * 可能需要更新编译环境，比如安装新的依赖。\n\n\n# [3.1.6] - 2021-03-07\n\n\n# 修复\n\n * 更正规则的生效顺序（51c7824）。\n\n----------------------------------------\n\n\n# [3.1.5] - 2021-03-03\n\n\n# 修复\n\n * 修复了 config 脚本的一个错误，这个错误会导致不能正确地检查依赖项（075a27e）。\n\n----------------------------------------\n\n\n# [3.1.4] - 2021-03-02\n\n\n# 改动\n\n * 条件允许的情况下使用更安全的字符串处理函数以避免缓冲区溢出（177ae68）。\n\n----------------------------------------\n\n\n# [3.1.3] - 2021-02-23\n\n\n# 修复\n\n * 改正规则的生效顺序（857ec84）。\n\n----------------------------------------\n\n\n# [3.1.2] - 2021-02-17\n\n\n# 修复\n\n * 修复了一个 bug，这个 bug 会导致当规则文件不具有可写权限时初始化失败（20acd27）。\n\n----------------------------------------\n\n\n# [3.1.1] - 2021-01-18\n\n\n# 修复\n\n * 兼容较低版本的 GCC（becbbe0）。\n\n----------------------------------------\n\n\n# [3.1.0] - 2021-01-17\n\n\n# 注意\n\n * 因为在 v3.0.3 测试过程中新增了向下兼容的功能，所以 v3.0.3 被跳过。\n\n\n# 新增\n\n * 增加调试日志便于排障（bac1d02）。\n\n\n# 修复\n\n * 修复了一个段错误（57d7719）。\n\n * 更精确的访问频次统计（53d3b14）。\n\n----------------------------------------\n\n\n# [3.0.2] - 2021-01-10\n\n\n# 注意\n\n * 因为在 v3.0.1上有热修复，所以 v3.0.2 的一切测试版本作废，请不要使用这些测试版。\n\n\n# 修复\n\n * 修复一个了在 Alpine Linux 下的编译错误（e989aa3）。\n\n----------------------------------------\n\n\n# [3.0.1] - 2020-12-28\n\n\n# 修复\n\n * 修复了一个在检查 Cookie 时的段错误（8dc2b56）。\n\n----------------------------------------\n\n\n# [3.0.0] - 2020-12-25\n\n\n# 新增\n\n * CC 防御现在也支持了 IPV6（00fbc1c）。\n\n * IP 黑白名单支持了 IPV6。可以识别形如 fe80::/10 的 IPV6 字符串（8519b26）。\n\n\n# 改动\n\n * 删除了一些无用的日志（bd279e7）。\n\n * 友好的错误提示（d1185b2 & f2b617d）。当规则文件中 IP 地址无效或者 IP 地址块重叠的时候警告或者报错（并不能检测所有的重叠情况）。\n\n * 更快的 IP 地址检查速度（2b9e774）。改用前缀树检查 IP，现在在常数时间内即可完成 IP 的匹配，之前是一个一个地匹配，是线性时间。\n\n\n# 修复\n\n * 修复了 Cookie 检查的失效的 bug（87beed1）。\n\n * 修改 config 文件以确保执行 make 或 make modules 时最新的模块代码能够被编译（25f97f5）。在修复之前，如果仅仅 inc/ 下的文件发生变化，编译时不会将最新的代码编译进去，因为没有检查 inc/ 下的文件是否发生变化。\n\n * 修复了 IPV4 网段识别错误的 bug（73a22eb）。这个 bug 可能会导致当规则中出现类似 192.168.0.0/10，即后缀不是 8 的倍数的时候无法正确生成子网掩码。",normalizedContent:"# 更新日志（3.x.x）\n\n本文件的格式基于如何维护更新日志， 并且本项目遵守语义化版本。\n\n何为「不兼容的修改」？\n\n * 原有的配置文件可能无法使用，比如删除或者重命名了某个配置项。\n * 可能需要更新编译环境，比如安装新的依赖。\n\n\n# [3.1.6] - 2021-03-07\n\n\n# 修复\n\n * 更正规则的生效顺序（51c7824）。\n\n----------------------------------------\n\n\n# [3.1.5] - 2021-03-03\n\n\n# 修复\n\n * 修复了 config 脚本的一个错误，这个错误会导致不能正确地检查依赖项（075a27e）。\n\n----------------------------------------\n\n\n# [3.1.4] - 2021-03-02\n\n\n# 改动\n\n * 条件允许的情况下使用更安全的字符串处理函数以避免缓冲区溢出（177ae68）。\n\n----------------------------------------\n\n\n# [3.1.3] - 2021-02-23\n\n\n# 修复\n\n * 改正规则的生效顺序（857ec84）。\n\n----------------------------------------\n\n\n# [3.1.2] - 2021-02-17\n\n\n# 修复\n\n * 修复了一个 bug，这个 bug 会导致当规则文件不具有可写权限时初始化失败（20acd27）。\n\n----------------------------------------\n\n\n# [3.1.1] - 2021-01-18\n\n\n# 修复\n\n * 兼容较低版本的 gcc（becbbe0）。\n\n----------------------------------------\n\n\n# [3.1.0] - 2021-01-17\n\n\n# 注意\n\n * 因为在 v3.0.3 测试过程中新增了向下兼容的功能，所以 v3.0.3 被跳过。\n\n\n# 新增\n\n * 增加调试日志便于排障（bac1d02）。\n\n\n# 修复\n\n * 修复了一个段错误（57d7719）。\n\n * 更精确的访问频次统计（53d3b14）。\n\n----------------------------------------\n\n\n# [3.0.2] - 2021-01-10\n\n\n# 注意\n\n * 因为在 v3.0.1上有热修复，所以 v3.0.2 的一切测试版本作废，请不要使用这些测试版。\n\n\n# 修复\n\n * 修复一个了在 alpine linux 下的编译错误（e989aa3）。\n\n----------------------------------------\n\n\n# [3.0.1] - 2020-12-28\n\n\n# 修复\n\n * 修复了一个在检查 cookie 时的段错误（8dc2b56）。\n\n----------------------------------------\n\n\n# [3.0.0] - 2020-12-25\n\n\n# 新增\n\n * cc 防御现在也支持了 ipv6（00fbc1c）。\n\n * ip 黑白名单支持了 ipv6。可以识别形如 fe80::/10 的 ipv6 字符串（8519b26）。\n\n\n# 改动\n\n * 删除了一些无用的日志（bd279e7）。\n\n * 友好的错误提示（d1185b2 & f2b617d）。当规则文件中 ip 地址无效或者 ip 地址块重叠的时候警告或者报错（并不能检测所有的重叠情况）。\n\n * 更快的 ip 地址检查速度（2b9e774）。改用前缀树检查 ip，现在在常数时间内即可完成 ip 的匹配，之前是一个一个地匹配，是线性时间。\n\n\n# 修复\n\n * 修复了 cookie 检查的失效的 bug（87beed1）。\n\n * 修改 config 文件以确保执行 make 或 make modules 时最新的模块代码能够被编译（25f97f5）。在修复之前，如果仅仅 inc/ 下的文件发生变化，编译时不会将最新的代码编译进去，因为没有检查 inc/ 下的文件是否发生变化。\n\n * 修复了 ipv4 网段识别错误的 bug（73a22eb）。这个 bug 可能会导致当规则中出现类似 192.168.0.0/10，即后缀不是 8 的倍数的时候无法正确生成子网掩码。",charsets:{cjk:!0}},{title:"4.x.x",frontmatter:{title:"4.x.x",lang:"zh-CN"},regularPath:"/zh-cn/changes/4_x_x.html",relativePath:"zh-cn/changes/4_x_x.md",key:"v-04c5a2bc",path:"/zh-cn/changes/4_x_x.html",headers:[{level:2,title:"[4.0.0] - 2021-03-22 GMT+0800",slug:"_4-0-0-2021-03-22-gmt-0800",normalizedTitle:"[4.0.0] - 2021-03-22 gmt+0800",charIndex:123},{level:3,title:"警告",slug:"警告",normalizedTitle:"警告",charIndex:157},{level:3,title:"新增",slug:"新增",normalizedTitle:"新增",charIndex:196},{level:3,title:"移除",slug:"移除",normalizedTitle:"移除",charIndex:256},{level:3,title:"变动",slug:"变动",normalizedTitle:"变动",charIndex:316},{level:3,title:"修复",slug:"修复",normalizedTitle:"修复",charIndex:347}],headersStr:"[4.0.0] - 2021-03-22 GMT+0800 警告 新增 移除 变动 修复",content:"# 更新日志（4.x.x）\n\n本文件的格式基于如何维护更新日志， 并且本项目遵守语义化版本。\n\n何为「不兼容的修改」？\n\n * 原有的配置文件可能无法使用，比如删除或者重命名了某个配置项。\n * 可能需要更新编译环境，比如安装新的依赖。\n\n\n# [4.0.0] - 2021-03-22 GMT+0800\n\n\n# 警告\n\n此版本包含不兼容的更新（breaking changes）。\n\n\n# 新增\n\n * 为 waf_mode 和 waf_cc_deny_limit 增加了一些参数（368db2b）。\n\n\n# 移除\n\n * 废弃配置项 waf_mult_mount，该配置的功能已经合并到了配置项 waf_mode 中。\n\n\n# 变动\n\n * 给 waf_mode 增加了一些参数。\n\n\n# 修复\n\n * 更正了内置变量 waf_rule_details 的名称错误，该变量的名称在之前的版本代码中被设置为 waf_rule_deatails。\n\n * 不再进行冗余的检测。\n\n * 彻底解决了与 ngx_http_rewrite_module 的兼容性问题。",normalizedContent:"# 更新日志（4.x.x）\n\n本文件的格式基于如何维护更新日志， 并且本项目遵守语义化版本。\n\n何为「不兼容的修改」？\n\n * 原有的配置文件可能无法使用，比如删除或者重命名了某个配置项。\n * 可能需要更新编译环境，比如安装新的依赖。\n\n\n# [4.0.0] - 2021-03-22 gmt+0800\n\n\n# 警告\n\n此版本包含不兼容的更新（breaking changes）。\n\n\n# 新增\n\n * 为 waf_mode 和 waf_cc_deny_limit 增加了一些参数（368db2b）。\n\n\n# 移除\n\n * 废弃配置项 waf_mult_mount，该配置的功能已经合并到了配置项 waf_mode 中。\n\n\n# 变动\n\n * 给 waf_mode 增加了一些参数。\n\n\n# 修复\n\n * 更正了内置变量 waf_rule_details 的名称错误，该变量的名称在之前的版本代码中被设置为 waf_rule_deatails。\n\n * 不再进行冗余的检测。\n\n * 彻底解决了与 ngx_http_rewrite_module 的兼容性问题。",charsets:{cjk:!0}},{title:"5.x.x",frontmatter:{title:"5.x.x",lang:"zh-CN"},regularPath:"/zh-cn/changes/5_x_x.html",relativePath:"zh-cn/changes/5_x_x.md",key:"v-76e6cfdc",path:"/zh-cn/changes/5_x_x.html",headers:[{level:2,title:"[5.5.1] - 2021-07-16 UTC+0800",slug:"_5-5-1-2021-07-16-utc-0800",normalizedTitle:"[5.5.1] - 2021-07-16 utc+0800",charIndex:123},{level:3,title:"修复",slug:"修复",normalizedTitle:"修复",charIndex:157},{level:2,title:"[5.5.0] - 2021-06-25 UTC+0800",slug:"_5-5-0-2021-06-25-utc-0800",normalizedTitle:"[5.5.0] - 2021-06-25 utc+0800",charIndex:225},{level:3,title:"变动",slug:"变动",normalizedTitle:"变动",charIndex:259},{level:2,title:"[5.4.2] - 2021-06-15 UTC+0800",slug:"_5-4-2-2021-06-15-utc-0800",normalizedTitle:"[5.4.2] - 2021-06-15 utc+0800",charIndex:377},{level:3,title:"修复",slug:"修复-2",normalizedTitle:"修复",charIndex:157},{level:2,title:"[5.4.1] - 2021-06-09 UTC+0800",slug:"_5-4-1-2021-06-09-utc-0800",normalizedTitle:"[5.4.1] - 2021-06-09 utc+0800",charIndex:528},{level:3,title:"修复",slug:"修复-3",normalizedTitle:"修复",charIndex:157},{level:2,title:"[5.4.0] - 2021-06-03 UTC+0800",slug:"_5-4-0-2021-06-03-utc-0800",normalizedTitle:"[5.4.0] - 2021-06-03 utc+0800",charIndex:648},{level:3,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:682},{level:3,title:"新增",slug:"新增",normalizedTitle:"新增",charIndex:778},{level:3,title:"变动",slug:"变动-2",normalizedTitle:"变动",charIndex:259},{level:3,title:"修复",slug:"修复-4",normalizedTitle:"修复",charIndex:157},{level:2,title:"[5.3.2] - 2021-05-28 UTC+0800",slug:"_5-3-2-2021-05-28-utc-0800",normalizedTitle:"[5.3.2] - 2021-05-28 utc+0800",charIndex:916},{level:3,title:"修复",slug:"修复-5",normalizedTitle:"修复",charIndex:157},{level:2,title:"[5.3.1] - 2021-05-26 GMT+0800",slug:"_5-3-1-2021-05-26-gmt-0800",normalizedTitle:"[5.3.1] - 2021-05-26 gmt+0800",charIndex:1009},{level:3,title:"修复",slug:"修复-6",normalizedTitle:"修复",charIndex:157},{level:2,title:"[5.3.0] - 2021-05-16 GMT+0800",slug:"_5-3-0-2021-05-16-gmt-0800",normalizedTitle:"[5.3.0] - 2021-05-16 gmt+0800",charIndex:1116},{level:3,title:"新增",slug:"新增-2",normalizedTitle:"新增",charIndex:778},{level:3,title:"变动",slug:"变动-3",normalizedTitle:"变动",charIndex:259},{level:3,title:"修复",slug:"修复-7",normalizedTitle:"修复",charIndex:157},{level:2,title:"[5.1.2] - 2021-04-30 GMT+0800",slug:"_5-1-2-2021-04-30-gmt-0800",normalizedTitle:"[5.1.2] - 2021-04-30 gmt+0800",charIndex:1397},{level:3,title:"新增",slug:"新增-3",normalizedTitle:"新增",charIndex:778},{level:2,title:"[5.1.1] - 2021-04-23 GMT+0800",slug:"_5-1-1-2021-04-23-gmt-0800",normalizedTitle:"[5.1.1] - 2021-04-23 gmt+0800",charIndex:1559},{level:3,title:"修复",slug:"修复-8",normalizedTitle:"修复",charIndex:157},{level:2,title:"[5.1.0] - 2021-04-20 GMT+0800",slug:"_5-1-0-2021-04-20-gmt-0800",normalizedTitle:"[5.1.0] - 2021-04-20 gmt+0800",charIndex:1669},{level:3,title:"新增",slug:"新增-4",normalizedTitle:"新增",charIndex:778},{level:2,title:"[5.0.0] - 2021-04-07 GMT+0800",slug:"_5-0-0-2021-04-07-gmt-0800",normalizedTitle:"[5.0.0] - 2021-04-07 gmt+0800",charIndex:1858},{level:3,title:"警告",slug:"警告",normalizedTitle:"警告",charIndex:1892},{level:3,title:"新增",slug:"新增-5",normalizedTitle:"新增",charIndex:778},{level:3,title:"移除",slug:"移除",normalizedTitle:"移除",charIndex:2144},{level:3,title:"变动",slug:"变动-4",normalizedTitle:"变动",charIndex:259},{level:3,title:"修复",slug:"修复-9",normalizedTitle:"修复",charIndex:157}],headersStr:"[5.5.1] - 2021-07-16 UTC+0800 修复 [5.5.0] - 2021-06-25 UTC+0800 变动 [5.4.2] - 2021-06-15 UTC+0800 修复 [5.4.1] - 2021-06-09 UTC+0800 修复 [5.4.0] - 2021-06-03 UTC+0800 注意 新增 变动 修复 [5.3.2] - 2021-05-28 UTC+0800 修复 [5.3.1] - 2021-05-26 GMT+0800 修复 [5.3.0] - 2021-05-16 GMT+0800 新增 变动 修复 [5.1.2] - 2021-04-30 GMT+0800 新增 [5.1.1] - 2021-04-23 GMT+0800 修复 [5.1.0] - 2021-04-20 GMT+0800 新增 [5.0.0] - 2021-04-07 GMT+0800 警告 新增 移除 变动 修复",content:"# 更新日志（5.x.x）\n\n本文件的格式基于如何维护更新日志， 并且本项目遵守语义化版本。\n\n何为「不兼容的修改」？\n\n * 原有的配置文件可能无法使用，比如删除或者重命名了某个配置项。\n * 可能需要更新编译环境，比如安装新的依赖。\n\n\n# [5.5.1] - 2021-07-16 UTC+0800\n\n\n# 修复\n\n * 段错误。\n\n * 内存泄漏。\n\n----------------------------------------\n\n\n# [5.5.0] - 2021-06-25 UTC+0800\n\n\n# 变动\n\n * 在工作模式 STD 和 DYNAMIC 中禁用了基于 libinjection 的 XSS 攻击检测，因为有用户反映误报比较高。\n\n----------------------------------------\n\n\n# [5.4.2] - 2021-06-15 UTC+0800\n\n\n# 修复\n\n * 如果启用了 POST 检测，则访问日志（access_log）中不会记录 POST 请求，即丢失所有的 POST 请求的日志。\n\n----------------------------------------\n\n\n# [5.4.1] - 2021-06-09 UTC+0800\n\n\n# 修复\n\n * 当使用了 error_page 配置时，内置变量的值可能会出错。\n\n----------------------------------------\n\n\n# [5.4.0] - 2021-06-03 UTC+0800\n\n\n# 注意\n\n本次更新更换了 libinjection 的 clone 链接，新的链接为 https://github.com/libinjection/libinjection.git。\n\n\n# 新增\n\n * XSS 攻击防御（Powered By libinjection）。\n\n\n# 变动\n\n * 增加内置变量计算相关的调试日志。\n\n\n# 修复\n\n * POST 检测失效。\n\n----------------------------------------\n\n\n# [5.3.2] - 2021-05-28 UTC+0800\n\n\n# 修复\n\n * 内存损坏。\n\n----------------------------------------\n\n\n# [5.3.1] - 2021-05-26 GMT+0800\n\n\n# 修复\n\n * 有时即使正确安装了依赖也不能编译模块。\n\n----------------------------------------\n\n\n# [5.3.0] - 2021-05-16 GMT+0800\n\n\n# 新增\n\n * 新的配置：waf_under_attack，当网站受到攻击时可以使用。\n\n * 新的配置：waf_http_status，用于设置请求被拦截后返回的 HTTP 状态码。\n\n * 新的内置变量：$waf_blocking_log，当请求被拦截其值时不为空字符串。\n\n\n# 变动\n\n * 更新了默认规则。\n\n\n# 修复\n\n * CC 防护有时会失效。\n\n * Cookie 防护有时会失效。\n\n----------------------------------------\n\n\n# [5.1.2] - 2021-04-30 GMT+0800\n\n\n# 新增\n\n * 支持检测 SQL 注入（Powered By libinjection）。你可以通过启用 LIB-INJECTION 模式开启该功能，详见使用文档。\n\n----------------------------------------\n\n\n# [5.1.1] - 2021-04-23 GMT+0800\n\n\n# 修复\n\n * URL 和 Referer 白名单规则失效。\n\n----------------------------------------\n\n\n# [5.1.0] - 2021-04-20 GMT+0800\n\n\n# 新增\n\n * 新的内置变量 waf_log，当本模块进行了检查时不为空字符串，反之则为空字符串，主要用于 access_log 指令。\n\n * 新的内置变量 waf_spend，记录本模块执行检查花费的时间（毫秒）。\n\n----------------------------------------\n\n\n# [5.0.0] - 2021-04-07 GMT+0800\n\n\n# 警告\n\n此版本包含不兼容的更新（breaking changes）。\n\n\n# 新增\n\n * 新增了模式 CACHE，启用此模式后会缓存每次检查的结果，提高性能。\n\n * 新增了配置 waf_cache 用于设置缓存相关的参数。\n\n * 新增了配置 waf_cc_deny，用于设置 CC 防护相关的参数。\n\n * 新增了配置 waf_priority，用来设置除了 POST 检查以外所有的检查项目的优先级。\n\n * 当 CC 防护返回 503 状态码时会附上 Retry-After 响应头。\n\n\n# 移除\n\n * 废弃了配置 waf_cc_deny_limit，使用新的配置 waf_cc_deny 替代。\n\n\n# 变动\n\n * 互换了 CC 防护和 IP 白名单检查的默认优先级。\n\n\n# 修复\n\n * 修复了当 worker 进程数量大于一时的段错误。\n\n * 修复了 CC 防护统计有时不准的错误。",normalizedContent:"# 更新日志（5.x.x）\n\n本文件的格式基于如何维护更新日志， 并且本项目遵守语义化版本。\n\n何为「不兼容的修改」？\n\n * 原有的配置文件可能无法使用，比如删除或者重命名了某个配置项。\n * 可能需要更新编译环境，比如安装新的依赖。\n\n\n# [5.5.1] - 2021-07-16 utc+0800\n\n\n# 修复\n\n * 段错误。\n\n * 内存泄漏。\n\n----------------------------------------\n\n\n# [5.5.0] - 2021-06-25 utc+0800\n\n\n# 变动\n\n * 在工作模式 std 和 dynamic 中禁用了基于 libinjection 的 xss 攻击检测，因为有用户反映误报比较高。\n\n----------------------------------------\n\n\n# [5.4.2] - 2021-06-15 utc+0800\n\n\n# 修复\n\n * 如果启用了 post 检测，则访问日志（access_log）中不会记录 post 请求，即丢失所有的 post 请求的日志。\n\n----------------------------------------\n\n\n# [5.4.1] - 2021-06-09 utc+0800\n\n\n# 修复\n\n * 当使用了 error_page 配置时，内置变量的值可能会出错。\n\n----------------------------------------\n\n\n# [5.4.0] - 2021-06-03 utc+0800\n\n\n# 注意\n\n本次更新更换了 libinjection 的 clone 链接，新的链接为 https://github.com/libinjection/libinjection.git。\n\n\n# 新增\n\n * xss 攻击防御（powered by libinjection）。\n\n\n# 变动\n\n * 增加内置变量计算相关的调试日志。\n\n\n# 修复\n\n * post 检测失效。\n\n----------------------------------------\n\n\n# [5.3.2] - 2021-05-28 utc+0800\n\n\n# 修复\n\n * 内存损坏。\n\n----------------------------------------\n\n\n# [5.3.1] - 2021-05-26 gmt+0800\n\n\n# 修复\n\n * 有时即使正确安装了依赖也不能编译模块。\n\n----------------------------------------\n\n\n# [5.3.0] - 2021-05-16 gmt+0800\n\n\n# 新增\n\n * 新的配置：waf_under_attack，当网站受到攻击时可以使用。\n\n * 新的配置：waf_http_status，用于设置请求被拦截后返回的 http 状态码。\n\n * 新的内置变量：$waf_blocking_log，当请求被拦截其值时不为空字符串。\n\n\n# 变动\n\n * 更新了默认规则。\n\n\n# 修复\n\n * cc 防护有时会失效。\n\n * cookie 防护有时会失效。\n\n----------------------------------------\n\n\n# [5.1.2] - 2021-04-30 gmt+0800\n\n\n# 新增\n\n * 支持检测 sql 注入（powered by libinjection）。你可以通过启用 lib-injection 模式开启该功能，详见使用文档。\n\n----------------------------------------\n\n\n# [5.1.1] - 2021-04-23 gmt+0800\n\n\n# 修复\n\n * url 和 referer 白名单规则失效。\n\n----------------------------------------\n\n\n# [5.1.0] - 2021-04-20 gmt+0800\n\n\n# 新增\n\n * 新的内置变量 waf_log，当本模块进行了检查时不为空字符串，反之则为空字符串，主要用于 access_log 指令。\n\n * 新的内置变量 waf_spend，记录本模块执行检查花费的时间（毫秒）。\n\n----------------------------------------\n\n\n# [5.0.0] - 2021-04-07 gmt+0800\n\n\n# 警告\n\n此版本包含不兼容的更新（breaking changes）。\n\n\n# 新增\n\n * 新增了模式 cache，启用此模式后会缓存每次检查的结果，提高性能。\n\n * 新增了配置 waf_cache 用于设置缓存相关的参数。\n\n * 新增了配置 waf_cc_deny，用于设置 cc 防护相关的参数。\n\n * 新增了配置 waf_priority，用来设置除了 post 检查以外所有的检查项目的优先级。\n\n * 当 cc 防护返回 503 状态码时会附上 retry-after 响应头。\n\n\n# 移除\n\n * 废弃了配置 waf_cc_deny_limit，使用新的配置 waf_cc_deny 替代。\n\n\n# 变动\n\n * 互换了 cc 防护和 ip 白名单检查的默认优先级。\n\n\n# 修复\n\n * 修复了当 worker 进程数量大于一时的段错误。\n\n * 修复了 cc 防护统计有时不准的错误。",charsets:{cjk:!0}},{title:"6.0.x",frontmatter:{title:"6.0.x",lang:"zh-CN"},regularPath:"/zh-cn/changes/6_0_x.html",relativePath:"zh-cn/changes/6_0_x.md",key:"v-5f89e808",path:"/zh-cn/changes/6_0_x.html",headers:[{level:2,title:"[6.0.3] - 2021-08-02 UTC+0800",slug:"_6-0-3-2021-08-02-utc-0800",normalizedTitle:"[6.0.3] - 2021-08-02 utc+0800",charIndex:123},{level:3,title:"修复",slug:"修复",normalizedTitle:"修复",charIndex:157},{level:2,title:"[6.0.2] - 2021-08-01 UTC+0800",slug:"_6-0-2-2021-08-01-utc-0800",normalizedTitle:"[6.0.2] - 2021-08-01 utc+0800",charIndex:228},{level:3,title:"修复",slug:"修复-2",normalizedTitle:"修复",charIndex:157},{level:2,title:"[6.0.1] - 2021-07-30 UTC+0800",slug:"_6-0-1-2021-07-30-utc-0800",normalizedTitle:"[6.0.1] - 2021-07-30 utc+0800",charIndex:348},{level:3,title:"弃用",slug:"弃用",normalizedTitle:"弃用",charIndex:382},{level:3,title:"变动",slug:"变动",normalizedTitle:"变动",charIndex:472},{level:3,title:"修复",slug:"修复-3",normalizedTitle:"修复",charIndex:157},{level:2,title:"[6.0.0] - 2021-07-21 UTC+0800",slug:"_6-0-0-2021-07-21-utc-0800",normalizedTitle:"[6.0.0] - 2021-07-21 utc+0800",charIndex:582},{level:3,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:616},{level:3,title:"预构建模块",slug:"预构建模块",normalizedTitle:"预构建模块",charIndex:688},{level:3,title:"从 5.x.x 升级到 6.x.x",slug:"从-5-x-x-升级到-6-x-x",normalizedTitle:"从 5.x.x 升级到 6.x.x",charIndex:1211},{level:3,title:"新增",slug:"新增",normalizedTitle:"新增",charIndex:1319},{level:3,title:"移除",slug:"移除",normalizedTitle:"移除",charIndex:1345},{level:3,title:"变动",slug:"变动-2",normalizedTitle:"变动",charIndex:472}],headersStr:"[6.0.3] - 2021-08-02 UTC+0800 修复 [6.0.2] - 2021-08-01 UTC+0800 修复 [6.0.1] - 2021-07-30 UTC+0800 弃用 变动 修复 [6.0.0] - 2021-07-21 UTC+0800 注意 预构建模块 从 5.x.x 升级到 6.x.x 新增 移除 变动",content:"# 更新日志（6.0.x）\n\n本文件的格式基于如何维护更新日志， 并且本项目遵守语义化版本。\n\n何为「不兼容的修改」？\n\n * 原有的配置文件可能无法使用，比如删除或者重命名了某个配置项。\n * 可能需要更新编译环境，比如安装新的依赖。\n\n\n# [6.0.3] - 2021-08-02 UTC+0800\n\n\n# 修复\n\n * 释放虚拟机资源时可能会引起段错误。\n\n----------------------------------------\n\n\n# [6.0.2] - 2021-08-01 UTC+0800\n\n\n# 修复\n\n * 未能正确继承上层配置中的 URL 和 Referer 的白名单。\n\n----------------------------------------\n\n\n# [6.0.1] - 2021-07-30 UTC+0800\n\n\n# 弃用\n\n * 弃用了 waf_cache 配置的 interval 和 percent 参数，但并未将它们删除，只是它们不再有任何作用。这两个参数会在后续的某个版本删除。\n\n\n# 变动\n\n * 提升了 CC 防护的性能。\n\n\n# 修复\n\n * 极端情况下可能会造成大量的内存浪费，感谢 @RekGRpth。\n\n----------------------------------------\n\n\n# [6.0.0] - 2021-07-21 UTC+0800\n\n\n# 注意\n\n * 本次更新有一些不向下兼容的改动。\n\n * 高级规则的执行速度较慢，因为其原理是将规则编译成一系列指令，然后由虚拟机执行。\n\n\n# 预构建模块\n\n现在我们提供了提前编译好的模块，只要满足了下列要求即可使用。\n\n 1. nginx 的版本必须是最新的 stable 或 mainline 版本。\n 2. 您使用的 C 语言的标准库实现必须是 GNU 实现或者 musl 实现。\n\n> 下载脚本会自动检查是否满足第二个条件。\n\n您可以执行 assets/download.sh 来下载对应版本的模块并保存到当前目录。下面是用例。\n\n# nginx-stable ngx_waf-stable\nsh assets/download stable stable\n\n# nginx-mainline ngx_waf-stable\nsh assets/download mainline stable\n\n# nginx-stable ngx_waf-beta\nsh assets/download stable beta\n\n# nginx-mainline ngx_waf-beta\nsh assets/download mainline beta\n\n\n> 每次更新都需要花费约一个半小时的时间来编译模块，所以推荐在更新超过两个小时后再下载更新后的模块，否则可能会下载到旧的模块。\n\n\n# 从 5.x.x 升级到 6.x.x\n\n 1. 在规则目录下新建一个名为 advanced 的空文件。\n 2. 如果使用了配置项 waf_priority，可以将其删除或者按照文档中对该配置项的说明进行修改。\n\n\n# 新增\n\n * 支持了高级规则，详情见文档。\n\n\n# 移除\n\n * 移除 COMPAT 模式，不再完全兼容 ngx_http_rewrite_module。\n\n\n# 变动\n\n * 更新了配置项 waf_priority，详情见文档。\n\n * 现在你可以在 http、server 和 location 块中使用本模块的所有配置项。",normalizedContent:"# 更新日志（6.0.x）\n\n本文件的格式基于如何维护更新日志， 并且本项目遵守语义化版本。\n\n何为「不兼容的修改」？\n\n * 原有的配置文件可能无法使用，比如删除或者重命名了某个配置项。\n * 可能需要更新编译环境，比如安装新的依赖。\n\n\n# [6.0.3] - 2021-08-02 utc+0800\n\n\n# 修复\n\n * 释放虚拟机资源时可能会引起段错误。\n\n----------------------------------------\n\n\n# [6.0.2] - 2021-08-01 utc+0800\n\n\n# 修复\n\n * 未能正确继承上层配置中的 url 和 referer 的白名单。\n\n----------------------------------------\n\n\n# [6.0.1] - 2021-07-30 utc+0800\n\n\n# 弃用\n\n * 弃用了 waf_cache 配置的 interval 和 percent 参数，但并未将它们删除，只是它们不再有任何作用。这两个参数会在后续的某个版本删除。\n\n\n# 变动\n\n * 提升了 cc 防护的性能。\n\n\n# 修复\n\n * 极端情况下可能会造成大量的内存浪费，感谢 @rekgrpth。\n\n----------------------------------------\n\n\n# [6.0.0] - 2021-07-21 utc+0800\n\n\n# 注意\n\n * 本次更新有一些不向下兼容的改动。\n\n * 高级规则的执行速度较慢，因为其原理是将规则编译成一系列指令，然后由虚拟机执行。\n\n\n# 预构建模块\n\n现在我们提供了提前编译好的模块，只要满足了下列要求即可使用。\n\n 1. nginx 的版本必须是最新的 stable 或 mainline 版本。\n 2. 您使用的 c 语言的标准库实现必须是 gnu 实现或者 musl 实现。\n\n> 下载脚本会自动检查是否满足第二个条件。\n\n您可以执行 assets/download.sh 来下载对应版本的模块并保存到当前目录。下面是用例。\n\n# nginx-stable ngx_waf-stable\nsh assets/download stable stable\n\n# nginx-mainline ngx_waf-stable\nsh assets/download mainline stable\n\n# nginx-stable ngx_waf-beta\nsh assets/download stable beta\n\n# nginx-mainline ngx_waf-beta\nsh assets/download mainline beta\n\n\n> 每次更新都需要花费约一个半小时的时间来编译模块，所以推荐在更新超过两个小时后再下载更新后的模块，否则可能会下载到旧的模块。\n\n\n# 从 5.x.x 升级到 6.x.x\n\n 1. 在规则目录下新建一个名为 advanced 的空文件。\n 2. 如果使用了配置项 waf_priority，可以将其删除或者按照文档中对该配置项的说明进行修改。\n\n\n# 新增\n\n * 支持了高级规则，详情见文档。\n\n\n# 移除\n\n * 移除 compat 模式，不再完全兼容 ngx_http_rewrite_module。\n\n\n# 变动\n\n * 更新了配置项 waf_priority，详情见文档。\n\n * 现在你可以在 http、server 和 location 块中使用本模块的所有配置项。",charsets:{cjk:!0}},{title:"最新版（Current）",frontmatter:{title:"最新版（Current）",lang:"zh-CN"},regularPath:"/zh-cn/changes/current.html",relativePath:"zh-cn/changes/current.md",key:"v-f0f039c8",path:"/zh-cn/changes/current.html",headers:[{level:2,title:"[未发布]",slug:"未发布",normalizedTitle:"[未发布]",charIndex:101},{level:3,title:"新增",slug:"新增",normalizedTitle:"新增",charIndex:111},{level:3,title:"移除",slug:"移除",normalizedTitle:"移除",charIndex:118},{level:3,title:"变动",slug:"变动",normalizedTitle:"变动",charIndex:125},{level:3,title:"修复",slug:"修复",normalizedTitle:"修复",charIndex:132},{level:2,title:"[10.1.2] - 2022-07-09 UTC+0800",slug:"_10-1-2-2022-07-09-utc-0800",normalizedTitle:"[10.1.2] - 2022-07-09 utc+0800",charIndex:181},{level:3,title:"修复",slug:"修复-2",normalizedTitle:"修复",charIndex:132},{level:2,title:"[10.1.1] - 2022-01-07 UTC+0800",slug:"_10-1-1-2022-01-07-utc-0800",normalizedTitle:"[10.1.1] - 2022-01-07 utc+0800",charIndex:286},{level:3,title:"新增",slug:"新增-2",normalizedTitle:"新增",charIndex:111},{level:3,title:"修复",slug:"修复-3",normalizedTitle:"修复",charIndex:132},{level:2,title:"[10.1.0] - 2021-12-14 UTC+0800",slug:"_10-1-0-2021-12-14-utc-0800",normalizedTitle:"[10.1.0] - 2021-12-14 utc+0800",charIndex:441},{level:3,title:"新增",slug:"新增-3",normalizedTitle:"新增",charIndex:111},{level:3,title:"修复",slug:"修复-4",normalizedTitle:"修复",charIndex:132},{level:2,title:"[10.0.1] - 2021-12-05 UTC+0800",slug:"_10-0-1-2021-12-05-utc-0800",normalizedTitle:"[10.0.1] - 2021-12-05 utc+0800",charIndex:708},{level:3,title:"新增",slug:"新增-4",normalizedTitle:"新增",charIndex:111},{level:3,title:"修复",slug:"修复-5",normalizedTitle:"修复",charIndex:132},{level:2,title:"[10.0.0] - 2021-11-30 UTC+0800",slug:"_10-0-0-2021-11-30-utc-0800",normalizedTitle:"[10.0.0] - 2021-11-30 utc+0800",charIndex:884},{level:3,title:"新增",slug:"新增-5",normalizedTitle:"新增",charIndex:111},{level:3,title:"移除",slug:"移除-2",normalizedTitle:"移除",charIndex:118},{level:3,title:"变动",slug:"变动-2",normalizedTitle:"变动",charIndex:125},{level:2,title:"[9.0.6] - 2021-10-10 UTC+0800",slug:"_9-0-6-2021-10-10-utc-0800",normalizedTitle:"[9.0.6] - 2021-10-10 utc+0800",charIndex:1777},{level:3,title:"修复",slug:"修复-6",normalizedTitle:"修复",charIndex:132},{level:2,title:"[9.0.5] - 2021-10-09 UTC+0800",slug:"_9-0-5-2021-10-09-utc-0800",normalizedTitle:"[9.0.5] - 2021-10-09 utc+0800",charIndex:1899},{level:3,title:"新的测试套件",slug:"新的测试套件",normalizedTitle:"新的测试套件",charIndex:1933},{level:3,title:"变动",slug:"变动-3",normalizedTitle:"变动",charIndex:125},{level:3,title:"修复",slug:"修复-7",normalizedTitle:"修复",charIndex:132},{level:2,title:"[9.0.4] - 2021-09-29 UTC+0800",slug:"_9-0-4-2021-09-29-utc-0800",normalizedTitle:"[9.0.4] - 2021-09-29 utc+0800",charIndex:2502},{level:3,title:"修复",slug:"修复-8",normalizedTitle:"修复",charIndex:132},{level:2,title:"[9.0.3] - 2021-09-28 UTC+0800",slug:"_9-0-3-2021-09-28-utc-0800",normalizedTitle:"[9.0.3] - 2021-09-28 utc+0800",charIndex:2621},{level:3,title:"变动",slug:"变动-4",normalizedTitle:"变动",charIndex:125},{level:3,title:"修复",slug:"修复-9",normalizedTitle:"修复",charIndex:132},{level:2,title:"[9.0.2] - 2021-09-25 UTC+0800",slug:"_9-0-2-2021-09-25-utc-0800",normalizedTitle:"[9.0.2] - 2021-09-25 utc+0800",charIndex:2741},{level:3,title:"修复",slug:"修复-10",normalizedTitle:"修复",charIndex:132},{level:2,title:"[9.0.1] - 2021-09-24 UTC+0800",slug:"_9-0-1-2021-09-24-utc-0800",normalizedTitle:"[9.0.1] - 2021-09-24 utc+0800",charIndex:2860},{level:3,title:"修复",slug:"修复-11",normalizedTitle:"修复",charIndex:132},{level:2,title:"[9.0.0] - 2021-09-23 UTC+0800",slug:"_9-0-0-2021-09-23-utc-0800",normalizedTitle:"[9.0.0] - 2021-09-23 utc+0800",charIndex:2971},{level:3,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:3005},{level:3,title:"新增",slug:"新增-6",normalizedTitle:"新增",charIndex:111},{level:3,title:"移除",slug:"移除-3",normalizedTitle:"移除",charIndex:118},{level:3,title:"修复",slug:"修复-12",normalizedTitle:"修复",charIndex:132},{level:2,title:"[8.0.3] - 2021-08-27 UTC+0800",slug:"_8-0-3-2021-08-27-utc-0800",normalizedTitle:"[8.0.3] - 2021-08-27 utc+0800",charIndex:3423},{level:3,title:"修复",slug:"修复-13",normalizedTitle:"修复",charIndex:132},{level:2,title:"[8.0.2] - 2021-08-27 UTC+0800",slug:"_8-0-2-2021-08-27-utc-0800",normalizedTitle:"[8.0.2] - 2021-08-27 utc+0800",charIndex:3588},{level:3,title:"修复",slug:"修复-14",normalizedTitle:"修复",charIndex:132},{level:2,title:"[8.0.1] - 2021-08-23 UTC+0800",slug:"_8-0-1-2021-08-23-utc-0800",normalizedTitle:"[8.0.1] - 2021-08-23 utc+0800",charIndex:3827},{level:3,title:"新增",slug:"新增-7",normalizedTitle:"新增",charIndex:111},{level:3,title:"修复",slug:"修复-15",normalizedTitle:"修复",charIndex:132},{level:2,title:"[8.0.0] - 2021-08-21 UTC+0800",slug:"_8-0-0-2021-08-21-utc-0800",normalizedTitle:"[8.0.0] - 2021-08-21 utc+0800",charIndex:4009},{level:3,title:"注意",slug:"注意-2",normalizedTitle:"注意",charIndex:3005},{level:3,title:"新增",slug:"新增-8",normalizedTitle:"新增",charIndex:111},{level:3,title:"变动",slug:"变动-5",normalizedTitle:"变动",charIndex:125},{level:3,title:"移除",slug:"移除-4",normalizedTitle:"移除",charIndex:118},{level:2,title:"[7.1.0] - 2021-08-16 UTC+0800",slug:"_7-1-0-2021-08-16-utc-0800",normalizedTitle:"[7.1.0] - 2021-08-16 utc+0800",charIndex:4572},{level:3,title:"新增",slug:"新增-9",normalizedTitle:"新增",charIndex:111},{level:2,title:"[7.0.1] - 2021-08-11 UTC+0800",slug:"_7-0-1-2021-08-11-utc-0800",normalizedTitle:"[7.0.1] - 2021-08-11 utc+0800",charIndex:4752},{level:3,title:"修复",slug:"修复-16",normalizedTitle:"修复",charIndex:132},{level:2,title:"[7.0.0] - 2021-08-04 UTC+0800",slug:"_7-0-0-2021-08-04-utc-0800",normalizedTitle:"[7.0.0] - 2021-08-04 utc+0800",charIndex:4889},{level:3,title:"变动",slug:"变动-6",normalizedTitle:"变动",charIndex:125}],headersStr:"[未发布] 新增 移除 变动 修复 [10.1.2] - 2022-07-09 UTC+0800 修复 [10.1.1] - 2022-01-07 UTC+0800 新增 修复 [10.1.0] - 2021-12-14 UTC+0800 新增 修复 [10.0.1] - 2021-12-05 UTC+0800 新增 修复 [10.0.0] - 2021-11-30 UTC+0800 新增 移除 变动 [9.0.6] - 2021-10-10 UTC+0800 修复 [9.0.5] - 2021-10-09 UTC+0800 新的测试套件 变动 修复 [9.0.4] - 2021-09-29 UTC+0800 修复 [9.0.3] - 2021-09-28 UTC+0800 变动 修复 [9.0.2] - 2021-09-25 UTC+0800 修复 [9.0.1] - 2021-09-24 UTC+0800 修复 [9.0.0] - 2021-09-23 UTC+0800 注意 新增 移除 修复 [8.0.3] - 2021-08-27 UTC+0800 修复 [8.0.2] - 2021-08-27 UTC+0800 修复 [8.0.1] - 2021-08-23 UTC+0800 新增 修复 [8.0.0] - 2021-08-21 UTC+0800 注意 新增 变动 移除 [7.1.0] - 2021-08-16 UTC+0800 新增 [7.0.1] - 2021-08-11 UTC+0800 修复 [7.0.0] - 2021-08-04 UTC+0800 变动",content:"# 更新日志（Current）\n\n本文件的格式基于如何维护更新日志， 并且本项目遵守语义化版本。\n\n何为「不兼容的修改」？\n\n * 原有的配置文件可能无法使用，比如删除或者重命名了某个配置项。\n\n\n# [未发布]\n\n\n# 新增\n\n\n# 移除\n\n\n# 变动\n\n\n# 修复\n\n----------------------------------------\n\n\n# [10.1.2] - 2022-07-09 UTC+0800\n\n\n# 修复\n\n * 兼容 nginx-1.23.0。\n\n----------------------------------------\n\n\n# [10.1.1] - 2022-01-07 UTC+0800\n\n\n# 新增\n\n * 支持 PCRE2。\n\n\n# 修复\n\n * 内存泄漏。\n\n * 验证码和 Under Attack Mode（五秒盾）有时会无限刷新。\n\n----------------------------------------\n\n\n# [10.1.0] - 2021-12-14 UTC+0800\n\n\n# 新增\n\n * 指令 waf 可以设置为 bypass 模式，即仅检测并记录日志，但不会拦截任何请求。\n\n * 指令 waf_verify_bot 新增了参数 SogouSpider，用于验证是否为搜狗爬虫。\n\n\n# 修复\n\n * 内存回收机制并未正常运行，这虽然不会造成内存泄漏，但会导致内存占用居高不下，并引发性能问题。\n\n * 友好爬虫验证功能会错误地打印拦截日志。\n\n----------------------------------------\n\n\n# [10.0.1] - 2021-12-05 UTC+0800\n\n\n# 新增\n\n * 添加了两个彩蛋，你可以在文档中找到相关的线索。这两个彩蛋不会自动触发，所以不会影响正常使用。\n\n\n# 修复\n\n * 指令 waf_mode 中所有与请求方法对应的参数均失效。\n\n----------------------------------------\n\n\n# [10.0.0] - 2021-11-30 UTC+0800\n\n\n# 新增\n\n * 新指令 waf_zone，用来声明一块共享内存，这块内存将被用于其他的指令，比如 waf_cc_deny。\n\n * 新指令 waf_action，用于设置拦截请求后的动作，比如返回特定的状态码或者使用验证码对客户端做人机认证。\n\n * 新指令 waf_block_page，用于设置拦截页面，当请求被拦截后将指定的 HTML 文件返回。\n\n * 新内置变量 $waf_rate，用来表示一个统计周期内当前 IP 的访问次数。统计周期由指令 waf_cc_deny 的参数 rate 决定，如果 IP 已经被拉黑，则由参数 duration 决定。\n\n * 指令 waf_captcha 增加了一个参数 max_fails，用来设置验证码最大试错次数和超出后的拉黑时间。\n\n * 指令 waf_captcha 增加了一个参数 zone，用来指定一块共享内存，当且仅当设置了参数 max_fails 时才需要设置。\n\n * 指令 waf_captcha 增加了一个参数 sitekey，当且仅当省略了参数 file 时才需要设置。\n\n * 当你重载 nginx 时，模块会尽可能地保留共享内存中的信息，使其不被清空，比如 CC 防护的拉黑列表。\n\n\n# 移除\n\n * 移除了指令 waf_http_status，相关的功能合并到指令 waf_action。\n\n * 移除了指令 waf_cc_deny 的参数 size，现在使用 zone 代替。\n\n\n# 变动\n\n * 允许省略指令 waf_under_attack 的参数 file，省略此参数时将使用一个内置的文件，它来自 assets/under_attack.html。\n\n * 允许省略指令 waf_captcha 的参数 file，省略此参数时将根据参数 prov 的值使用一个内置的文件，这些文件来自目录 assets/。\n\n * 更多的调试日志。\n\n----------------------------------------\n\n\n# [9.0.6] - 2021-10-10 UTC+0800\n\n\n# 修复\n\n * 当指令 try_files 生效时无法完成 CAPTCHA 的验证。\n\n----------------------------------------\n\n\n# [9.0.5] - 2021-10-09 UTC+0800\n\n\n# 新的测试套件\n\n偶然间看到了一个测试套件：test-nginx。 看完之后感觉很好便拿来测试，编了不少测试用例，果不其然发现了一大堆 Bug，不愧是我。\n\n\n# 变动\n\n * 删除了无用的调试日志。\n\n * 更多的调试日志。\n\n\n# 修复\n\n * 有时连接会被过早地关闭。\n\n * 启用 CAPTCHA 后请求体的检测结果可能会出错。\n\n * CAPTCHA 可能会因为 HTTP 缓存而失败。\n\n * 重载 nginx 时存在内存泄露。\n\n * 未能正确合并上层配置块的 waf_cache 指令。\n\n * 未能正确合并上层配置块的 waf_cc_deny 指令。\n\n * 未能正确继承上层配置块的 Referer 黑名单。\n\n * 未能正确识别一些错误的配置。\n\n * 修复了一条默认的 URL 黑名单规则。\n\n * 修复了下列文件，使得验证码完成后可以自动刷新网页。\n   \n   * assets/hCaptcha.html\n   * assets/reCAPTCHAv2_Checkbox.html\n   * assets/reCAPTCHAv2_Invisible.html\n   * assets/reCAPTCHAv3.html\n\n----------------------------------------\n\n\n# [9.0.4] - 2021-09-29 UTC+0800\n\n\n# 修复\n\n * 当指令 rewrite 造成内部重定向时会错误地跳过所有检测。\n\n----------------------------------------\n\n\n# [9.0.3] - 2021-09-28 UTC+0800\n\n\n# 变动\n\n * 更多的调试日志。\n\n\n# 修复\n\n * 验证码页面不能正常显示。\n\n----------------------------------------\n\n\n# [9.0.2] - 2021-09-25 UTC+0800\n\n\n# 修复\n\n * 内置变量 $waf_blocking_log 的值有时会出错。\n\n----------------------------------------\n\n\n# [9.0.1] - 2021-09-24 UTC+0800\n\n\n# 修复\n\n * 未能正确读取 ModSecurity 的规则。\n\n----------------------------------------\n\n\n# [9.0.0] - 2021-09-23 UTC+0800\n\n\n# 注意\n\n如果您想要升级到此版本，请查看文档中的跨版本升级的指南。\n\n\n# 新增\n\n * 兼容了ModSecurity 的规则。\n\n * 增加了两个指令：waf_modsecurity 和 waf_modsecurity_transaction_id。\n\n * 为指令 waf_priority 增加了参数 MODSECURITY。\n\n\n# 移除\n\n * 删除了指令 waf_mode 的一些参数：LIBINJECTION、LIBINJECTION-SQLI、LIBINJECTION-XSS 和 ADV。\n\n * 删除了指令 waf_priority 的参数 ADV。\n\n * 删除了依赖 libinjection。\n\n\n# 修复\n\n * 当验证码通过时不再返回 404 状态码，而是返回 204 状态码。\n\n * 有时不会完整地检查请求体。\n\n----------------------------------------\n\n\n# [8.0.3] - 2021-08-27 UTC+0800\n\n\n# 修复\n\n * 内存泄露\n\n * 一个没有初始化的结构体字段，会导致错误日志中出现大量的 malloc(size) failed (12: Out of memory)。\n\n----------------------------------------\n\n\n# [8.0.2] - 2021-08-27 UTC+0800\n\n\n# 修复\n\n * 开启验证码后 nginx 崩溃（段错误），原因是未能正确合并不同级别的 waf_captcha 指令。\n\n * 不能显示验证码页面，原因是未能正确合并不同级别的 waf_captcha 指令。\n\n * 如果使用了 proxy_pass 指令，Under-Attack-Mode 和验证码均不能正常工作。\n\n----------------------------------------\n\n\n# [8.0.1] - 2021-08-23 UTC+0800\n\n\n# 新增\n\n * 当 CC 防护返回 444 状态码时不再生成额外的响应头。\n\n\n# 修复\n\n * 当 User-Agent 为空时会引发段错误。\n\n * 不能正确合并指令 waf_http_status。\n\n----------------------------------------\n\n\n# [8.0.0] - 2021-08-21 UTC+0800\n\n\n# 注意\n\n如果您想要升级到此版本，请查看文档中的跨版本升级的指南。\n\n\n# 新增\n\n * 引入了第三方平台的验证码，支持 hCaptcha、reCAPTCHAv2 和 reCAPTCHAv3，相关的指令为 waf_captcha。\n\n * 支持识别友好爬虫，包括 GooleBot、BingBot、BaiduSpider 和 YandexBot，识别成功后自动放行，相关的指令为 waf_verify_bot。\n\n * CC 防护支持开启验证码模式，开启后当请求频率超出限制后会启用验证码，如果连续三次验证失败则拉黑 IP，反之则重新统计请求频率。\n\n\n# 变动\n\n * 指令 waf_mode 的语法有所变化，详见文档中的跨版本升级的指南。\n\n * 指令 waf_cc_deny 的语法有所变化，详见文档中的跨版本升级的指南。\n\n * 指令 waf_cache 的语法有所变化，详见文档中的跨版本升级的指南。\n\n * 支持修改「请求体检查」的优先级。\n\n\n# 移除\n\n * 移除了指令 waf_cache 的两个参数，分别是 interval 和 percent。\n\n----------------------------------------\n\n\n# [7.1.0] - 2021-08-16 UTC+0800\n\n\n# 新增\n\n * 配置项 waf_cc_deny 的参数 rate 允许更多个格式，如 500r/s、500r/60s、500r/m、500r/60m、500r/h、500r/60h 和 500r/d。\n\n----------------------------------------\n\n\n# [7.0.1] - 2021-08-11 UTC+0800\n\n\n# 修复\n\n * 不能正确解析 IP 黑白名单中的 0.0.0.0/0。\n\n * 兼容不支持 IPV6 的运行环境。\n\n----------------------------------------\n\n\n# [7.0.0] - 2021-08-04 UTC+0800\n\n\n# 变动\n\n * 改变了 Under Attack Mode 的实现方式。不再使用重定向实现，而是通过修改响应体实现。\n\n * 删除了配置项 waf_under_attack 的参数 uri，详情见文档。\n\n * 为配置项 waf_under_attack 增加了一个参数 file，该参数的值应该是一个 HTML 文件的绝对路径，详情见文档。\n\n * 不允许在 http 这一级中使用配置项 waf_cc_deny。",normalizedContent:"# 更新日志（current）\n\n本文件的格式基于如何维护更新日志， 并且本项目遵守语义化版本。\n\n何为「不兼容的修改」？\n\n * 原有的配置文件可能无法使用，比如删除或者重命名了某个配置项。\n\n\n# [未发布]\n\n\n# 新增\n\n\n# 移除\n\n\n# 变动\n\n\n# 修复\n\n----------------------------------------\n\n\n# [10.1.2] - 2022-07-09 utc+0800\n\n\n# 修复\n\n * 兼容 nginx-1.23.0。\n\n----------------------------------------\n\n\n# [10.1.1] - 2022-01-07 utc+0800\n\n\n# 新增\n\n * 支持 pcre2。\n\n\n# 修复\n\n * 内存泄漏。\n\n * 验证码和 under attack mode（五秒盾）有时会无限刷新。\n\n----------------------------------------\n\n\n# [10.1.0] - 2021-12-14 utc+0800\n\n\n# 新增\n\n * 指令 waf 可以设置为 bypass 模式，即仅检测并记录日志，但不会拦截任何请求。\n\n * 指令 waf_verify_bot 新增了参数 sogouspider，用于验证是否为搜狗爬虫。\n\n\n# 修复\n\n * 内存回收机制并未正常运行，这虽然不会造成内存泄漏，但会导致内存占用居高不下，并引发性能问题。\n\n * 友好爬虫验证功能会错误地打印拦截日志。\n\n----------------------------------------\n\n\n# [10.0.1] - 2021-12-05 utc+0800\n\n\n# 新增\n\n * 添加了两个彩蛋，你可以在文档中找到相关的线索。这两个彩蛋不会自动触发，所以不会影响正常使用。\n\n\n# 修复\n\n * 指令 waf_mode 中所有与请求方法对应的参数均失效。\n\n----------------------------------------\n\n\n# [10.0.0] - 2021-11-30 utc+0800\n\n\n# 新增\n\n * 新指令 waf_zone，用来声明一块共享内存，这块内存将被用于其他的指令，比如 waf_cc_deny。\n\n * 新指令 waf_action，用于设置拦截请求后的动作，比如返回特定的状态码或者使用验证码对客户端做人机认证。\n\n * 新指令 waf_block_page，用于设置拦截页面，当请求被拦截后将指定的 html 文件返回。\n\n * 新内置变量 $waf_rate，用来表示一个统计周期内当前 ip 的访问次数。统计周期由指令 waf_cc_deny 的参数 rate 决定，如果 ip 已经被拉黑，则由参数 duration 决定。\n\n * 指令 waf_captcha 增加了一个参数 max_fails，用来设置验证码最大试错次数和超出后的拉黑时间。\n\n * 指令 waf_captcha 增加了一个参数 zone，用来指定一块共享内存，当且仅当设置了参数 max_fails 时才需要设置。\n\n * 指令 waf_captcha 增加了一个参数 sitekey，当且仅当省略了参数 file 时才需要设置。\n\n * 当你重载 nginx 时，模块会尽可能地保留共享内存中的信息，使其不被清空，比如 cc 防护的拉黑列表。\n\n\n# 移除\n\n * 移除了指令 waf_http_status，相关的功能合并到指令 waf_action。\n\n * 移除了指令 waf_cc_deny 的参数 size，现在使用 zone 代替。\n\n\n# 变动\n\n * 允许省略指令 waf_under_attack 的参数 file，省略此参数时将使用一个内置的文件，它来自 assets/under_attack.html。\n\n * 允许省略指令 waf_captcha 的参数 file，省略此参数时将根据参数 prov 的值使用一个内置的文件，这些文件来自目录 assets/。\n\n * 更多的调试日志。\n\n----------------------------------------\n\n\n# [9.0.6] - 2021-10-10 utc+0800\n\n\n# 修复\n\n * 当指令 try_files 生效时无法完成 captcha 的验证。\n\n----------------------------------------\n\n\n# [9.0.5] - 2021-10-09 utc+0800\n\n\n# 新的测试套件\n\n偶然间看到了一个测试套件：test-nginx。 看完之后感觉很好便拿来测试，编了不少测试用例，果不其然发现了一大堆 bug，不愧是我。\n\n\n# 变动\n\n * 删除了无用的调试日志。\n\n * 更多的调试日志。\n\n\n# 修复\n\n * 有时连接会被过早地关闭。\n\n * 启用 captcha 后请求体的检测结果可能会出错。\n\n * captcha 可能会因为 http 缓存而失败。\n\n * 重载 nginx 时存在内存泄露。\n\n * 未能正确合并上层配置块的 waf_cache 指令。\n\n * 未能正确合并上层配置块的 waf_cc_deny 指令。\n\n * 未能正确继承上层配置块的 referer 黑名单。\n\n * 未能正确识别一些错误的配置。\n\n * 修复了一条默认的 url 黑名单规则。\n\n * 修复了下列文件，使得验证码完成后可以自动刷新网页。\n   \n   * assets/hcaptcha.html\n   * assets/recaptchav2_checkbox.html\n   * assets/recaptchav2_invisible.html\n   * assets/recaptchav3.html\n\n----------------------------------------\n\n\n# [9.0.4] - 2021-09-29 utc+0800\n\n\n# 修复\n\n * 当指令 rewrite 造成内部重定向时会错误地跳过所有检测。\n\n----------------------------------------\n\n\n# [9.0.3] - 2021-09-28 utc+0800\n\n\n# 变动\n\n * 更多的调试日志。\n\n\n# 修复\n\n * 验证码页面不能正常显示。\n\n----------------------------------------\n\n\n# [9.0.2] - 2021-09-25 utc+0800\n\n\n# 修复\n\n * 内置变量 $waf_blocking_log 的值有时会出错。\n\n----------------------------------------\n\n\n# [9.0.1] - 2021-09-24 utc+0800\n\n\n# 修复\n\n * 未能正确读取 modsecurity 的规则。\n\n----------------------------------------\n\n\n# [9.0.0] - 2021-09-23 utc+0800\n\n\n# 注意\n\n如果您想要升级到此版本，请查看文档中的跨版本升级的指南。\n\n\n# 新增\n\n * 兼容了modsecurity 的规则。\n\n * 增加了两个指令：waf_modsecurity 和 waf_modsecurity_transaction_id。\n\n * 为指令 waf_priority 增加了参数 modsecurity。\n\n\n# 移除\n\n * 删除了指令 waf_mode 的一些参数：libinjection、libinjection-sqli、libinjection-xss 和 adv。\n\n * 删除了指令 waf_priority 的参数 adv。\n\n * 删除了依赖 libinjection。\n\n\n# 修复\n\n * 当验证码通过时不再返回 404 状态码，而是返回 204 状态码。\n\n * 有时不会完整地检查请求体。\n\n----------------------------------------\n\n\n# [8.0.3] - 2021-08-27 utc+0800\n\n\n# 修复\n\n * 内存泄露\n\n * 一个没有初始化的结构体字段，会导致错误日志中出现大量的 malloc(size) failed (12: out of memory)。\n\n----------------------------------------\n\n\n# [8.0.2] - 2021-08-27 utc+0800\n\n\n# 修复\n\n * 开启验证码后 nginx 崩溃（段错误），原因是未能正确合并不同级别的 waf_captcha 指令。\n\n * 不能显示验证码页面，原因是未能正确合并不同级别的 waf_captcha 指令。\n\n * 如果使用了 proxy_pass 指令，under-attack-mode 和验证码均不能正常工作。\n\n----------------------------------------\n\n\n# [8.0.1] - 2021-08-23 utc+0800\n\n\n# 新增\n\n * 当 cc 防护返回 444 状态码时不再生成额外的响应头。\n\n\n# 修复\n\n * 当 user-agent 为空时会引发段错误。\n\n * 不能正确合并指令 waf_http_status。\n\n----------------------------------------\n\n\n# [8.0.0] - 2021-08-21 utc+0800\n\n\n# 注意\n\n如果您想要升级到此版本，请查看文档中的跨版本升级的指南。\n\n\n# 新增\n\n * 引入了第三方平台的验证码，支持 hcaptcha、recaptchav2 和 recaptchav3，相关的指令为 waf_captcha。\n\n * 支持识别友好爬虫，包括 goolebot、bingbot、baiduspider 和 yandexbot，识别成功后自动放行，相关的指令为 waf_verify_bot。\n\n * cc 防护支持开启验证码模式，开启后当请求频率超出限制后会启用验证码，如果连续三次验证失败则拉黑 ip，反之则重新统计请求频率。\n\n\n# 变动\n\n * 指令 waf_mode 的语法有所变化，详见文档中的跨版本升级的指南。\n\n * 指令 waf_cc_deny 的语法有所变化，详见文档中的跨版本升级的指南。\n\n * 指令 waf_cache 的语法有所变化，详见文档中的跨版本升级的指南。\n\n * 支持修改「请求体检查」的优先级。\n\n\n# 移除\n\n * 移除了指令 waf_cache 的两个参数，分别是 interval 和 percent。\n\n----------------------------------------\n\n\n# [7.1.0] - 2021-08-16 utc+0800\n\n\n# 新增\n\n * 配置项 waf_cc_deny 的参数 rate 允许更多个格式，如 500r/s、500r/60s、500r/m、500r/60m、500r/h、500r/60h 和 500r/d。\n\n----------------------------------------\n\n\n# [7.0.1] - 2021-08-11 utc+0800\n\n\n# 修复\n\n * 不能正确解析 ip 黑白名单中的 0.0.0.0/0。\n\n * 兼容不支持 ipv6 的运行环境。\n\n----------------------------------------\n\n\n# [7.0.0] - 2021-08-04 utc+0800\n\n\n# 变动\n\n * 改变了 under attack mode 的实现方式。不再使用重定向实现，而是通过修改响应体实现。\n\n * 删除了配置项 waf_under_attack 的参数 uri，详情见文档。\n\n * 为配置项 waf_under_attack 增加了一个参数 file，该参数的值应该是一个 html 文件的绝对路径，详情见文档。\n\n * 不允许在 http 这一级中使用配置项 waf_cc_deny。",charsets:{cjk:!0}},{title:"长期维护版（LTS）",frontmatter:{title:"长期维护版（LTS）",lang:"zh-CN"},regularPath:"/zh-cn/changes/lts.html",relativePath:"zh-cn/changes/lts.md",key:"v-597641dc",path:"/zh-cn/changes/lts.html",headers:[{level:2,title:"[未发布]",slug:"未发布",normalizedTitle:"[未发布]",charIndex:97},{level:3,title:"新增",slug:"新增",normalizedTitle:"新增",charIndex:107},{level:3,title:"移除",slug:"移除",normalizedTitle:"移除",charIndex:114},{level:3,title:"变动",slug:"变动",normalizedTitle:"变动",charIndex:121},{level:3,title:"修复",slug:"修复",normalizedTitle:"修复",charIndex:128},{level:2,title:"[6.1.10] - 2025-01-25 UTC+0800",slug:"_6-1-10-2025-01-25-utc-0800",normalizedTitle:"[6.1.10] - 2025-01-25 utc+0800",charIndex:177},{level:3,title:"修复",slug:"修复-2",normalizedTitle:"修复",charIndex:128},{level:2,title:"[6.1.9] - 2022-07-09 UTC+0800",slug:"_6-1-9-2022-07-09-utc-0800",normalizedTitle:"[6.1.9] - 2022-07-09 utc+0800",charIndex:312},{level:3,title:"修复",slug:"修复-3",normalizedTitle:"修复",charIndex:128},{level:2,title:"[6.1.8] - 2022-01-07 UTC+0800",slug:"_6-1-8-2022-01-07-utc-0800",normalizedTitle:"[6.1.8] - 2022-01-07 utc+0800",charIndex:416},{level:3,title:"修复",slug:"修复-4",normalizedTitle:"修复",charIndex:128},{level:2,title:"[6.1.7] - 2021-12-05 UTC+0800",slug:"_6-1-7-2021-12-05-utc-0800",normalizedTitle:"[6.1.7] - 2021-12-05 utc+0800",charIndex:509},{level:3,title:"修复",slug:"修复-5",normalizedTitle:"修复",charIndex:128},{level:2,title:"[6.1.6] - 2021-10-10 UTC+0800",slug:"_6-1-6-2021-10-10-utc-0800",normalizedTitle:"[6.1.6] - 2021-10-10 utc+0800",charIndex:626},{level:3,title:"修复",slug:"修复-6",normalizedTitle:"修复",charIndex:128},{level:2,title:"[6.1.5] - 2021-09-29 UTC+0800",slug:"_6-1-5-2021-09-29-utc-0800",normalizedTitle:"[6.1.5] - 2021-09-29 utc+0800",charIndex:798},{level:3,title:"修复",slug:"修复-7",normalizedTitle:"修复",charIndex:128},{level:2,title:"[6.1.4] - 2021-08-27 UTC+0800",slug:"_6-1-4-2021-08-27-utc-0800",normalizedTitle:"[6.1.4] - 2021-08-27 utc+0800",charIndex:917},{level:3,title:"修复",slug:"修复-8",normalizedTitle:"修复",charIndex:128},{level:2,title:"[6.1.3] - 2021-08-23 UTC+0800",slug:"_6-1-3-2021-08-23-utc-0800",normalizedTitle:"[6.1.3] - 2021-08-23 utc+0800",charIndex:1010},{level:3,title:"新增",slug:"新增-2",normalizedTitle:"新增",charIndex:107},{level:3,title:"修复",slug:"修复-9",normalizedTitle:"修复",charIndex:128},{level:2,title:"[6.1.2] - 2021-08-11 UTC+0800",slug:"_6-1-2-2021-08-11-utc-0800",normalizedTitle:"[6.1.2] - 2021-08-11 utc+0800",charIndex:1164},{level:3,title:"修复",slug:"修复-10",normalizedTitle:"修复",charIndex:128},{level:2,title:"[6.1.1] - 2021-08-04 UTC+0800",slug:"_6-1-1-2021-08-04-utc-0800",normalizedTitle:"[6.1.1] - 2021-08-04 utc+0800",charIndex:1301},{level:3,title:"修复",slug:"修复-11",normalizedTitle:"修复",charIndex:128},{level:2,title:"[6.1.0] - 2021-08-03 UTC+0800",slug:"_6-1-0-2021-08-03-utc-0800",normalizedTitle:"[6.1.0] - 2021-08-03 utc+0800",charIndex:1419},{level:3,title:"新增",slug:"新增-3",normalizedTitle:"新增",charIndex:107}],headersStr:"[未发布] 新增 移除 变动 修复 [6.1.10] - 2025-01-25 UTC+0800 修复 [6.1.9] - 2022-07-09 UTC+0800 修复 [6.1.8] - 2022-01-07 UTC+0800 修复 [6.1.7] - 2021-12-05 UTC+0800 修复 [6.1.6] - 2021-10-10 UTC+0800 修复 [6.1.5] - 2021-09-29 UTC+0800 修复 [6.1.4] - 2021-08-27 UTC+0800 修复 [6.1.3] - 2021-08-23 UTC+0800 新增 修复 [6.1.2] - 2021-08-11 UTC+0800 修复 [6.1.1] - 2021-08-04 UTC+0800 修复 [6.1.0] - 2021-08-03 UTC+0800 新增",content:"# 更新日志（LTS）\n\n本文件的格式基于如何维护更新日志， 并且本项目遵守语义化版本。\n\n何为「不兼容的修改」？\n\n * 原有的配置文件可能无法使用，比如删除或者重命名了某个配置项。\n\n\n# [未发布]\n\n\n# 新增\n\n\n# 移除\n\n\n# 变动\n\n\n# 修复\n\n----------------------------------------\n\n\n# [6.1.10] - 2025-01-25 UTC+0800\n\n\n# 修复\n\n * 修复因 libinjection 引起的编译错误，此依赖曾经改变了构建流程，导致了编译错误。\n\n----------------------------------------\n\n\n# [6.1.9] - 2022-07-09 UTC+0800\n\n\n# 修复\n\n * 兼容 nginx-1.23.0。\n\n----------------------------------------\n\n\n# [6.1.8] - 2022-01-07 UTC+0800\n\n\n# 修复\n\n * 内存泄漏。\n\n----------------------------------------\n\n\n# [6.1.7] - 2021-12-05 UTC+0800\n\n\n# 修复\n\n * 指令 waf_mode 中所有与请求方法对应的参数均失效。\n\n----------------------------------------\n\n\n# [6.1.6] - 2021-10-10 UTC+0800\n\n\n# 修复\n\n * 有时连接会被过早地关闭。\n\n * 有时没有读取完整的请求体。\n\n * 未能正确继承上层配置块的 Referer 黑名单。\n\n * 修复了一条默认的 URL 黑名单规则。\n\n----------------------------------------\n\n\n# [6.1.5] - 2021-09-29 UTC+0800\n\n\n# 修复\n\n * 当指令 rewrite 造成内部重定向时会错误地跳过所有检测。\n\n----------------------------------------\n\n\n# [6.1.4] - 2021-08-27 UTC+0800\n\n\n# 修复\n\n * 内存泄露。\n\n----------------------------------------\n\n\n# [6.1.3] - 2021-08-23 UTC+0800\n\n\n# 新增\n\n * 当 CC 防护返回 444 状态码时不再生成额外的响应头。\n\n\n# 修复\n\n * 不能正确合并指令 waf_http_status。\n\n----------------------------------------\n\n\n# [6.1.2] - 2021-08-11 UTC+0800\n\n\n# 修复\n\n * 不能正确解析 IP 黑白名单中的 0.0.0.0/0。\n\n * 兼容不支持 IPV6 的运行环境。\n\n----------------------------------------\n\n\n# [6.1.1] - 2021-08-04 UTC+0800\n\n\n# 修复\n\n * Under Attack Mode (UAM) 有时会出错。\n\n----------------------------------------\n\n\n# [6.1.0] - 2021-08-03 UTC+0800\n\n\n# 新增\n\n * 为配置项 waf_mode 增加了三个选项。\n   * ADV：控制开关高级规则。\n   * CMN-METH：等价于 HEAD GET POST。\n   * ALL-METH：任意的 HTTP 请求方法都会启动检查。",normalizedContent:"# 更新日志（lts）\n\n本文件的格式基于如何维护更新日志， 并且本项目遵守语义化版本。\n\n何为「不兼容的修改」？\n\n * 原有的配置文件可能无法使用，比如删除或者重命名了某个配置项。\n\n\n# [未发布]\n\n\n# 新增\n\n\n# 移除\n\n\n# 变动\n\n\n# 修复\n\n----------------------------------------\n\n\n# [6.1.10] - 2025-01-25 utc+0800\n\n\n# 修复\n\n * 修复因 libinjection 引起的编译错误，此依赖曾经改变了构建流程，导致了编译错误。\n\n----------------------------------------\n\n\n# [6.1.9] - 2022-07-09 utc+0800\n\n\n# 修复\n\n * 兼容 nginx-1.23.0。\n\n----------------------------------------\n\n\n# [6.1.8] - 2022-01-07 utc+0800\n\n\n# 修复\n\n * 内存泄漏。\n\n----------------------------------------\n\n\n# [6.1.7] - 2021-12-05 utc+0800\n\n\n# 修复\n\n * 指令 waf_mode 中所有与请求方法对应的参数均失效。\n\n----------------------------------------\n\n\n# [6.1.6] - 2021-10-10 utc+0800\n\n\n# 修复\n\n * 有时连接会被过早地关闭。\n\n * 有时没有读取完整的请求体。\n\n * 未能正确继承上层配置块的 referer 黑名单。\n\n * 修复了一条默认的 url 黑名单规则。\n\n----------------------------------------\n\n\n# [6.1.5] - 2021-09-29 utc+0800\n\n\n# 修复\n\n * 当指令 rewrite 造成内部重定向时会错误地跳过所有检测。\n\n----------------------------------------\n\n\n# [6.1.4] - 2021-08-27 utc+0800\n\n\n# 修复\n\n * 内存泄露。\n\n----------------------------------------\n\n\n# [6.1.3] - 2021-08-23 utc+0800\n\n\n# 新增\n\n * 当 cc 防护返回 444 状态码时不再生成额外的响应头。\n\n\n# 修复\n\n * 不能正确合并指令 waf_http_status。\n\n----------------------------------------\n\n\n# [6.1.2] - 2021-08-11 utc+0800\n\n\n# 修复\n\n * 不能正确解析 ip 黑白名单中的 0.0.0.0/0。\n\n * 兼容不支持 ipv6 的运行环境。\n\n----------------------------------------\n\n\n# [6.1.1] - 2021-08-04 utc+0800\n\n\n# 修复\n\n * under attack mode (uam) 有时会出错。\n\n----------------------------------------\n\n\n# [6.1.0] - 2021-08-03 utc+0800\n\n\n# 新增\n\n * 为配置项 waf_mode 增加了三个选项。\n   * adv：控制开关高级规则。\n   * cmn-meth：等价于 head get post。\n   * all-meth：任意的 http 请求方法都会启动检查。",charsets:{cjk:!0}},{title:"概述",frontmatter:{title:"概述",lang:"zh-CN"},regularPath:"/zh-cn/changes/overview.html",relativePath:"zh-cn/changes/overview.md",key:"v-f3511518",path:"/zh-cn/changes/overview.html",headers:[{level:2,title:"长期维护版（LTS）",slug:"长期维护版-lts",normalizedTitle:"长期维护版（lts）",charIndex:22},{level:2,title:"最新版（Current）",slug:"最新版-current",normalizedTitle:"最新版（current）",charIndex:35},{level:2,title:"旧版本",slug:"旧版本",normalizedTitle:"旧版本",charIndex:198}],headersStr:"长期维护版（LTS） 最新版（Current） 旧版本",content:"# 概述\n\n本项目维护两个发布流程，分别是「长期维护版（LTS）」和「最新版（Current）」。\n\n\n# 长期维护版（LTS）\n\n长期维护版至少维护一年，并且维护期间只会修复 bug，特别的是严重的 bug，一些比较轻的 bug 可能不会修复。\n\n\n# 最新版（Current）\n\n最新版的 bug 也会被修复，但是最新版包含了全部的更新，比如新功能、功能变动、功能删除、性能优化等。\n\n\n# 旧版本\n\n * 6.0.x\n * 5.x.x\n * 4.x.x\n * 3.x.x\n * 2.x.x",normalizedContent:"# 概述\n\n本项目维护两个发布流程，分别是「长期维护版（lts）」和「最新版（current）」。\n\n\n# 长期维护版（lts）\n\n长期维护版至少维护一年，并且维护期间只会修复 bug，特别的是严重的 bug，一些比较轻的 bug 可能不会修复。\n\n\n# 最新版（current）\n\n最新版的 bug 也会被修复，但是最新版包含了全部的更新，比如新功能、功能变动、功能删除、性能优化等。\n\n\n# 旧版本\n\n * 6.0.x\n * 5.x.x\n * 4.x.x\n * 3.x.x\n * 2.x.x",charsets:{cjk:!0}},{title:"兼容性说明",frontmatter:{title:"兼容性说明",lang:"zh-CN"},regularPath:"/zh-cn/guide/compatibility.html",relativePath:"zh-cn/guide/compatibility.md",key:"v-738f7b1c",path:"/zh-cn/guide/compatibility.html",headers:[{level:2,title:"操作系统兼容性",slug:"操作系统兼容性",normalizedTitle:"操作系统兼容性",charIndex:12},{level:2,title:"nginx 兼容性",slug:"nginx-兼容性",normalizedTitle:"nginx 兼容性",charIndex:47},{level:2,title:"模块兼容性",slug:"模块兼容性",normalizedTitle:"模块兼容性",charIndex:95},{level:3,title:"ngxhttprewrite_module",slug:"ngx-http-rewrite-module",normalizedTitle:"ngxhttprewrite_module",charIndex:null}],headersStr:"操作系统兼容性 nginx 兼容性 模块兼容性 ngxhttprewrite_module",content:"# 兼容性说明\n\n\n# 操作系统兼容性\n\n不保证与Linux以外的操作系统的兼容性。\n\n\n# nginx 兼容性\n\n本模块只保证对 nginx-1.18.0 或更新的版本的兼容性。\n\n\n# 模块兼容性\n\n\n# ngx_http_rewrite_module\n\n本模块与 ngx_http_rewrite_module 存在兼容性问题。\n\n * 当 return 指令生效时模块不会生效。\n * 当 rewrite 指令造成了返回（如 302 重定向）时模块不会生效。\n\n使用 try_files 代替 rewrite\n\n你可能会有下列的配置。\n\nif (!-e $request_filename) {\n    rewrite (.*) /index.php\n}\n\n\n你可以用下面的配置来替换。\n\ntry_files $uri $uri/ /index.php;\n\n\n详情见 rewrite 和 try_files。",normalizedContent:"# 兼容性说明\n\n\n# 操作系统兼容性\n\n不保证与linux以外的操作系统的兼容性。\n\n\n# nginx 兼容性\n\n本模块只保证对 nginx-1.18.0 或更新的版本的兼容性。\n\n\n# 模块兼容性\n\n\n# ngx_http_rewrite_module\n\n本模块与 ngx_http_rewrite_module 存在兼容性问题。\n\n * 当 return 指令生效时模块不会生效。\n * 当 rewrite 指令造成了返回（如 302 重定向）时模块不会生效。\n\n使用 try_files 代替 rewrite\n\n你可能会有下列的配置。\n\nif (!-e $request_filename) {\n    rewrite (.*) /index.php\n}\n\n\n你可以用下面的配置来替换。\n\ntry_files $uri $uri/ /index.php;\n\n\n详情见 rewrite 和 try_files。",charsets:{cjk:!0}},{title:"配置",frontmatter:{title:"配置",lang:"zh-CN",sidebarDepth:3},regularPath:"/zh-cn/guide/configuration.html",relativePath:"zh-cn/guide/configuration.md",key:"v-36b6dd5c",path:"/zh-cn/guide/configuration.html",headers:[{level:2,title:"LTS 版本",slug:"lts-版本",normalizedTitle:"lts 版本",charIndex:102},{level:2,title:"Current 版本",slug:"current-版本",normalizedTitle:"current 版本",charIndex:584}],headersStr:"LTS 版本 Current 版本",content:"# 配置\n\n您可以在 nginx.conf 内的一个 server 块中添加配置来开启 ngx_waf。 下面是一个例子。\n\n警告\n\n请不要对下面列出的配置进行修改，除非你知道这些配置项的含义。\n\n\n# LTS 版本\n\nhttp {\n    ...\n    server {\n        ...\n        # on 表示启用，off 表示关闭。\n        waf on;\n\n        # 规则文件所在目录的绝对路径，必须以 / 结尾。\n        waf_rule_path /usr/local/src/ngx_waf/assets/rules/;\n        \n        # 防火墙工作模式，STD 表示标准模式。\n        waf_mode STD;\n\n        # CC 防御参数，1000 每分钟请求次数上限，超出上限后封禁对应 ip 60 分钟。\n        waf_cc_deny rate=1000r/m duration=60m;\n\n        # 最多缓存 50 个检测目标的检测结果，对除了 IP 黑白名单检测、CC 防护和 POST 检测以外的所有检测生效。\n        waf_cache capacity=50;\n        ...\n    }\n    ...\n}\n\n\n\n# Current 版本\n\nhttp {\n    # 声明一块共享内存\n    waf_zone name=waf size=20m;\n    ...\n    server {\n        ...\n        # on 表示启用，off 表示关闭。\n        waf on;\n\n        # 规则文件所在目录的绝对路径，必须以 / 结尾。\n        waf_rule_path /usr/local/src/ngx_waf/assets/rules/;\n        \n        # 防火墙工作模式，STD 表示标准模式。\n        waf_mode STD;\n\n        # CC 防御参数，1000 每分钟请求次数上限，超出上限后封禁对应 ip 60 分钟。\n        waf_cc_deny on rate=1000r/m duration=60m zone=waf:cc;\n\n        # 最多缓存 50 个检测目标的检测结果，对除了 IP 黑白名单检测、CC 防护和 POST 检测以外的所有检测生效。\n        waf_cache on capacity=50;\n        ...\n    }\n    ...\n}\n",normalizedContent:"# 配置\n\n您可以在 nginx.conf 内的一个 server 块中添加配置来开启 ngx_waf。 下面是一个例子。\n\n警告\n\n请不要对下面列出的配置进行修改，除非你知道这些配置项的含义。\n\n\n# lts 版本\n\nhttp {\n    ...\n    server {\n        ...\n        # on 表示启用，off 表示关闭。\n        waf on;\n\n        # 规则文件所在目录的绝对路径，必须以 / 结尾。\n        waf_rule_path /usr/local/src/ngx_waf/assets/rules/;\n        \n        # 防火墙工作模式，std 表示标准模式。\n        waf_mode std;\n\n        # cc 防御参数，1000 每分钟请求次数上限，超出上限后封禁对应 ip 60 分钟。\n        waf_cc_deny rate=1000r/m duration=60m;\n\n        # 最多缓存 50 个检测目标的检测结果，对除了 ip 黑白名单检测、cc 防护和 post 检测以外的所有检测生效。\n        waf_cache capacity=50;\n        ...\n    }\n    ...\n}\n\n\n\n# current 版本\n\nhttp {\n    # 声明一块共享内存\n    waf_zone name=waf size=20m;\n    ...\n    server {\n        ...\n        # on 表示启用，off 表示关闭。\n        waf on;\n\n        # 规则文件所在目录的绝对路径，必须以 / 结尾。\n        waf_rule_path /usr/local/src/ngx_waf/assets/rules/;\n        \n        # 防火墙工作模式，std 表示标准模式。\n        waf_mode std;\n\n        # cc 防御参数，1000 每分钟请求次数上限，超出上限后封禁对应 ip 60 分钟。\n        waf_cc_deny on rate=1000r/m duration=60m zone=waf:cc;\n\n        # 最多缓存 50 个检测目标的检测结果，对除了 ip 黑白名单检测、cc 防护和 post 检测以外的所有检测生效。\n        waf_cache on capacity=50;\n        ...\n    }\n    ...\n}\n",charsets:{cjk:!0}},{title:"安装",frontmatter:{title:"安装",lang:"zh-CN",sidebarDepth:3},regularPath:"/zh-cn/guide/installation.html",relativePath:"zh-cn/guide/installation.md",key:"v-160d9024",path:"/zh-cn/guide/installation.html",headers:[{level:2,title:"静态模块",slug:"静态模块",normalizedTitle:"静态模块",charIndex:75},{level:2,title:"动态模块",slug:"动态模块",normalizedTitle:"动态模块",charIndex:82},{level:2,title:"宝塔面板",slug:"宝塔面板",normalizedTitle:"宝塔面板",charIndex:2719},{level:2,title:"军哥 LNMP",slug:"军哥-lnmp",normalizedTitle:"军哥 lnmp",charIndex:5512}],headersStr:"静态模块 动态模块 宝塔面板 军哥 LNMP",content:"# 安装\n\n请先阅读版本说明来挑选合适的版本。\n\nnginx 提供两种安装模块的方式，即「静态链接」和「动态加载」，通过两种方式安装的模块也分别称为「静态模块」和「动态模块」。\n\n\n# 静态模块\n\n注意\n\n编译安装模块可能需要一些依赖，比如 gcc，请自行解决依赖问题，本文不提供这类信息。\n\n重要信息\n\n编译安装一个新的模块需要知道当前的 nginx 的 configure 脚本的参数，您可以通过运行 nginx -V 来获取。 下面是一个例子。\n\nnginx version: nginx/1.19.6\nbuilt by gcc 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04)\nbuilt with OpenSSL 1.1.1i  8 Dec 2020\nTLS SNI support enabled\nconfigure arguments: --with-mail=dynamic --with-openssl=/usr/local/src/openssl-OpenSSL_1_1_1i --prefix=/usr/local/nginx --user=nginx --group=nginx --with-file-aio --with-http_ssl_module --with-http_geoip_module --with-http_v2_module --with-http_realip_module --with-stream_ssl_preread_module --with-http_addition_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_slice_module --with-http_perl_module --with-http_stub_status_module --with-http_auth_request_module --with-mail=dynamic --with-mail_ssl_module --with-pcre --with-pcre-jit --with-stream=dynamic --with-stream_ssl_module --with-debug --with-cc-opt='-O3 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic'\n\n\n务必记住 configure arguments: 后面的内容，下文中将使用 ARG 来代替这块内容。\n\n安装静态模块需要重新编译整个 nginx，花费的时间相对于安装动态模块比较长。\n\n首先下载对应版本的 nginx，下载页面。 下面将以 nginx-1.20.1 为例。\n\ncd /usr/local/src\nwget https://nginx.org/download/nginx-1.20.1.tar.gz\ntar -zxf nginx-1.20.1.tar.gz\n\n\n然后下载本模块的源码，下文将使用稳定版的源码。\n\ncd /usr/local/src\ngit clone -b lts https://github.com/ADD-SP/ngx_waf.git\n\n\n接下来应该运行配置脚本。\n\ncd /usr/local/src/nginx-1.20.1\n./configure ARG --add-module=/usr/local/src/ngx_waf\nsed -i 's/^\\(CFLAGS.*\\)/\\1 -fstack-protector-strong -Wno-sign-compare/' objs/Makefile\n\n\n接着您开始编译了\n\n# 不使用并行编译\nmake\n\n# 使用并行编译\nmake -j$(nproc)\n\n\n注意\n\n并行会提升编译速度，但是有概率出现莫名奇妙的错误，如果并行编译出错，可以禁用并行编译。\n\n最后您应该关闭 nginx，然后替换 nginx 的二进制文件， 此处假设 nginx 的二进制文件的绝对路径为 /usr/local/nginx/sbin/nginx。\n\ncp objs/nginx /usr/local/nginx/sbin/nginx\n\n\n热部署\n\n如果您不想在替换二进制文件时关闭 nginx，可以参考官方文档的热部署方案。\n\n\n# 动态模块\n\n编译安装动态模块并不需要重新编译整个 nginx，只需要重新编译所有的模块，所以 速度相对静态模块快一些，这也是本文档推荐的方式。\n\n下载 nginx 源码和模块源码的过程同静态模块，不再赘述。\n\n运行配置脚本\n\n./configure --add-dynamic-module=/usr/local/src/ngx_waf --with-compat\nsed -i 's/^\\(CFLAGS.*\\)/\\1 -fstack-protector-strong -Wno-sign-compare/' objs/Makefile\n\n\n然后开始编译动态模块\n\nmake modules\n\n\n接着您应该关闭 nginx，然后将动态模块拷贝到模块目录， 此处假设模块目录的绝对路径为 /usr/local/nginx/modules。\n\ncp objs/*.so /usr/local/nginx/modules\n\n\n最后在 nginx 的配置文件顶部添加一行\n\nload_module \"/usr/local/nginx/modules/ngx_http_waf_module.so\";\n\n\n\n# 宝塔面板\n\n 1. 在 shell 中运行命令\n    \n    # Centos7\n    yum update\n    yum install libtool\n    yum install https://archives.fedoraproject.org/pub/archive/fedora/linux/updates/23/x86_64/b/bison-3.0.4-3.fc23.x86_64.rpm\n    yum install gcc-c++ flex bison yajl yajl-devel curl-devel curl GeoIP-devel doxygen zlib-devel pcre-devel git libcurl libcurl-devel\n    cd /usr/local/src\n    git clone https://github.com/jedisct1/libsodium.git --branch stable\n    cd libsodium\n    ./configure --prefix=/usr/local/libsodium --with-pic\n    make -j$(nproc)\n    make install\n    \n    # 如果你使用 Current 版本请添加这些代码\n    # 安装 ModSecurity v3\n    cd /usr/local/src\n    git clone -b v3.0.10 https://github.com/SpiderLabs/ModSecurity.git\n    cd ModSecurity\n    chmod +x build.sh\n    ./build.sh\n    git submodule init\n    git submodule update\n    ./configure --prefix=/usr/local/modsecurity\n    make -j$(nproc)\n    make install\n    \n    # ======== 分割线 ========\n    \n    # Ubuntu\n    apt update\n    apt install -y libsodium23  \\\n        libsodium-dev           \\\n        libcurl4-openssl-dev    \\\n        git                     \\\n        libmodsecurity-dev      \\\n        libmodsecurity3\n    \n\n 2. 在软件商店中卸载 nginx。\n\n 3. 编辑文件 /etc/profile，在末尾追加下列内容。\n    \n    export LIB_UTHASH=/www/server/nginx/src/uthash\n    \n    # 如果操作系统的 Ubuntu 则不用写下面这两行\n    export LIB_SODIUM=/usr/local/libsodium\n    export LIB_MODSECURITY=/usr/local/modsecurity\n    \n\n 4. 在 shell 中运行下列命令\n    \n    source /etc/profile\n    \n\n 5. 清空宝塔面板缓存，重启宝塔面板，重新登录宝塔面板。\n\n 6. 在软件商店中重新安装 nginx，安装方式选择「编译安装」。\n\n 7. 选择「添加自定义模块」，填写好之后点击「提交」\n    \n    * 模块名称：ngx_waf\n    * 模块描述：方便且高性能的 Nginx 防火墙模块\n    * 模块参数：\n      \n      --add-module=/www/server/nginx/src/ngx_waf --with-cc-opt=-std=gnu99\n      \n    \n    * 前置脚本（LTS 版）：\n      \n      mkdir -p /www/server/nginx/src\n      cd /www/server/nginx/src\n      git clone -b lts https://github.com/ADD-SP/ngx_waf.git\n      rm -rf /usr/local/src/ngx_waf\n      cp -r ngx_waf /usr/local/src/ngx_waf\n      cd ngx_waf\n      make\n      git clone https://github.com/libinjection/libinjection.git inc/libinjection\n      cd /www/server/nginx/src\n      git clone https://github.com/troydhanson/uthash.git inc/uthash\n      \n    \n    * 前置脚本（Current 版）：\n      \n      mkdir -p /www/server/nginx/src\n      cd /www/server/nginx/src\n      git clone -b current https://github.com/ADD-SP/ngx_waf.git\n      rm -rf /usr/local/src/ngx_waf\n      cp -r ngx_waf /usr/local/src/ngx_waf\n      cd ngx_waf\n      git clone -b v1.7.16 https://github.com/DaveGamble/cJSON.git lib/cjson\n      git clone -b v2.3.0 https://github.com/troydhanson/uthash.git lib/uthash\n      cd /www/server/nginx/src\n      \n      \n\n 8. 这时你会看到 ngx_waf 已经添加进去了，在模块列表中打上勾之后点击「提交」等待安装完成。\n\n 9. 安装成功后删除第三步中向文件 /etc/profile 中添加的内容。\n\n报错了怎么办？\n\n你可以选择去 Github 提 issue 或者自己解决，编译安装第三方 nginx 模块就要有自己解决问题的觉悟。\n\n\n# 军哥 LNMP\n\n参考 ngx_waf：一款高大全的 Nginx 网站防火墙模块 - 喵斯基部落。",normalizedContent:"# 安装\n\n请先阅读版本说明来挑选合适的版本。\n\nnginx 提供两种安装模块的方式，即「静态链接」和「动态加载」，通过两种方式安装的模块也分别称为「静态模块」和「动态模块」。\n\n\n# 静态模块\n\n注意\n\n编译安装模块可能需要一些依赖，比如 gcc，请自行解决依赖问题，本文不提供这类信息。\n\n重要信息\n\n编译安装一个新的模块需要知道当前的 nginx 的 configure 脚本的参数，您可以通过运行 nginx -v 来获取。 下面是一个例子。\n\nnginx version: nginx/1.19.6\nbuilt by gcc 9.3.0 (ubuntu 9.3.0-17ubuntu1~20.04)\nbuilt with openssl 1.1.1i  8 dec 2020\ntls sni support enabled\nconfigure arguments: --with-mail=dynamic --with-openssl=/usr/local/src/openssl-openssl_1_1_1i --prefix=/usr/local/nginx --user=nginx --group=nginx --with-file-aio --with-http_ssl_module --with-http_geoip_module --with-http_v2_module --with-http_realip_module --with-stream_ssl_preread_module --with-http_addition_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_slice_module --with-http_perl_module --with-http_stub_status_module --with-http_auth_request_module --with-mail=dynamic --with-mail_ssl_module --with-pcre --with-pcre-jit --with-stream=dynamic --with-stream_ssl_module --with-debug --with-cc-opt='-o3 -g -pipe -wall -wp,-d_fortify_source=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic'\n\n\n务必记住 configure arguments: 后面的内容，下文中将使用 arg 来代替这块内容。\n\n安装静态模块需要重新编译整个 nginx，花费的时间相对于安装动态模块比较长。\n\n首先下载对应版本的 nginx，下载页面。 下面将以 nginx-1.20.1 为例。\n\ncd /usr/local/src\nwget https://nginx.org/download/nginx-1.20.1.tar.gz\ntar -zxf nginx-1.20.1.tar.gz\n\n\n然后下载本模块的源码，下文将使用稳定版的源码。\n\ncd /usr/local/src\ngit clone -b lts https://github.com/add-sp/ngx_waf.git\n\n\n接下来应该运行配置脚本。\n\ncd /usr/local/src/nginx-1.20.1\n./configure arg --add-module=/usr/local/src/ngx_waf\nsed -i 's/^\\(cflags.*\\)/\\1 -fstack-protector-strong -wno-sign-compare/' objs/makefile\n\n\n接着您开始编译了\n\n# 不使用并行编译\nmake\n\n# 使用并行编译\nmake -j$(nproc)\n\n\n注意\n\n并行会提升编译速度，但是有概率出现莫名奇妙的错误，如果并行编译出错，可以禁用并行编译。\n\n最后您应该关闭 nginx，然后替换 nginx 的二进制文件， 此处假设 nginx 的二进制文件的绝对路径为 /usr/local/nginx/sbin/nginx。\n\ncp objs/nginx /usr/local/nginx/sbin/nginx\n\n\n热部署\n\n如果您不想在替换二进制文件时关闭 nginx，可以参考官方文档的热部署方案。\n\n\n# 动态模块\n\n编译安装动态模块并不需要重新编译整个 nginx，只需要重新编译所有的模块，所以 速度相对静态模块快一些，这也是本文档推荐的方式。\n\n下载 nginx 源码和模块源码的过程同静态模块，不再赘述。\n\n运行配置脚本\n\n./configure --add-dynamic-module=/usr/local/src/ngx_waf --with-compat\nsed -i 's/^\\(cflags.*\\)/\\1 -fstack-protector-strong -wno-sign-compare/' objs/makefile\n\n\n然后开始编译动态模块\n\nmake modules\n\n\n接着您应该关闭 nginx，然后将动态模块拷贝到模块目录， 此处假设模块目录的绝对路径为 /usr/local/nginx/modules。\n\ncp objs/*.so /usr/local/nginx/modules\n\n\n最后在 nginx 的配置文件顶部添加一行\n\nload_module \"/usr/local/nginx/modules/ngx_http_waf_module.so\";\n\n\n\n# 宝塔面板\n\n 1. 在 shell 中运行命令\n    \n    # centos7\n    yum update\n    yum install libtool\n    yum install https://archives.fedoraproject.org/pub/archive/fedora/linux/updates/23/x86_64/b/bison-3.0.4-3.fc23.x86_64.rpm\n    yum install gcc-c++ flex bison yajl yajl-devel curl-devel curl geoip-devel doxygen zlib-devel pcre-devel git libcurl libcurl-devel\n    cd /usr/local/src\n    git clone https://github.com/jedisct1/libsodium.git --branch stable\n    cd libsodium\n    ./configure --prefix=/usr/local/libsodium --with-pic\n    make -j$(nproc)\n    make install\n    \n    # 如果你使用 current 版本请添加这些代码\n    # 安装 modsecurity v3\n    cd /usr/local/src\n    git clone -b v3.0.10 https://github.com/spiderlabs/modsecurity.git\n    cd modsecurity\n    chmod +x build.sh\n    ./build.sh\n    git submodule init\n    git submodule update\n    ./configure --prefix=/usr/local/modsecurity\n    make -j$(nproc)\n    make install\n    \n    # ======== 分割线 ========\n    \n    # ubuntu\n    apt update\n    apt install -y libsodium23  \\\n        libsodium-dev           \\\n        libcurl4-openssl-dev    \\\n        git                     \\\n        libmodsecurity-dev      \\\n        libmodsecurity3\n    \n\n 2. 在软件商店中卸载 nginx。\n\n 3. 编辑文件 /etc/profile，在末尾追加下列内容。\n    \n    export lib_uthash=/www/server/nginx/src/uthash\n    \n    # 如果操作系统的 ubuntu 则不用写下面这两行\n    export lib_sodium=/usr/local/libsodium\n    export lib_modsecurity=/usr/local/modsecurity\n    \n\n 4. 在 shell 中运行下列命令\n    \n    source /etc/profile\n    \n\n 5. 清空宝塔面板缓存，重启宝塔面板，重新登录宝塔面板。\n\n 6. 在软件商店中重新安装 nginx，安装方式选择「编译安装」。\n\n 7. 选择「添加自定义模块」，填写好之后点击「提交」\n    \n    * 模块名称：ngx_waf\n    * 模块描述：方便且高性能的 nginx 防火墙模块\n    * 模块参数：\n      \n      --add-module=/www/server/nginx/src/ngx_waf --with-cc-opt=-std=gnu99\n      \n    \n    * 前置脚本（lts 版）：\n      \n      mkdir -p /www/server/nginx/src\n      cd /www/server/nginx/src\n      git clone -b lts https://github.com/add-sp/ngx_waf.git\n      rm -rf /usr/local/src/ngx_waf\n      cp -r ngx_waf /usr/local/src/ngx_waf\n      cd ngx_waf\n      make\n      git clone https://github.com/libinjection/libinjection.git inc/libinjection\n      cd /www/server/nginx/src\n      git clone https://github.com/troydhanson/uthash.git inc/uthash\n      \n    \n    * 前置脚本（current 版）：\n      \n      mkdir -p /www/server/nginx/src\n      cd /www/server/nginx/src\n      git clone -b current https://github.com/add-sp/ngx_waf.git\n      rm -rf /usr/local/src/ngx_waf\n      cp -r ngx_waf /usr/local/src/ngx_waf\n      cd ngx_waf\n      git clone -b v1.7.16 https://github.com/davegamble/cjson.git lib/cjson\n      git clone -b v2.3.0 https://github.com/troydhanson/uthash.git lib/uthash\n      cd /www/server/nginx/src\n      \n      \n\n 8. 这时你会看到 ngx_waf 已经添加进去了，在模块列表中打上勾之后点击「提交」等待安装完成。\n\n 9. 安装成功后删除第三步中向文件 /etc/profile 中添加的内容。\n\n报错了怎么办？\n\n你可以选择去 github 提 issue 或者自己解决，编译安装第三方 nginx 模块就要有自己解决问题的觉悟。\n\n\n# 军哥 lnmp\n\n参考 ngx_waf：一款高大全的 nginx 网站防火墙模块 - 喵斯基部落。",charsets:{cjk:!0}},{title:"简介",frontmatter:{title:"简介",lang:"zh-CN"},regularPath:"/zh-cn/guide/overview.html",relativePath:"zh-cn/guide/overview.md",key:"v-2cb65f34",path:"/zh-cn/guide/overview.html",headers:[{level:2,title:"为什么选择 ngx_waf",slug:"为什么选择-ngx-waf",normalizedTitle:"为什么选择 ngx_waf",charIndex:31},{level:2,title:"功能",slug:"功能",normalizedTitle:"功能",charIndex:317},{level:2,title:"联系方式",slug:"联系方式",normalizedTitle:"联系方式",charIndex:809},{level:2,title:"打赏",slug:"打赏",normalizedTitle:"打赏",charIndex:952},{level:2,title:"测试套件",slug:"测试套件",normalizedTitle:"测试套件",charIndex:1024},{level:2,title:"性能测试",slug:"性能测试",normalizedTitle:"性能测试",charIndex:1410},{level:2,title:"闲谈",slug:"闲谈",normalizedTitle:"闲谈",charIndex:1425},{level:2,title:"感谢",slug:"感谢",normalizedTitle:"感谢",charIndex:1062}],headersStr:"为什么选择 ngx_waf 功能 联系方式 打赏 测试套件 性能测试 闲谈 感谢",content:"# 简介\n\n方便又高性能的 Nginx 防火墙模块。\n\n\n# 为什么选择 ngx_waf\n\n * 基础防护：如 IP 或 IP 网段的黑白名单、URI 黑白名单和请求体黑名单等。\n * 使用简单：配置文件和规则文件书写简单，可读性强。\n * 高性能：使用高效的 IP 检查算法和缓存机制。\n * 高级防护：兼容 ModSecurity，因此你可以使用开放式网络应用安全项目（OWASP）® 的核心规则库。\n * 友好爬虫验证：支持验证 Google、Bing、Baidu 和 Yandex 的爬虫并自动放行，避免错误拦截。\n * 验证码：支持三种验证码：hCaptcha、reCAPTCHAv2 和 reCAPTCHAv3。\n\n\n# 功能\n\n * 兼容 ModSecurity。此功能仅限最新的 Current 版本。\n * SQL 注入防护（Powered By libinjection）。\n * XSS 攻击防护（Powered By libinjection）。\n * 支持 IPV4 和 IPV6。\n * 支持开启验证码（CAPTCHA)，支持 hCaptcha、reCAPTCHAv2 和 reCAPTCHAv3。\n * 支持识别友好爬虫（如 BaiduSpider）并自动放行（基于 User-Agent 和 IP 的识别）。此功能仅限最新的 Current 版本。\n * CC 防御，超出限制后自动拉黑对应 IP 一段时间或者使用验证码做人机识别。\n * IP 黑白名单，同时支持类似 192.168.0.0/16 和 fe80::/10，即支持点分十进制和冒号十六进制表示法和网段划分。\n * POST 黑名单。\n * URL 黑白名单\n * 查询字符串（Query String）黑名单。\n * UserAgent 黑名单。\n * Cookie 黑名单。\n * Referer 黑白名单。\n\n\n# 联系方式\n\n * Telegram 频道: https://t.me/ngx_waf\n * Telegram 群组（英文）: https://t.me/group_ngx_waf\n * Telegram 群主（中文）：https://t.me/group_ngx_waf_cn\n\n\n# 打赏\n\n打赏就算了，如果您愿意，您可以帮助宣传一下本项目。比如发个贴，推荐给身边有需求的人什么的。\n\n我从来没碰过钱，我对钱没有兴趣。\n\n\n# 测试套件\n\n本项目使用一个 Perl 开发的数据驱动型的测试套件进行测试。 感谢项目 Test::Nginx 及其开发者们。\n\n你可以通过下列命令来运行测试。\n\n# 这行命令的执行时间比较长，但是以后再测试的时候就不需要运行了。\ncpan Test::Nginx\n\n# 你需要指定一个临时目录。\n# 如果目录不存在会自动创建。\n# 如果目录已经会被存在则会先**删除**再创建。\nexport MODULE_TEST_PATH=/path/to/temp/dir\n\n# 如果你安装了动态模块则需要指定动态模块的绝对路径，反之则无需执行这行命令。\nexport MODULE_PATH=/path/to/ngx_http_waf_module.so\n\ncd ./test/test-nginx\nsh ./init.sh\nsh ./start.sh ./t/*.t\n\n\n\n# 性能测试\n\n性能测试\n\n\n# 闲谈\n\nnginx 防火墙模块开发总结\n\n欢迎访问我的博客：https://www.addesp.com/。\n\n\n# 感谢\n\n * ModSecurity：开源且跨平台的 WAF 引擎。\n * uthash：C 语言的哈希表、数组、链表等容器库。\n * libcurl：支持多种协议文件传输库。\n * cJSON：C 语言的轻量级 JSON 解析库。\n * libinjection：SQL 注入检测库。\n * libsodium：C 语言密码函数库。\n * test-nginx: 数据驱动的 nginx 测试套件，可用于 nginx C 模块的开发和 OpenResty Lua 库的开发。\n * lastversion：一个轻巧的命令行工具，帮助你下载或安装一个项目的特定版本。\n * ngx_lua_waf：一个基于 lua-nginx-module (openresty) 的 web 应用防火墙。\n * nginx-book：Nginx开发从入门到精通\n * nginx-development-guide：Nginx 开发指南。",normalizedContent:"# 简介\n\n方便又高性能的 nginx 防火墙模块。\n\n\n# 为什么选择 ngx_waf\n\n * 基础防护：如 ip 或 ip 网段的黑白名单、uri 黑白名单和请求体黑名单等。\n * 使用简单：配置文件和规则文件书写简单，可读性强。\n * 高性能：使用高效的 ip 检查算法和缓存机制。\n * 高级防护：兼容 modsecurity，因此你可以使用开放式网络应用安全项目（owasp）® 的核心规则库。\n * 友好爬虫验证：支持验证 google、bing、baidu 和 yandex 的爬虫并自动放行，避免错误拦截。\n * 验证码：支持三种验证码：hcaptcha、recaptchav2 和 recaptchav3。\n\n\n# 功能\n\n * 兼容 modsecurity。此功能仅限最新的 current 版本。\n * sql 注入防护（powered by libinjection）。\n * xss 攻击防护（powered by libinjection）。\n * 支持 ipv4 和 ipv6。\n * 支持开启验证码（captcha)，支持 hcaptcha、recaptchav2 和 recaptchav3。\n * 支持识别友好爬虫（如 baiduspider）并自动放行（基于 user-agent 和 ip 的识别）。此功能仅限最新的 current 版本。\n * cc 防御，超出限制后自动拉黑对应 ip 一段时间或者使用验证码做人机识别。\n * ip 黑白名单，同时支持类似 192.168.0.0/16 和 fe80::/10，即支持点分十进制和冒号十六进制表示法和网段划分。\n * post 黑名单。\n * url 黑白名单\n * 查询字符串（query string）黑名单。\n * useragent 黑名单。\n * cookie 黑名单。\n * referer 黑白名单。\n\n\n# 联系方式\n\n * telegram 频道: https://t.me/ngx_waf\n * telegram 群组（英文）: https://t.me/group_ngx_waf\n * telegram 群主（中文）：https://t.me/group_ngx_waf_cn\n\n\n# 打赏\n\n打赏就算了，如果您愿意，您可以帮助宣传一下本项目。比如发个贴，推荐给身边有需求的人什么的。\n\n我从来没碰过钱，我对钱没有兴趣。\n\n\n# 测试套件\n\n本项目使用一个 perl 开发的数据驱动型的测试套件进行测试。 感谢项目 test::nginx 及其开发者们。\n\n你可以通过下列命令来运行测试。\n\n# 这行命令的执行时间比较长，但是以后再测试的时候就不需要运行了。\ncpan test::nginx\n\n# 你需要指定一个临时目录。\n# 如果目录不存在会自动创建。\n# 如果目录已经会被存在则会先**删除**再创建。\nexport module_test_path=/path/to/temp/dir\n\n# 如果你安装了动态模块则需要指定动态模块的绝对路径，反之则无需执行这行命令。\nexport module_path=/path/to/ngx_http_waf_module.so\n\ncd ./test/test-nginx\nsh ./init.sh\nsh ./start.sh ./t/*.t\n\n\n\n# 性能测试\n\n性能测试\n\n\n# 闲谈\n\nnginx 防火墙模块开发总结\n\n欢迎访问我的博客：https://www.addesp.com/。\n\n\n# 感谢\n\n * modsecurity：开源且跨平台的 waf 引擎。\n * uthash：c 语言的哈希表、数组、链表等容器库。\n * libcurl：支持多种协议文件传输库。\n * cjson：c 语言的轻量级 json 解析库。\n * libinjection：sql 注入检测库。\n * libsodium：c 语言密码函数库。\n * test-nginx: 数据驱动的 nginx 测试套件，可用于 nginx c 模块的开发和 openresty lua 库的开发。\n * lastversion：一个轻巧的命令行工具，帮助你下载或安装一个项目的特定版本。\n * ngx_lua_waf：一个基于 lua-nginx-module (openresty) 的 web 应用防火墙。\n * nginx-book：nginx开发从入门到精通\n * nginx-development-guide：nginx 开发指南。",charsets:{cjk:!0}},{title:"测试",frontmatter:{title:"测试",lang:"zh-CN"},regularPath:"/zh-cn/guide/test.html",relativePath:"zh-cn/guide/test.md",key:"v-7a397374",path:"/zh-cn/guide/test.html",headers:[{level:2,title:"简易测试",slug:"简易测试",normalizedTitle:"简易测试",charIndex:9},{level:2,title:"自动测试",slug:"自动测试",normalizedTitle:"自动测试",charIndex:133},{level:2,title:"性能测试",slug:"性能测试",normalizedTitle:"性能测试",charIndex:507},{level:3,title:"示例测试",slug:"示例测试",normalizedTitle:"示例测试",charIndex:516},{level:3,title:"自行测试",slug:"自行测试",normalizedTitle:"自行测试",charIndex:2544}],headersStr:"简易测试 自动测试 性能测试 示例测试 自行测试",content:"# 测试\n\n\n# 简易测试\n\n运行下列命令，如果输出 403 则表示模块正常工作。\n\ncurl -I -o /dev/null --user-agent bench -s -w \"%{http_code}\\\\n\" https://example.com/\n\n\n\n# 自动测试\n\n本项目附带了许多测试用例，你可以通过下面的指令来运行全部的用例。\n\n# 这行命令的执行时间比较长，但是以后再测试的时候就不需要运行了。\ncpan Test::Nginx\n\n# 你需要指定一个临时目录。\n# 如果目录不存在会自动创建。\n# 如果目录已经会被存在则会先**删除**再创建。\nexport MODULE_TEST_PATH=/path/to/temp/dir\n\n# 如果你安装了动态模块则需要指定动态模块的绝对路径，反之则无需执行这行命令。\nexport MODULE_PATH=/path/to/ngx_http_waf_module.so\n\ncd ./test/test-nginx\nsh ./init.sh\nsh ./start.sh ./t/*.t\n\n\n正常情况下所有的用例都会通过，如果没有通过请告诉我们。\n\n\n# 性能测试\n\n\n# 示例测试\n\n# 测试说明\n\n * ngx_waf v5.1.1。\n * 使用了约 21 万条 IPV4 白名单规则。\n * 使用了约 21 万条 IPV4 黑名单规则。\n * 使用了约 48000 条 IPV6 白名单规则。\n * 使用了约 48000 条 IPV6 黑名单规则。\n * 使用了十万条 URL 黑名单规则，通过随机字符串生成器获得。\n * 使用了十万条 URL 白名单规则，通过随机字符串生成器获得。\n * 使用了 5000 个随机字符串，通过随机字符串生成器获得。每次请求时从中随机挑选一个作为 URI 发送 GET 请求。\n * 测试持续 30 分钟。\n * 一共测试两次，一次开启防火墙，一次关闭防火墙。\n\n注意\n\n测试用的 IP 是从 IPdney 获得的。\n\n测试时的配置\n\nmaster_process on;\nworker_processes  1;\n\nhttp {\n    server {\n        listen 80;\n        server_name  localhost;\n\n        access_log off;\n        \n        waf on;\n        waf_mode DYNAMIC !CC !POST;\n        waf_rule_path /usr/local/src/ngx_waf/rules/;\n        waf_cache capacity=6000 interval=1h percent=50;\n\n        location / {\n            default_type text/html;\n            return 200 'hello';\n        }\n    }\n}\n\n\n# 测试命令\n\nwrk -c 100 -d 30m -t 1 -s test/wrk/rand.lua --latency http://localhost/ -- /path/to/rand-str.txt\n\n\n# 测试结果\n\n开启防火墙后 RPS（每秒请求数） 降低了约 4%。\n\n# waf on;\nwrk -c 100 -d 30m -t 1 -s ngx_waf/test/wrk/rand.lua --timeout 1m --latency http://localhost/ -- /usr/local/src/ngx_waf/txt.txt\n\nRunning 30m test @ http://localhost/\n  1 threads and 100 connections\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\n    Latency    78.56ms  340.74ms   3.97s    94.52%\n    Req/Sec    67.33k    25.42k   95.38k    86.58%\n  Latency Distribution\n     50%    1.14ms\n     75%    1.48ms\n     90%    4.84ms\n     99%    1.97s\n  120532104 requests in 30.00m, 17.06GB read\nRequests/sec:  66959.26\nTransfer/sec:      9.71MB\n\n\n# waf off;\nwrk -c 100 -d 30m -t 1 -s ngx_waf/test/wrk/rand.lua --timeout 1m --latency http://localhost/ -- /usr/local/src/ngx_waf/txt.txt\n\nRunning 30m test @ http://localhost/\n  1 threads and 100 connections\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\n    Latency   803.44us    0.87ms  40.32ms   95.23%\n    Req/Sec    70.69k    10.46k  105.82k    81.15%\n  Latency Distribution\n     50%  590.00us\n     75%  760.00us\n     90%    1.25ms\n     99%    4.25ms\n  126562158 requests in 30.00m, 17.92GB read\nRequests/sec:  70310.93\nTransfer/sec:     10.19MB\n\n\n\n# 自行测试\n\n你可以使用 wrk 对本模块进行性能测试。\n\n本项目提供了 wrk 的 lua 脚本用来辅助测试，脚本的路径为 test/wrk/rand.lua，其功能是使用随机的 URI 发送 GET 请求。你需要为其提供一个含有一定数量的随机字符串的文本文件，每行一个随机字符串。然后通过下面的命令进行测试。\n\nwrk -c 100 -d 1m -t 1 -s test/wrk/rand.lua --latency http://localhost/ -- /path/to/rand-str.txt\n",normalizedContent:"# 测试\n\n\n# 简易测试\n\n运行下列命令，如果输出 403 则表示模块正常工作。\n\ncurl -i -o /dev/null --user-agent bench -s -w \"%{http_code}\\\\n\" https://example.com/\n\n\n\n# 自动测试\n\n本项目附带了许多测试用例，你可以通过下面的指令来运行全部的用例。\n\n# 这行命令的执行时间比较长，但是以后再测试的时候就不需要运行了。\ncpan test::nginx\n\n# 你需要指定一个临时目录。\n# 如果目录不存在会自动创建。\n# 如果目录已经会被存在则会先**删除**再创建。\nexport module_test_path=/path/to/temp/dir\n\n# 如果你安装了动态模块则需要指定动态模块的绝对路径，反之则无需执行这行命令。\nexport module_path=/path/to/ngx_http_waf_module.so\n\ncd ./test/test-nginx\nsh ./init.sh\nsh ./start.sh ./t/*.t\n\n\n正常情况下所有的用例都会通过，如果没有通过请告诉我们。\n\n\n# 性能测试\n\n\n# 示例测试\n\n# 测试说明\n\n * ngx_waf v5.1.1。\n * 使用了约 21 万条 ipv4 白名单规则。\n * 使用了约 21 万条 ipv4 黑名单规则。\n * 使用了约 48000 条 ipv6 白名单规则。\n * 使用了约 48000 条 ipv6 黑名单规则。\n * 使用了十万条 url 黑名单规则，通过随机字符串生成器获得。\n * 使用了十万条 url 白名单规则，通过随机字符串生成器获得。\n * 使用了 5000 个随机字符串，通过随机字符串生成器获得。每次请求时从中随机挑选一个作为 uri 发送 get 请求。\n * 测试持续 30 分钟。\n * 一共测试两次，一次开启防火墙，一次关闭防火墙。\n\n注意\n\n测试用的 ip 是从 ipdney 获得的。\n\n测试时的配置\n\nmaster_process on;\nworker_processes  1;\n\nhttp {\n    server {\n        listen 80;\n        server_name  localhost;\n\n        access_log off;\n        \n        waf on;\n        waf_mode dynamic !cc !post;\n        waf_rule_path /usr/local/src/ngx_waf/rules/;\n        waf_cache capacity=6000 interval=1h percent=50;\n\n        location / {\n            default_type text/html;\n            return 200 'hello';\n        }\n    }\n}\n\n\n# 测试命令\n\nwrk -c 100 -d 30m -t 1 -s test/wrk/rand.lua --latency http://localhost/ -- /path/to/rand-str.txt\n\n\n# 测试结果\n\n开启防火墙后 rps（每秒请求数） 降低了约 4%。\n\n# waf on;\nwrk -c 100 -d 30m -t 1 -s ngx_waf/test/wrk/rand.lua --timeout 1m --latency http://localhost/ -- /usr/local/src/ngx_waf/txt.txt\n\nrunning 30m test @ http://localhost/\n  1 threads and 100 connections\n  thread stats   avg      stdev     max   +/- stdev\n    latency    78.56ms  340.74ms   3.97s    94.52%\n    req/sec    67.33k    25.42k   95.38k    86.58%\n  latency distribution\n     50%    1.14ms\n     75%    1.48ms\n     90%    4.84ms\n     99%    1.97s\n  120532104 requests in 30.00m, 17.06gb read\nrequests/sec:  66959.26\ntransfer/sec:      9.71mb\n\n\n# waf off;\nwrk -c 100 -d 30m -t 1 -s ngx_waf/test/wrk/rand.lua --timeout 1m --latency http://localhost/ -- /usr/local/src/ngx_waf/txt.txt\n\nrunning 30m test @ http://localhost/\n  1 threads and 100 connections\n  thread stats   avg      stdev     max   +/- stdev\n    latency   803.44us    0.87ms  40.32ms   95.23%\n    req/sec    70.69k    10.46k  105.82k    81.15%\n  latency distribution\n     50%  590.00us\n     75%  760.00us\n     90%    1.25ms\n     99%    4.25ms\n  126562158 requests in 30.00m, 17.92gb read\nrequests/sec:  70310.93\ntransfer/sec:     10.19mb\n\n\n\n# 自行测试\n\n你可以使用 wrk 对本模块进行性能测试。\n\n本项目提供了 wrk 的 lua 脚本用来辅助测试，脚本的路径为 test/wrk/rand.lua，其功能是使用随机的 uri 发送 get 请求。你需要为其提供一个含有一定数量的随机字符串的文本文件，每行一个随机字符串。然后通过下面的命令进行测试。\n\nwrk -c 100 -d 1m -t 1 -s test/wrk/rand.lua --latency http://localhost/ -- /path/to/rand-str.txt\n",charsets:{cjk:!0}},{title:"拦截请求时启用验证码",frontmatter:{title:"拦截请求时启用验证码",lang:"zh-CN"},regularPath:"/zh-cn/practice/enable-captcha-when-blocking-requests.html",relativePath:"zh-cn/practice/enable-captcha-when-blocking-requests.md",key:"v-1b51365a",path:"/zh-cn/practice/enable-captcha-when-blocking-requests.html",headersStr:null,content:"# 拦截请求时启用验证码\n\n如今，许多攻击者都会使用自动工具攻击服务器，这些自动工具会尝试每一个漏洞，有的会被安全措施所拦截，有的则可以躲避检测。 如果攻击者觉得你的价值比较高，可能会手动攻击你的服务。我们并不能完美地防御这些攻击，但却能很简单地提高攻击的成本。\n\n当一个请求被拦截时，ngx_waf 会对该 IP 启用验证码，此时该 IP 想要继续访问就必须完成验证码。这基本可以废掉多数的自动攻击工具，因为这些工具会尝试每一个漏洞，而我们总能识别一些明显的攻击请求并启用验证码，而自动工具时难以通过验证的。对于手动攻击者，这也能提高他们的时间成本。\n\n下面是一个示例配置。\n\nhttp {\n    waf_zone name=waf size=20m;\n    \n    server {\n        waf_captcha off prov=xxx sitekey=xxx secret=xxx;\n        waf_action blacklist=CAPTCHA zone=waf:action;\n    }\n}\n",normalizedContent:"# 拦截请求时启用验证码\n\n如今，许多攻击者都会使用自动工具攻击服务器，这些自动工具会尝试每一个漏洞，有的会被安全措施所拦截，有的则可以躲避检测。 如果攻击者觉得你的价值比较高，可能会手动攻击你的服务。我们并不能完美地防御这些攻击，但却能很简单地提高攻击的成本。\n\n当一个请求被拦截时，ngx_waf 会对该 ip 启用验证码，此时该 ip 想要继续访问就必须完成验证码。这基本可以废掉多数的自动攻击工具，因为这些工具会尝试每一个漏洞，而我们总能识别一些明显的攻击请求并启用验证码，而自动工具时难以通过验证的。对于手动攻击者，这也能提高他们的时间成本。\n\n下面是一个示例配置。\n\nhttp {\n    waf_zone name=waf size=20m;\n    \n    server {\n        waf_captcha off prov=xxx sitekey=xxx secret=xxx;\n        waf_action blacklist=captcha zone=waf:action;\n    }\n}\n",charsets:{cjk:!0}},{title:"版本说明",frontmatter:{title:"版本说明",lang:"zh-CN"},regularPath:"/zh-cn/guide/version.html",relativePath:"zh-cn/guide/version.md",key:"v-374c71c8",path:"/zh-cn/guide/version.html",headers:[{level:2,title:"语义化版本",slug:"语义化版本",normalizedTitle:"语义化版本",charIndex:11},{level:2,title:"长期维护版（LTS）",slug:"长期维护版-lts",normalizedTitle:"长期维护版（lts）",charIndex:40},{level:2,title:"最新版（Current）",slug:"最新版-current",normalizedTitle:"最新版（current）",charIndex:263}],headersStr:"语义化版本 长期维护版（LTS） 最新版（Current）",content:"# 版本说明\n\n\n# 语义化版本\n\n本项目遵循语义化版本 2.0.0。\n\n\n# 长期维护版（LTS）\n\n长期维护版至少维护一年，并且维护期间只会修复 bug，特别的是严重的 bug，一些比较轻的 bug 可能不会修复。\n\n这个版本在大多数情况下是稳定的，但是没有功能性更新。\n\ngit clone -b master https://github.com/ADD-SP/ngx_waf.git\n\n# 或\n\ngit clone -b lts https://github.com/ADD-SP/ngx_waf.git\n\n\n\n# 最新版（Current）\n\n最新版的 bug 也会被修复，但是最新版包含了全部的更新，比如新功能、功能变动、功能删除、性能优化等。\n\n这个版本不如 LTS 版稳定，但是会有功能性更新。\n\ngit clone -b current https://github.com/ADD-SP/ngx_waf.git\n",normalizedContent:"# 版本说明\n\n\n# 语义化版本\n\n本项目遵循语义化版本 2.0.0。\n\n\n# 长期维护版（lts）\n\n长期维护版至少维护一年，并且维护期间只会修复 bug，特别的是严重的 bug，一些比较轻的 bug 可能不会修复。\n\n这个版本在大多数情况下是稳定的，但是没有功能性更新。\n\ngit clone -b master https://github.com/add-sp/ngx_waf.git\n\n# 或\n\ngit clone -b lts https://github.com/add-sp/ngx_waf.git\n\n\n\n# 最新版（current）\n\n最新版的 bug 也会被修复，但是最新版包含了全部的更新，比如新功能、功能变动、功能删除、性能优化等。\n\n这个版本不如 lts 版稳定，但是会有功能性更新。\n\ngit clone -b current https://github.com/add-sp/ngx_waf.git\n",charsets:{cjk:!0}},{title:"开启验证码",frontmatter:{title:"开启验证码",lang:"zh-CN"},regularPath:"/zh-cn/practice/enable-captcha.html",relativePath:"zh-cn/practice/enable-captcha.md",key:"v-6408f788",path:"/zh-cn/practice/enable-captcha.html",headersStr:null,content:"# 开启验证码\n\n当你的站点受到 CC 攻击时开启验证码是不错的选择，因为验证码可以帮助你进行人机识别。\n\n 1. 本模块目前支持三种验证码，分别是 hCaptcha、reCAPTCHAv2 和 reCAPTCHAv3。你应该选择一个并从其网站上申请到 Sitekey 和 Secret。\n 2. 修改 nginx 的配置文件\n    * 为整个站点开启验证码。\n      \n      server {\n          waf_captcha on prov=hCaptcha secret=your_secret sitekey=your_sitekey;\n      }\n      \n    \n    * 为某个路径开启验证码\n      \n      location {\n          waf_captcha on prov=hCaptcha secret=your_secret sitekey=your_sitekey;\n      }\n      \n    \n    * 当访问频率过高时开启验证码\n      \n      http {\n          waf_zone name=waf size=20m;\n          server {\n              waf_cc_deny on rate=1000r/m duration=1h zone=waf:cc;\n              waf_captcha off prov=hCaptcha secret=your_secret sitekey=your_sitekey;\n              waf_action cc_deny=CAPTCHA zone=waf:action;\n          }\n      }\n      \n\n 3. 重启 nginx。\n\n警告\n\n如果你配置了伪静态规则，或者配置了路径重写，你需要保证路径 /captcha 不被重写。 下面是一个修改示例。\n\n# BEGIN 修改前\nif (! -e $request_filename) {\n    rewrite ^(.*)$ index.php?s=$1 last break;\n}\n# END   修改前\n\n# BEGIN 修改后\ntry_files $uri $uri/ index.php?s=$1;\n# END   修改后\n\n\nSEO 优化\n\n开启验证码会影响到搜索引擎的工作， 所有你可以使用 waf_verify_bot 来放行某些搜索引擎的爬虫。\n\nwaf_verify_bot on;\n",normalizedContent:"# 开启验证码\n\n当你的站点受到 cc 攻击时开启验证码是不错的选择，因为验证码可以帮助你进行人机识别。\n\n 1. 本模块目前支持三种验证码，分别是 hcaptcha、recaptchav2 和 recaptchav3。你应该选择一个并从其网站上申请到 sitekey 和 secret。\n 2. 修改 nginx 的配置文件\n    * 为整个站点开启验证码。\n      \n      server {\n          waf_captcha on prov=hcaptcha secret=your_secret sitekey=your_sitekey;\n      }\n      \n    \n    * 为某个路径开启验证码\n      \n      location {\n          waf_captcha on prov=hcaptcha secret=your_secret sitekey=your_sitekey;\n      }\n      \n    \n    * 当访问频率过高时开启验证码\n      \n      http {\n          waf_zone name=waf size=20m;\n          server {\n              waf_cc_deny on rate=1000r/m duration=1h zone=waf:cc;\n              waf_captcha off prov=hcaptcha secret=your_secret sitekey=your_sitekey;\n              waf_action cc_deny=captcha zone=waf:action;\n          }\n      }\n      \n\n 3. 重启 nginx。\n\n警告\n\n如果你配置了伪静态规则，或者配置了路径重写，你需要保证路径 /captcha 不被重写。 下面是一个修改示例。\n\n# begin 修改前\nif (! -e $request_filename) {\n    rewrite ^(.*)$ index.php?s=$1 last break;\n}\n# end   修改前\n\n# begin 修改后\ntry_files $uri $uri/ index.php?s=$1;\n# end   修改后\n\n\nseo 优化\n\n开启验证码会影响到搜索引擎的工作， 所有你可以使用 waf_verify_bot 来放行某些搜索引擎的爬虫。\n\nwaf_verify_bot on;\n",charsets:{cjk:!0}},{title:"针对路径或文件限流",frontmatter:{title:"针对路径或文件限流",lang:"zh-CN"},regularPath:"/zh-cn/practice/limit-the-rate-per-arbitrary-url.html",relativePath:"zh-cn/practice/limit-the-rate-per-arbitrary-url.md",key:"v-1cb3d19c",path:"/zh-cn/practice/limit-the-rate-per-arbitrary-url.html",headers:[{level:2,title:"LTS 版本",slug:"lts-版本",normalizedTitle:"lts 版本",charIndex:62},{level:2,title:"Current 版本",slug:"current-版本",normalizedTitle:"current 版本",charIndex:263}],headersStr:"LTS 版本 Current 版本",content:"# 针对路径或文件限流\n\n有时你可能想要限制不同的路径或文件的请求速率，比如静态资源和动态资源使用不同的速率限制。\n\n\n# LTS 版本\n\n# 将静态资源的请求速率限制到 10,000 次/分钟。\nlocation /static/ {\n    waf_cc_deny rate=10000r/m duration=1h;\n}\n\n# 将动态资源的请求速率限制到 2,000 次/分钟。\nlocation /dynamic/ {\n    waf_cc_deny rate=2000r/m duration=1h;\n}\n\n\n\n# Current 版本\n\nhttp {\n    waf_zone name=waf size=20m;\n    server {\n        # 将静态资源的请求速率限制到 10,000 次/分钟。\n        location /static/ {\n            waf_cc_deny rate=10000r/m duration=1h zone=waf:cc_static;\n        }\n\n        # 将动态资源的请求速率限制到 2,000 次/分钟。\n        location /dynamic/ {\n            waf_cc_deny rate=2000r/m duration=1h zone=waf:cc_dynamic;\n        }\n    }\n}\n",normalizedContent:"# 针对路径或文件限流\n\n有时你可能想要限制不同的路径或文件的请求速率，比如静态资源和动态资源使用不同的速率限制。\n\n\n# lts 版本\n\n# 将静态资源的请求速率限制到 10,000 次/分钟。\nlocation /static/ {\n    waf_cc_deny rate=10000r/m duration=1h;\n}\n\n# 将动态资源的请求速率限制到 2,000 次/分钟。\nlocation /dynamic/ {\n    waf_cc_deny rate=2000r/m duration=1h;\n}\n\n\n\n# current 版本\n\nhttp {\n    waf_zone name=waf size=20m;\n    server {\n        # 将静态资源的请求速率限制到 10,000 次/分钟。\n        location /static/ {\n            waf_cc_deny rate=10000r/m duration=1h zone=waf:cc_static;\n        }\n\n        # 将动态资源的请求速率限制到 2,000 次/分钟。\n        location /dynamic/ {\n            waf_cc_deny rate=2000r/m duration=1h zone=waf:cc_dynamic;\n        }\n    }\n}\n",charsets:{cjk:!0}},{title:"开启 ModSecurity",frontmatter:{title:"开启 ModSecurity",lang:"zh-CN"},regularPath:"/zh-cn/practice/enable-modsecurity.html",relativePath:"zh-cn/practice/enable-modsecurity.md",key:"v-5ded71bc",path:"/zh-cn/practice/enable-modsecurity.html",headers:[{level:2,title:"第一步：下载规则集",slug:"第一步-下载规则集",normalizedTitle:"第一步：下载规则集",charIndex:159},{level:2,title:"第二步：拷贝规则文件",slug:"第二步-拷贝规则文件",normalizedTitle:"第二步：拷贝规则文件",charIndex:306},{level:2,title:"第三步：修改规则文件",slug:"第三步-修改规则文件",normalizedTitle:"第三步：修改规则文件",charIndex:668},{level:2,title:"第四步：加载规则",slug:"第四步-加载规则",normalizedTitle:"第四步：加载规则",charIndex:975},{level:2,title:"第五步：优化性能",slug:"第五步-优化性能",normalizedTitle:"第五步：优化性能",charIndex:1078},{level:2,title:"第六步：重启 nginx",slug:"第六步-重启-nginx",normalizedTitle:"第六步：重启 nginx",charIndex:1345},{level:2,title:"第七步：测试",slug:"第七步-测试",normalizedTitle:"第七步：测试",charIndex:1616},{level:2,title:"第八步：处理误报",slug:"第八步-处理误报",normalizedTitle:"第八步：处理误报",charIndex:1660}],headersStr:"第一步：下载规则集 第二步：拷贝规则文件 第三步：修改规则文件 第四步：加载规则 第五步：优化性能 第六步：重启 nginx 第七步：测试 第八步：处理误报",content:"# 开启 ModSecurity\n\n本项目提供的默认规则十分容易被绕过，而且许多用户并没有足够的能力和时间去维护一套可靠的规则。\n\n这种情况下你可以选择启用 ModSecurity 并启用 OWSAP(Open Web Application Security Project) 核心规则集 来增强防护能力。\n\n\n# 第一步：下载规则集\n\ncd /usr/local/src\ngit clone https://github.com/SpiderLabs/ModSecurity.git\ngit clone https://github.com/coreruleset/coreruleset.git\n\n\n\n# 第二步：拷贝规则文件\n\nmkdir -p /etc/nginx/rules/modsecurity\ncp coreruleset/crs-setup.conf.example /etc/nginx/rules/modsecurity/crs-setup.conf\ncp ModSecurity/modsecurity.conf-recommended /etc/nginx/rules/modsecurity/modsecurity.conf\ncp ModSecurity/unicode.mapping /etc/nginx/rules/modsecurity/unicode.mapping\ncp -r coreruleset/rules /etc/nginx/rules/modsecurity/owasp\n\n\n\n# 第三步：修改规则文件\n\n 1. 编辑 /etc/nginx/rules/modsecurity/modsecurity.conf，将 SecRuleEngine DetectionOnly 修改为 SecRuleEngine on。\n 2. 编辑 /etc/nginx/rules/modsecurity/modsecurity.conf，在文件末尾追加下列内容。\n    \n    Include /etc/nginx/rules/modsecurity/crs-setup.conf\n    Include /etc/nginx/rules/modsecurity/owasp/*.conf\n    \n\n\n# 第四步：加载规则\n\n编辑 nginx 的配置文件。\n\nwaf_modsecurity on file=/etc/nginx/rules/modsecurity/modsecurity.conf;\n\n\n\n# 第五步：优化性能\n\n启用规则后会导致性能大幅度降低，这是因为 ModSecurity 的规则引擎十分复杂，但这也为其带来了强大的功能。\n\n一般来说我们无需对一些静态文件进行检查，因此可以根据这一点来优化性能。\n\n编辑 nginx 的配置文件。\n\nlocation ~* \\.(gif|jpg|png|jpeg|webp|bmp|swf)$ {\n    waf_modsecurity off;\n}\n\nlocation ~* \\.(html|htm|js|css)$ {\n    waf_modsecurity off;\n}\n\n\n\n# 第六步：重启 nginx\n\nnginx -s stop\nnginx\n\n\n为什么不用 nginx -s reload ？\n\n因为目前 ModSecurity 存在内存泄露的 bug，直接重载 nginx 会导致内存泄露和性能降低。\n\n * ngin reload memory leak · Issue #2552 · SpiderLabs/ModSecurity\n * It often leads memory leak on nginx reload · Issue #2502 · SpiderLabs/ModSecurity\n\n\n# 第七步：测试\n\n此时你应该检查网站的运行情况，确保不会因为误报而导致网站异常。\n\n\n# 第八步：处理误报\n\n处理误报需要对 ModSecurity 的规则语法有所了解，本文不提供这类信息，你可以访问下面的链接来获取相关信息。\n\n * Including OWASP ModSecurity Core Rule Set – Welcome to netnea\n * Reference Manual (v2.x) · SpiderLabs/ModSecurity Wiki",normalizedContent:"# 开启 modsecurity\n\n本项目提供的默认规则十分容易被绕过，而且许多用户并没有足够的能力和时间去维护一套可靠的规则。\n\n这种情况下你可以选择启用 modsecurity 并启用 owsap(open web application security project) 核心规则集 来增强防护能力。\n\n\n# 第一步：下载规则集\n\ncd /usr/local/src\ngit clone https://github.com/spiderlabs/modsecurity.git\ngit clone https://github.com/coreruleset/coreruleset.git\n\n\n\n# 第二步：拷贝规则文件\n\nmkdir -p /etc/nginx/rules/modsecurity\ncp coreruleset/crs-setup.conf.example /etc/nginx/rules/modsecurity/crs-setup.conf\ncp modsecurity/modsecurity.conf-recommended /etc/nginx/rules/modsecurity/modsecurity.conf\ncp modsecurity/unicode.mapping /etc/nginx/rules/modsecurity/unicode.mapping\ncp -r coreruleset/rules /etc/nginx/rules/modsecurity/owasp\n\n\n\n# 第三步：修改规则文件\n\n 1. 编辑 /etc/nginx/rules/modsecurity/modsecurity.conf，将 secruleengine detectiononly 修改为 secruleengine on。\n 2. 编辑 /etc/nginx/rules/modsecurity/modsecurity.conf，在文件末尾追加下列内容。\n    \n    include /etc/nginx/rules/modsecurity/crs-setup.conf\n    include /etc/nginx/rules/modsecurity/owasp/*.conf\n    \n\n\n# 第四步：加载规则\n\n编辑 nginx 的配置文件。\n\nwaf_modsecurity on file=/etc/nginx/rules/modsecurity/modsecurity.conf;\n\n\n\n# 第五步：优化性能\n\n启用规则后会导致性能大幅度降低，这是因为 modsecurity 的规则引擎十分复杂，但这也为其带来了强大的功能。\n\n一般来说我们无需对一些静态文件进行检查，因此可以根据这一点来优化性能。\n\n编辑 nginx 的配置文件。\n\nlocation ~* \\.(gif|jpg|png|jpeg|webp|bmp|swf)$ {\n    waf_modsecurity off;\n}\n\nlocation ~* \\.(html|htm|js|css)$ {\n    waf_modsecurity off;\n}\n\n\n\n# 第六步：重启 nginx\n\nnginx -s stop\nnginx\n\n\n为什么不用 nginx -s reload ？\n\n因为目前 modsecurity 存在内存泄露的 bug，直接重载 nginx 会导致内存泄露和性能降低。\n\n * ngin reload memory leak · issue #2552 · spiderlabs/modsecurity\n * it often leads memory leak on nginx reload · issue #2502 · spiderlabs/modsecurity\n\n\n# 第七步：测试\n\n此时你应该检查网站的运行情况，确保不会因为误报而导致网站异常。\n\n\n# 第八步：处理误报\n\n处理误报需要对 modsecurity 的规则语法有所了解，本文不提供这类信息，你可以访问下面的链接来获取相关信息。\n\n * including owasp modsecurity core rule set – welcome to netnea\n * reference manual (v2.x) · spiderlabs/modsecurity wiki",charsets:{cjk:!0}},{title:"概述",frontmatter:{title:"概述",lang:"zh-CN"},regularPath:"/zh-cn/practice/overview.html",relativePath:"zh-cn/practice/overview.md",key:"v-7b84ce1c",path:"/zh-cn/practice/overview.html",headersStr:null,content:"# 概述\n\n因为模块的配置比较复杂，为了降低使用难度，我们在这里列出了一些常见用法。\n\n * 针对路径或文件限流\n * 开启验证码\n * 拦截请求时启用验证码\n * 在被攻击时降低带宽占用\n * 抵御分布式 CC 攻击（分布式 HTTP 洪水）\n * 开启 ModSecurity",normalizedContent:"# 概述\n\n因为模块的配置比较复杂，为了降低使用难度，我们在这里列出了一些常见用法。\n\n * 针对路径或文件限流\n * 开启验证码\n * 拦截请求时启用验证码\n * 在被攻击时降低带宽占用\n * 抵御分布式 cc 攻击（分布式 http 洪水）\n * 开启 modsecurity",charsets:{cjk:!0}},{title:"抵御分布式 CC 攻击（分布式 HTTP 洪水）",frontmatter:{title:"抵御分布式 CC 攻击（分布式 HTTP 洪水）",lang:"zh-CN"},regularPath:"/zh-cn/practice/protect-against-distributed-http-flood.html",relativePath:"zh-cn/practice/protect-against-distributed-http-flood.md",key:"v-0caea6c8",path:"/zh-cn/practice/protect-against-distributed-http-flood.html",headers:[{level:2,title:"开启验证码",slug:"开启验证码",normalizedTitle:"开启验证码",charIndex:216},{level:2,title:"使用五秒盾",slug:"使用五秒盾",normalizedTitle:"使用五秒盾",charIndex:236},{level:3,title:"LTS 版本",slug:"lts-版本",normalizedTitle:"lts 版本",charIndex:439},{level:3,title:"Current 版本",slug:"current-版本",normalizedTitle:"current 版本",charIndex:658},{level:2,title:"降低带宽占用",slug:"降低带宽占用",normalizedTitle:"降低带宽占用",charIndex:817}],headersStr:"开启验证码 使用五秒盾 LTS 版本 Current 版本 降低带宽占用",content:"# 抵御分布式 CC 攻击（分布式 HTTP 洪水）\n\nCC 攻击（HTTP 洪水）是指发送大量的 HTTP 请求来耗尽服务器的资源。\n\n如果攻击者使用的 IP 较少则防御较为简单，因为只需要限制 IP 的请求频率， 但是如果攻击者使用大量的 IP 进行攻击，仅仅限制 IP 的请求频率是无济于事的。 这种使用大量 IP 进行 CC 攻击的方式称为分布式 CC 攻击或分布式 HTTP 洪水。\n\n本模块提供了一些缓解方式。\n\n\n# 开启验证码\n\n详见开启验证码。\n\n\n# 使用五秒盾\n\n你可能听说过 Cloudflare 的五秒盾，本模块的五秒盾和 Cloudflare 的完全不同。 它的功能是检测客户端是否能够正确地支持 Cookie，比如发送 Cookie 和正确地处理 Set-Cookie 响应头。\n\n你可以从本项目的 assets/ 目录下找到 under-attack.html 并将其拷贝到某个路径下，然后通过修改 nginx 的配置文件来开启五秒盾。\n\n\n# LTS 版本\n\n * 为整个网站开启五秒盾\n   \n   server {\n       waf_under_attack on file=/path/to/under_attack.html;\n   }\n   \n\n * 为某个路径开启五秒盾\n   \n   location /path {\n       waf_under_attack on file=/path/to/under_attack.html;\n   }\n   \n\n\n# Current 版本\n\n * 为整个网站开启五秒盾\n   \n   server {\n       waf_under_attack on;\n   }\n   \n\n * 为某个路径开启五秒盾\n   \n   location /path {\n       waf_under_attack on;\n   }\n   \n\n\n# 降低带宽占用\n\n详见被攻击时降低带宽占用。",normalizedContent:"# 抵御分布式 cc 攻击（分布式 http 洪水）\n\ncc 攻击（http 洪水）是指发送大量的 http 请求来耗尽服务器的资源。\n\n如果攻击者使用的 ip 较少则防御较为简单，因为只需要限制 ip 的请求频率， 但是如果攻击者使用大量的 ip 进行攻击，仅仅限制 ip 的请求频率是无济于事的。 这种使用大量 ip 进行 cc 攻击的方式称为分布式 cc 攻击或分布式 http 洪水。\n\n本模块提供了一些缓解方式。\n\n\n# 开启验证码\n\n详见开启验证码。\n\n\n# 使用五秒盾\n\n你可能听说过 cloudflare 的五秒盾，本模块的五秒盾和 cloudflare 的完全不同。 它的功能是检测客户端是否能够正确地支持 cookie，比如发送 cookie 和正确地处理 set-cookie 响应头。\n\n你可以从本项目的 assets/ 目录下找到 under-attack.html 并将其拷贝到某个路径下，然后通过修改 nginx 的配置文件来开启五秒盾。\n\n\n# lts 版本\n\n * 为整个网站开启五秒盾\n   \n   server {\n       waf_under_attack on file=/path/to/under_attack.html;\n   }\n   \n\n * 为某个路径开启五秒盾\n   \n   location /path {\n       waf_under_attack on file=/path/to/under_attack.html;\n   }\n   \n\n\n# current 版本\n\n * 为整个网站开启五秒盾\n   \n   server {\n       waf_under_attack on;\n   }\n   \n\n * 为某个路径开启五秒盾\n   \n   location /path {\n       waf_under_attack on;\n   }\n   \n\n\n# 降低带宽占用\n\n详见被攻击时降低带宽占用。",charsets:{cjk:!0}},{title:"常见问题与解答",frontmatter:{title:"常见问题与解答",lang:"zh-CN"},regularPath:"/zh-cn/guide/faq.html",relativePath:"zh-cn/guide/faq.md",key:"v-313b9c48",path:"/zh-cn/guide/faq.html",headers:[{level:2,title:"本模块的性能如何？",slug:"本模块的性能如何",normalizedTitle:"本模块的性能如何？",charIndex:14},{level:2,title:"缓存策略",slug:"缓存策略",normalizedTitle:"缓存策略",charIndex:165},{level:2,title:"模块的内置变量与指令 if",slug:"模块的内置变量与指令-if",normalizedTitle:"模块的内置变量与指令 if",charIndex:179},{level:2,title:"ngx_http_access_module",slug:"ngx-http-access-module",normalizedTitle:"ngx_http_access_module",charIndex:286},{level:2,title:"可以在运行时修改规则么？",slug:"可以在运行时修改规则么",normalizedTitle:"可以在运行时修改规则么？",charIndex:613},{level:2,title:"CDN 对 IP 检查的影响",slug:"cdn-对-ip-检查的影响",normalizedTitle:"cdn 对 ip 检查的影响",charIndex:684},{level:2,title:"正则表达式拒绝服务攻击（ReDoS）",slug:"正则表达式拒绝服务攻击-redos",normalizedTitle:"正则表达式拒绝服务攻击（redos）",charIndex:768},{level:2,title:'fork() failed while spawning "worker process" (12: Cannot allocate memory)',slug:"fork-failed-while-spawning-worker-process-12-cannot-allocate-memory",normalizedTitle:"fork() failed while spawning &quot;worker process&quot; (12: cannot allocate memory)",charIndex:null},{level:2,title:"PANIC: unprotected error in call to Lua API (attempt to index a nil value)",slug:"panic-unprotected-error-in-call-to-lua-api-attempt-to-index-a-nil-value",normalizedTitle:"panic: unprotected error in call to lua api (attempt to index a nil value)",charIndex:1265}],headersStr:'本模块的性能如何？ 缓存策略 模块的内置变量与指令 if ngx_http_access_module 可以在运行时修改规则么？ CDN 对 IP 检查的影响 正则表达式拒绝服务攻击（ReDoS） fork() failed while spawning "worker process" (12: Cannot allocate memory) PANIC: unprotected error in call to Lua API (attempt to index a nil value)',content:'# 常见问题与解答\n\n\n# 本模块的性能如何？\n\nIP 检查和 CC 防御花费常数时间，其它的检查花费 O(nm) 的时间，其中 n 是相关规则的条数，m 为执行正则匹配的时间复杂度，但是每次检查过后会自动缓存本次检查的结果，下次检查相同的目标时就可以使用缓存而不是检查全部的规则。不会缓存 POST 请求体的检查结果。\n\n\n# 缓存策略\n\nLRU\n\n\n# 模块的内置变量与指令 if\n\n简而言之，由于 NGINX 的状态机模型，你无法将本模块的任何内置变量（如 $waf_rule_type）用于指令 if，但是指令 access_log 的参数 if 除外。\n\n\n# ngx_http_access_module\n\n当本模块与 ngx_http_access_module 一起使用时，ngx_http_access_module 会先于本模块运行。\n\n\n# post检测失效\n\n本模块出于性能考虑只会在 Post 请求体在内存中时检查，若不在内存中则跳过检查。 您可以通过修改配置文件来解决这个问题。\n\nhttp {\n    ...\n    client_body_buffer_size 10M;\n    client_body_in_file_only off;\n    ...\n}\n\n\nclient_body_buffer_size 的说明 和 client_body_in_file_only 的说明。\n\n\n# 可以在运行时修改规则么？\n\n不可以，本模块只会在 nginx 读取配置时读取规则。nginx 会在启动和 reload 时读取配置。\n\n\n# CDN 对 IP 检查的影响\n\n如果你使用 ngx_http_realip_module 获取真实 IP 的话，则本模块在检查 IP 时就会使用真实的 IP。\n\n\n# 正则表达式拒绝服务攻击（ReDoS）\n\nReDoS 是指使用的正则表达式存在缺陷时，攻击者可以使用一个精心构造的字符串来大量地消耗服务器的资源，比如导致正则引擎的灾难性的回溯。\n\n本模块有两种措施可以用来缓解此类攻击。\n\n * 本模块使用的 PCRE 库执行正则表达式，PCRE 在编译时即可指定主循环的计数器上限，超出上限自动停止。默认上限为 500000。你也可以在编译时手动调整，详见 pcre2 build man page。\n\n * 本模块会缓存所有正则的检查结果（POST 检查除外），这样在不触发缓存淘汰流程的情况下，下次遇到用于攻击的字符串也无需再次执行正则表达式。\n\n\n# fork() failed while spawning "worker process" (12: Cannot allocate memory)\n\n可能是过多地使用 nginx -s reload 导致的，本模块会在读取配置的时候申请一些内存，但是不知为何 nginx -s reload 之后这些内存不会立即释放，所以短时间内频繁 nginx -s reload 就极可能导致这个错误。\n\n\n# PANIC: unprotected error in call to Lua API (attempt to index a nil value)\n\n请检查你的 libmodsecurity 的版本，在测试中 libmodsecurity v3.0.3 存在这个 Bug，请升级到 libmodsecurity v3.0.5。',normalizedContent:'# 常见问题与解答\n\n\n# 本模块的性能如何？\n\nip 检查和 cc 防御花费常数时间，其它的检查花费 o(nm) 的时间，其中 n 是相关规则的条数，m 为执行正则匹配的时间复杂度，但是每次检查过后会自动缓存本次检查的结果，下次检查相同的目标时就可以使用缓存而不是检查全部的规则。不会缓存 post 请求体的检查结果。\n\n\n# 缓存策略\n\nlru\n\n\n# 模块的内置变量与指令 if\n\n简而言之，由于 nginx 的状态机模型，你无法将本模块的任何内置变量（如 $waf_rule_type）用于指令 if，但是指令 access_log 的参数 if 除外。\n\n\n# ngx_http_access_module\n\n当本模块与 ngx_http_access_module 一起使用时，ngx_http_access_module 会先于本模块运行。\n\n\n# post检测失效\n\n本模块出于性能考虑只会在 post 请求体在内存中时检查，若不在内存中则跳过检查。 您可以通过修改配置文件来解决这个问题。\n\nhttp {\n    ...\n    client_body_buffer_size 10m;\n    client_body_in_file_only off;\n    ...\n}\n\n\nclient_body_buffer_size 的说明 和 client_body_in_file_only 的说明。\n\n\n# 可以在运行时修改规则么？\n\n不可以，本模块只会在 nginx 读取配置时读取规则。nginx 会在启动和 reload 时读取配置。\n\n\n# cdn 对 ip 检查的影响\n\n如果你使用 ngx_http_realip_module 获取真实 ip 的话，则本模块在检查 ip 时就会使用真实的 ip。\n\n\n# 正则表达式拒绝服务攻击（redos）\n\nredos 是指使用的正则表达式存在缺陷时，攻击者可以使用一个精心构造的字符串来大量地消耗服务器的资源，比如导致正则引擎的灾难性的回溯。\n\n本模块有两种措施可以用来缓解此类攻击。\n\n * 本模块使用的 pcre 库执行正则表达式，pcre 在编译时即可指定主循环的计数器上限，超出上限自动停止。默认上限为 500000。你也可以在编译时手动调整，详见 pcre2 build man page。\n\n * 本模块会缓存所有正则的检查结果（post 检查除外），这样在不触发缓存淘汰流程的情况下，下次遇到用于攻击的字符串也无需再次执行正则表达式。\n\n\n# fork() failed while spawning "worker process" (12: cannot allocate memory)\n\n可能是过多地使用 nginx -s reload 导致的，本模块会在读取配置的时候申请一些内存，但是不知为何 nginx -s reload 之后这些内存不会立即释放，所以短时间内频繁 nginx -s reload 就极可能导致这个错误。\n\n\n# panic: unprotected error in call to lua api (attempt to index a nil value)\n\n请检查你的 libmodsecurity 的版本，在测试中 libmodsecurity v3.0.3 存在这个 bug，请升级到 libmodsecurity v3.0.5。',charsets:{cjk:!0}},{title:"开发计划",frontmatter:{title:"开发计划",lang:"zh-CN"},regularPath:"/zh-cn/roadmap/overview.html",relativePath:"zh-cn/roadmap/overview.md",key:"v-2e6d9fa6",path:"/zh-cn/roadmap/overview.html",headers:[{level:2,title:"列表",slug:"列表",normalizedTitle:"列表",charIndex:48}],headersStr:"列表",content:"# 开发计划\n\n本页面会列出项目的开发计划，包括但不限于新功能。\n\n期待您宝贵的建议！\n\n\n# 列表",normalizedContent:"# 开发计划\n\n本页面会列出项目的开发计划，包括但不限于新功能。\n\n期待您宝贵的建议！\n\n\n# 列表",charsets:{cjk:!0}},{title:"被攻击时降低带宽占用",frontmatter:{title:"被攻击时降低带宽占用",lang:"zh-CN"},regularPath:"/zh-cn/practice/reduce-bandwidth-usage-when-attacked.html",relativePath:"zh-cn/practice/reduce-bandwidth-usage-when-attacked.md",key:"v-1367e85c",path:"/zh-cn/practice/reduce-bandwidth-usage-when-attacked.html",headers:[{level:2,title:"LTS 版本",slug:"lts-版本",normalizedTitle:"lts 版本",charIndex:120},{level:2,title:"Current 版本",slug:"current-版本",normalizedTitle:"current 版本",charIndex:162}],headersStr:"LTS 版本 Current 版本",content:"# 被攻击时降低带宽占用\n\n当你受到 CC 攻击时，攻击者的 IP 已经被 CC 防护拉黑，但是你的上下行带宽依然很高， 这是因为 CC 防护会返回一个 503 状态码，因此占用了你的带宽。\n\n你可以使用下面的配置来降低带宽占用。\n\n\n# LTS 版本\n\nwaf_http_status cc_deny=444;\n\n\n\n# Current 版本\n\nwaf_action cc_deny=444;\n\n\n444 状态码是 nginx 定义的一个非标准的 HTTP 状态码，其作用就是直接关闭连接，不再发送任何数据。\n\n警告\n\n如果你使用了 444 状态码，那么在用户看来你的网站就像是不存在一样。这是因为网站出错一般都会有 HTTP 状态码用来提示错误， 如果访问一个网站连错误提示都没有，那么大概率是这个网站不存在。",normalizedContent:"# 被攻击时降低带宽占用\n\n当你受到 cc 攻击时，攻击者的 ip 已经被 cc 防护拉黑，但是你的上下行带宽依然很高， 这是因为 cc 防护会返回一个 503 状态码，因此占用了你的带宽。\n\n你可以使用下面的配置来降低带宽占用。\n\n\n# lts 版本\n\nwaf_http_status cc_deny=444;\n\n\n\n# current 版本\n\nwaf_action cc_deny=444;\n\n\n444 状态码是 nginx 定义的一个非标准的 http 状态码，其作用就是直接关闭连接，不再发送任何数据。\n\n警告\n\n如果你使用了 444 状态码，那么在用户看来你的网站就像是不存在一样。这是因为网站出错一般都会有 http 状态码用来提示错误， 如果访问一个网站连错误提示都没有，那么大概率是这个网站不存在。",charsets:{cjk:!0}}],themeConfig:{repo:"https://github.com/ADD-SP/ngx_waf/",repoLabel:"Github",docsRepo:"https://github.com/ADD-SP/ngx_waf-docs/",docsDir:"docs",editLinks:!0,smoothScroll:!0,locales:{"/":{selectText:"Languages",label:"English",lastUpdated:"Last Updated",editLinkText:"Help us improve this page!",nav:[{text:"Best Practices",link:"/practice/overview.html"},{text:"Cross-version Upgrades",link:"/advance/upgrade.md"},{text:"CHANGES",link:"/changes/overview.html"}],sidebar:[{title:"Quick Start",path:"/guide/overview.html",children:["/guide/overview.md","/guide/version.md","/guide/compatibility.md","/guide/installation.md","/guide/configuration.md","/guide/test.md","/guide/faq.md"]},{title:"Advanced Guide",path:"/advance/directive.html",children:["/advance/directive.md","/advance/rule.md","/advance/priority.md","/advance/variable.md","/advance/log.md","/advance/upgrade.md","/advance/issue.md"]},{title:"Roadmap (Advice Needed)",path:"/roadmap/overview.html",children:[]}]},"/zh-cn/":{selectText:"选择语言",label:"简体中文",lastUpdated:"最后一次更新",editLinkText:"帮助我们改善此页面！",nav:[{text:"最佳实践",link:"/zh-cn/practice/overview.html"},{text:"跨版本升级",link:"/zh-cn/advance/upgrade.md"},{text:"更新日志",link:"/zh-cn/changes/overview.html"}],sidebar:[{title:"快速上手",path:"/zh-cn/guide/overview.html",children:["/zh-cn/guide/overview.md","/zh-cn/guide/version.md","/zh-cn/guide/compatibility.md","/zh-cn/guide/installation.md","/zh-cn/guide/configuration.md","/zh-cn/guide/test.md","/zh-cn/guide/faq.md"]},{title:"进阶指南",path:"/zh-cn/advance/directive.html",children:["/zh-cn/advance/directive.md","/zh-cn/advance/rule.md","/zh-cn/advance/priority.md","/zh-cn/advance/variable.md","/zh-cn/advance/log.md","/zh-cn/advance/upgrade.md","/zh-cn/advance/issue.md"]},{title:"开发计划（建议征集）",path:"/zh-cn/roadmap/overview.html",children:[]}]}}},locales:{"/":{lang:"en",title:"ngx_waf",description:"A web application firewall module for nginx without complex configuration.'",path:"/"},"/zh-cn/":{lang:"zh-CN",title:"ngx_waf",description:"使用简单的 nginx 防火墙模块",path:"/zh-cn/"}}};t(272);Wt.component("Badge",()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,349))),Wt.component("CodeBlock",()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,345))),Wt.component("CodeGroup",()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,346)));t(273),t(274);function $s(e){const n=document.documentElement.getBoundingClientRect(),t=e.getBoundingClientRect();return{x:t.left-n.left,y:t.top-n.top}}var js=[{},({Vue:e})=>{e.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({Vue:e,router:n})=>{n.options.scrollBehavior=(n,t,r)=>{if(r)return window.scrollTo({top:r.y,behavior:"smooth"});if(n.hash){if(e.$vuepress.$get("disableScrollBehavior"))return!1;const t=document.querySelector(n.hash);return!!t&&window.scrollTo({top:$s(t).y,behavior:"smooth"})}return window.scrollTo({top:0,behavior:"smooth"})}}],Rs=[];class Ms extends class{constructor(){this.store=new Wt({data:{state:{}}})}$get(e){return this.store.state[e]}$set(e,n){Wt.set(this.store.state,e,n)}$emit(...e){this.store.$emit(...e)}$on(...e){this.store.$on(...e)}}{}Object.assign(Ms.prototype,{getPageAsyncComponent:ss,getLayoutAsyncComponent:ls,getAsyncComponent:cs,getVueComponent:ds});var Ns={install(e){const n=new Ms;e.$vuepress=n,e.prototype.$vuepress=n}};function Fs(e,n){const t=n.toLowerCase();return e.options.routes.some(e=>e.path.toLowerCase()===t)}var Hs={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(e){const n=this.pageKey||this.$parent.$page.key;return hs("pageKey",n),Wt.component(n)||Wt.component(n,ss(n)),Wt.component(n)?e(n):e("")}},Ds={functional:!0,props:{slotKey:String,required:!0},render:(e,{props:n,slots:t})=>e("div",{class:["content__"+n.slotKey]},t()[n.slotKey])},qs={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Bs=(t(275),t(276),Object(Es.a)(qs,(function(){var e=this._self._c;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),Gs={functional:!0,render(e,{parent:n,children:t}){if(n._isMounted)return t;n.$once("hook:mounted",()=>{n.$forceUpdate()})}};Wt.config.productionTip=!1,Wt.use(Go),Wt.use(Ns),Wt.mixin(function(e,n,t=Wt){!function(e){e.locales&&Object.keys(e.locales).forEach(n=>{e.locales[n].path=n});Object.freeze(e)}(n),t.$vuepress.$set("siteData",n);const r=new(e(t.$vuepress.$get("siteData"))),i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(r)),a={};return Object.keys(i).reduce((e,n)=>(n.startsWith("$")&&(e[n]=i[n].get),e),a),{computed:a}}(e=>class{setPage(e){this.__page=e}get $site(){return e}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:e={}}=this.$site;let n,t;for(const r in e)"/"===r?t=e[r]:0===this.$page.path.indexOf(r)&&(n=e[r]);return n||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:e}=this.$page.frontmatter;return"string"==typeof e&&e}get $title(){const e=this.$page,{metaTitle:n}=this.$page.frontmatter;if("string"==typeof n)return n;const t=this.$siteTitle,r=e.frontmatter.home?null:e.frontmatter.title||e.title;return t?r?r+" | "+t:t:r||"VuePress"}get $description(){const e=function(e){if(e){const n=e.filter(e=>"description"===e.name)[0];if(n)return n.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(e,n){for(let t=0;t<e.length;t++){const r=e[t];if(r.path.toLowerCase()===n.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Us)),Wt.component("Content",Hs),Wt.component("ContentSlotsDistributor",Ds),Wt.component("OutboundLink",Bs),Wt.component("ClientOnly",Gs),Wt.component("Layout",ls("Layout")),Wt.component("NotFound",ls("NotFound")),Wt.prototype.$withBase=function(e){const n=this.$site.base;return"/"===e.charAt(0)?n+e.slice(1):e},window.__VUEPRESS__={version:"1.9.10",hash:""},async function(e){const n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Us.routerBase||Us.base,t=new Go({base:n,mode:"history",fallback:!1,routes:Ls,scrollBehavior:(e,n,t)=>t||(e.hash?!Wt.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})});!function(e){e.beforeEach((n,t,r)=>{if(Fs(e,n.path))r();else if(/(\/|\.html)$/.test(n.path))if(/\/$/.test(n.path)){const t=n.path.replace(/\/$/,"")+".html";Fs(e,t)?r(t):r()}else r();else{const t=n.path+"/",i=n.path+".html";Fs(e,i)?r(i):Fs(e,t)?r(t):r()}})}(t);const r={};try{await Promise.all(js.filter(e=>"function"==typeof e).map(n=>n({Vue:Wt,options:r,router:t,siteData:Us,isServer:e})))}catch(e){console.error(e)}return{app:new Wt(Object.assign(r,{router:t,render:e=>e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},Rs.map(n=>e(n)))])})),router:t}}(!1).then(({app:e,router:n})=>{n.onReady(()=>{e.$mount("#app")})})}]);